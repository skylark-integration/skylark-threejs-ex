/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["../threex"],function(t){"use strict";var n={quicksortIP:function(t,n,e){for(var o,i,r=[],s=-1,h=0,u=t.length/n-1,c=0,f=0,l=0,a=function(e,o){for(e*=n,o*=n,l=0;l<n;l++)c=t[e+l],t[e+l]=t[o+l],t[o+l]=c},p=new Float32Array(n),b=new Float32Array(n);;)if(u-h<=25){for(i=h+1;i<=u;i++){for(f=0;f<n;f++)p[f]=t[i*n+f];for(o=i-1;o>=h&&t[o*n+e]>p[e];){for(f=0;f<n;f++)t[(o+1)*n+f]=t[o*n+f];o--}for(f=0;f<n;f++)t[(o+1)*n+f]=p[f]}if(-1==s)break;u=r[s--],h=r[s--]}else{for(i=u,a(h+u>>1,o=h+1),t[h*n+e]>t[u*n+e]&&a(h,u),t[o*n+e]>t[u*n+e]&&a(o,u),t[h*n+e]>t[o*n+e]&&a(h,o),f=0;f<n;f++)b[f]=t[o*n+f];for(;;){do{o++}while(t[o*n+e]<b[e]);do{i--}while(t[i*n+e]>b[e]);if(i<o)break;a(o,i)}for(f=0;f<n;f++)t[(h+1)*n+f]=t[i*n+f],t[i*n+f]=b[f];u-o+1>=i-h?(r[++s]=o,r[++s]=u,u=i-1):(r[++s]=h,r[++s]=i-1,h=o)}return t},Kdtree:function(t,e,o){var i=this,r=0,s=function(t,n){return t.subarray(n*o,n*o+o)};this.root=function t(e,h,u,c){var f,l,a=h%o,p=e.length/o;return h>r&&(r=h),0===p?null:1===p?new i.Node(s(e,0),h,u,c):(n.quicksortIP(e,o,a),f=Math.floor(p/2),(l=new i.Node(s(e,f),h,u,f+c)).left=t(e.subarray(0,f*o),h+1,l,c),l.right=t(e.subarray((f+1)*o,e.length),h+1,l,c+f+1),l)}(t,0,null,0),this.getMaxDepth=function(){return r},this.nearest=function(t,r,s){var h,u,c;if(c=new n.Kdtree.BinaryHeap(function(t){return-t[1]}),s)for(h=0;h<r;h+=1)c.push([null,s]);for(function n(i){var s,h,u,f,l=i.depth%o,a=e(t,i.obj),p=[];function b(t,n){c.push([t,n]),c.size()>r&&c.pop()}for(f=0;f<o;f+=1)f===i.depth%o?p[f]=t[f]:p[f]=i.obj[f];h=e(p,i.obj),null!==i.right||null!==i.left?(n(s=null===i.right?i.left:null===i.left?i.right:t[l]<i.obj[l]?i.left:i.right),(c.size()<r||a<c.peek()[1])&&b(i,a),(c.size()<r||Math.abs(h)<c.peek()[1])&&null!==(u=s===i.left?i.right:i.left)&&n(u)):(c.size()<r||a<c.peek()[1])&&b(i,a)}(i.root),u=[],h=0;h<r;h+=1)c.content[h][0]&&u.push([c.content[h][0],c.content[h][1]]);return u}}};return n.Kdtree.prototype.Node=function(t,n,e,o){this.obj=t,this.left=null,this.right=null,this.parent=e,this.depth=n,this.pos=o},n.Kdtree.BinaryHeap=function(t){this.content=[],this.scoreFunction=t},n.Kdtree.BinaryHeap.prototype={push:function(t){this.content.push(t),this.bubbleUp(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.sinkDown(0)),t},peek:function(){return this.content[0]},remove:function(t){for(var n=this.content.length,e=0;e<n;e++)if(this.content[e]==t){var o=this.content.pop();return void(e!=n-1&&(this.content[e]=o,this.scoreFunction(o)<this.scoreFunction(t)?this.bubbleUp(e):this.sinkDown(e)))}throw new Error("Node not found.")},size:function(){return this.content.length},bubbleUp:function(t){for(var n=this.content[t];t>0;){var e=Math.floor((t+1)/2)-1,o=this.content[e];if(!(this.scoreFunction(n)<this.scoreFunction(o)))break;this.content[e]=n,this.content[t]=o,t=e}},sinkDown:function(t){for(var n=this.content.length,e=this.content[t],o=this.scoreFunction(e);;){var i=2*(t+1),r=i-1,s=null;if(r<n){var h=this.content[r],u=this.scoreFunction(h);u<o&&(s=r)}if(i<n){var c=this.content[i];this.scoreFunction(c)<(null===s?o:u)&&(s=i)}if(null===s)break;this.content[t]=this.content[s],this.content[s]=e,t=s}}},t.utils.TypedArrayUtils=n});
//# sourceMappingURL=../sourcemaps/utils/TypedArrayUtils.js.map
