/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(t){return t.TypedArrayUtils={},t.TypedArrayUtils.quicksortIP=function(t,n,e){for(var r,o,i=[],s=-1,h=0,u=t.length/n-1,c=0,l=0,f=0,a=function(e,r){for(e*=n,r*=n,f=0;f<n;f++)c=t[e+f],t[e+f]=t[r+f],t[r+f]=c},p=new Float32Array(n),y=new Float32Array(n);;)if(u-h<=25){for(o=h+1;o<=u;o++){for(l=0;l<n;l++)p[l]=t[o*n+l];for(r=o-1;r>=h&&t[r*n+e]>p[e];){for(l=0;l<n;l++)t[(r+1)*n+l]=t[r*n+l];r--}for(l=0;l<n;l++)t[(r+1)*n+l]=p[l]}if(-1==s)break;u=i[s--],h=i[s--]}else{for(o=u,a(h+u>>1,r=h+1),t[h*n+e]>t[u*n+e]&&a(h,u),t[r*n+e]>t[u*n+e]&&a(r,u),t[h*n+e]>t[r*n+e]&&a(h,r),l=0;l<n;l++)y[l]=t[r*n+l];for(;;){do{r++}while(t[r*n+e]<y[e]);do{o--}while(t[o*n+e]>y[e]);if(o<r)break;a(r,o)}for(l=0;l<n;l++)t[(h+1)*n+l]=t[o*n+l],t[o*n+l]=y[l];u-r+1>=o-h?(i[++s]=r,i[++s]=u,u=o-1):(i[++s]=h,i[++s]=o-1,h=r)}return t},t.TypedArrayUtils.Kdtree=function(n,e,r){var o=this,i=0,s=function(t,n){return t.subarray(n*r,n*r+r)};this.root=function n(e,h,u,c){var l,f,a=h%r,p=e.length/r;return h>i&&(i=h),0===p?null:1===p?new o.Node(s(e,0),h,u,c):(t.TypedArrayUtils.quicksortIP(e,r,a),l=Math.floor(p/2),(f=new o.Node(s(e,l),h,u,l+c)).left=n(e.subarray(0,l*r),h+1,f,c),f.right=n(e.subarray((l+1)*r,e.length),h+1,f,c+l+1),f)}(n,0,null,0),this.getMaxDepth=function(){return i},this.nearest=function(n,i,s){var h,u,c;if(c=new t.TypedArrayUtils.Kdtree.BinaryHeap(function(t){return-t[1]}),s)for(h=0;h<i;h+=1)c.push([null,s]);for(function t(o){var s,h,u,l,f=o.depth%r,a=e(n,o.obj),p=[];function y(t,n){c.push([t,n]),c.size()>i&&c.pop()}for(l=0;l<r;l+=1)l===o.depth%r?p[l]=n[l]:p[l]=o.obj[l];h=e(p,o.obj),null!==o.right||null!==o.left?(t(s=null===o.right?o.left:null===o.left?o.right:n[f]<o.obj[f]?o.left:o.right),(c.size()<i||a<c.peek()[1])&&y(o,a),(c.size()<i||Math.abs(h)<c.peek()[1])&&null!==(u=s===o.left?o.right:o.left)&&t(u)):(c.size()<i||a<c.peek()[1])&&y(o,a)}(o.root),u=[],h=0;h<i;h+=1)c.content[h][0]&&u.push([c.content[h][0],c.content[h][1]]);return u}},t.TypedArrayUtils.Kdtree.prototype.Node=function(t,n,e,r){this.obj=t,this.left=null,this.right=null,this.parent=e,this.depth=n,this.pos=r},t.TypedArrayUtils.Kdtree.BinaryHeap=function(t){this.content=[],this.scoreFunction=t},t.TypedArrayUtils.Kdtree.BinaryHeap.prototype={push:function(t){this.content.push(t),this.bubbleUp(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.sinkDown(0)),t},peek:function(){return this.content[0]},remove:function(t){for(var n=this.content.length,e=0;e<n;e++)if(this.content[e]==t){var r=this.content.pop();return void(e!=n-1&&(this.content[e]=r,this.scoreFunction(r)<this.scoreFunction(t)?this.bubbleUp(e):this.sinkDown(e)))}throw new Error("Node not found.")},size:function(){return this.content.length},bubbleUp:function(t){for(var n=this.content[t];t>0;){var e=Math.floor((t+1)/2)-1,r=this.content[e];if(!(this.scoreFunction(n)<this.scoreFunction(r)))break;this.content[e]=n,this.content[t]=r,t=e}},sinkDown:function(t){for(var n=this.content.length,e=this.content[t],r=this.scoreFunction(e);;){var o=2*(t+1),i=o-1,s=null;if(i<n){var h=this.content[i],u=this.scoreFunction(h);u<r&&(s=i)}if(o<n){var c=this.content[o];this.scoreFunction(c)<(null===s?r:u)&&(s=o)}if(null===s)break;this.content[t]=this.content[s],this.content[s]=e,t=s}}},t.TypedArrayUtils});
//# sourceMappingURL=../sourcemaps/utils/TypedArrayUtils.js.map
