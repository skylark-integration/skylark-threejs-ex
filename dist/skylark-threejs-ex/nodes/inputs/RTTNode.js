/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../core/NodeBuilder","../materials/NodeMaterial","./TextureNode"],function(e,r,t,a){"use strict";function s(r,s,i,o){o=o||{},this.input=i,this.clear=void 0===o.clear||o.clear,this.renderTarget=new e.WebGLRenderTarget(r,s,o),this.material=new t,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneBufferGeometry(2,2),this.material),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.render=!0,a.call(this,this.renderTarget.texture)}return s.prototype=Object.create(a.prototype),s.prototype.constructor=s,s.prototype.nodeType="RTT",s.prototype.build=function(e,t,s){var i=new r;return i.nodes=e.nodes,i.updaters=e.updaters,this.material.fragment.value=this.input,this.material.build({builder:i}),a.prototype.build.call(this,e,t,s)},s.prototype.updateFramesaveTo=function(r){if(this.saveTo.render=!1,this.saveTo!==this.saveToCurrent){this.saveToMaterial&&this.saveToMaterial.dispose();var a=new t;a.fragment.value=this,a.build();var s=new e.Scene,i=new e.Mesh(new e.PlaneBufferGeometry(2,2),a);i.frustumCulled=!1,s.add(i),this.saveToScene=s,this.saveToMaterial=a}this.saveToCurrent=this.saveTo,r.renderer.setRenderTarget(this.saveTo.renderTarget),this.saveTo.clear&&r.renderer.clear(),r.renderer.render(this.saveToScene,this.camera)},s.prototype.updateFrame=function(e){e.renderer?(this.saveTo&&!1===this.saveTo.render&&this.updateFramesaveTo(e),this.render&&(this.material.uniforms.renderTexture&&(this.material.uniforms.renderTexture.value=e.renderTexture),e.renderer.setRenderTarget(this.renderTarget),this.clear&&e.renderer.clear(),e.renderer.render(this.scene,this.camera)),this.saveTo&&!0===this.saveTo.render&&this.updateFramesaveTo(e)):console.warn("RTTNode need a renderer in NodeFrame")},s.prototype.copy=function(e){return a.prototype.copy.call(this,e),this.saveTo=e.saveTo,this},s.prototype.toJSON=function(e){var r=this.getJSONNode(e);return r||(r=a.prototype.toJSON.call(this,e),this.saveTo&&(r.saveTo=this.saveTo.toJSON(e).uuid)),r},s});
//# sourceMappingURL=../../sourcemaps/nodes/inputs/RTTNode.js.map
