/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../inputs/Vector3Node"],function(t,i){"use strict";function e(e,s){i.call(this),this.params={},this.velocity=new t.Vector3,this.setTarget(e),this.setParams(s)}return e.prototype=Object.create(i.prototype),e.prototype.constructor=e,e.prototype.nodeType="Velocity",e.prototype.getReadonly=function(){return!1},e.prototype.setParams=function(i){switch(this.params.type){case"elastic":delete this.moment,delete this.speed,delete this.springVelocity,delete this.lastVelocity}switch(this.params=i||{},this.params.type){case"elastic":this.moment=new t.Vector3,this.speed=new t.Vector3,this.springVelocity=new t.Vector3,this.lastVelocity=new t.Vector3}},e.prototype.setTarget=function(i){this.target&&(delete this.position,delete this.oldPosition),this.target=i,i&&(this.position=i.getWorldPosition(this.position||new t.Vector3),this.oldPosition=this.position.clone())},e.prototype.updateFrameVelocity=function(){this.target&&(this.position=this.target.getWorldPosition(this.position||new t.Vector3),this.velocity.subVectors(this.position,this.oldPosition),this.oldPosition.copy(this.position))},e.prototype.updateFrame=function(t){switch(this.updateFrameVelocity(t),this.params.type){case"elastic":var i=t.delta*(this.params.fps||60),e=Math.pow(this.params.spring,i),s=Math.pow(this.params.damping,i);this.velocity.multiplyScalar(Math.exp(-this.params.damping*i)),this.velocity.add(this.springVelocity),this.velocity.add(this.speed.multiplyScalar(s).multiplyScalar(1-e)),this.speed.subVectors(this.velocity,this.lastVelocity),this.springVelocity.add(this.speed),this.springVelocity.multiplyScalar(e),this.moment.add(this.springVelocity),this.moment.multiplyScalar(s),this.lastVelocity.copy(this.velocity),this.value.copy(this.moment);break;default:this.value.copy(this.velocity)}},e.prototype.copy=function(t){return i.prototype.copy.call(this,t),t.target&&this.setTarget(t.target),this.setParams(t.params),this},e.prototype.toJSON=function(t){var i=this.getJSONNode(t);return i||(i=this.createJSONNode(t),this.target&&(i.target=this.target.uuid),i.params=JSON.parse(JSON.stringify(this.params))),i},e});
//# sourceMappingURL=../../sourcemaps/nodes/utils/VelocityNode.js.map
