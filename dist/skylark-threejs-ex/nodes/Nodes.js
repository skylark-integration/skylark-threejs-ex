/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["./core/Node","./core/TempNode","./core/InputNode","./core/ConstNode","./core/VarNode","./core/StructNode","./core/AttributeNode","./core/FunctionNode","./core/ExpressionNode","./core/FunctionCallNode","./core/NodeLib","./core/NodeUtils","./core/NodeFrame","./core/NodeUniform","./core/NodeBuilder","./inputs/BoolNode","./inputs/IntNode","./inputs/FloatNode","./inputs/Vector2Node","./inputs/Vector3Node","./inputs/Vector4Node","./inputs/ColorNode","./inputs/Matrix3Node","./inputs/Matrix4Node","./inputs/TextureNode","./inputs/CubeTextureNode","./inputs/ScreenNode","./inputs/ReflectorNode","./inputs/PropertyNode","./inputs/RTTNode","./accessors/UVNode","./accessors/ColorsNode","./accessors/PositionNode","./accessors/NormalNode","./accessors/CameraNode","./accessors/LightNode","./accessors/ReflectNode","./accessors/ScreenUVNode","./accessors/ResolutionNode","./math/MathNode","./math/OperatorNode","./math/CondNode","./procedural/NoiseNode","./procedural/CheckerNode","./misc/TextureCubeUVNode","./misc/TextureCubeNode","./misc/NormalMapNode","./misc/BumpMapNode","./utils/BypassNode","./utils/JoinNode","./utils/SwitchNode","./utils/TimerNode","./utils/VelocityNode","./utils/UVTransformNode","./utils/MaxMIPLevelNode","./utils/SpecularMIPLevelNode","./utils/ColorSpaceNode","./utils/SubSlotNode","./effects/BlurNode","./effects/ColorAdjustmentNode","./effects/LuminanceNode","./materials/nodes/RawNode","./materials/nodes/SpriteNode","./materials/nodes/PhongNode","./materials/nodes/StandardNode","./materials/nodes/MeshStandardNode","./materials/NodeMaterial","./materials/SpriteNodeMaterial","./materials/PhongNodeMaterial","./materials/StandardNodeMaterial","./materials/MeshStandardNodeMaterial","./postprocessing/NodePostProcessing"],function(e,o,d,N,r,t,s,a,i,c,n,l,u,p,m,M,S,C,h,T,V,f,x,P,b,U,B,L,R,g,F,I,y,v,w,A,j,k,E,J,O,q,z,D,G,H,K,Q,W,X,Y,Z,$,_,ee,oe,de,Ne,re,te,se,ae,ie,ce,ne,le,ue,pe,me,Me,Se,Ce){"use strict";return{Node:e,TempNode:o,InputNode:d,ConstNode:N,VarNode:r,StructNode:t,AttributeNode:s,FunctionNode:a,ExpressionNode:i,FunctionCallNode:c,NodeLib:n,NodeUtils:l,NodeFrame:u,NodeUniform:p,NodeBuilder:m,BoolNode:M,IntNode:S,FloatNode:C,Vector2Node:h,Vector3Node:T,Vector4Node:V,ColorNode:f,Matrix3Node:x,Matrix4Node:P,TextureNode:b,CubeTextureNode:U,ScreenNode:B,ReflectorNode:L,PropertyNode:R,RTTNode:g,UVNode:F,ColorsNode:I,PositionNode:y,NormalNode:v,CameraNode:w,LightNode:A,ReflectNode:j,ScreenUVNode:k,ResolutionNode:E,MathNode:J,OperatorNode:O,CondNode:q,NoiseNode:z,CheckerNode:D,TextureCubeUVNode:G,TextureCubeNode:H,NormalMapNode:K,BumpMapNode:Q,BypassNode:W,JoinNode:X,SwitchNode:Y,TimerNode:Z,VelocityNode:$,UVTransformNode:_,MaxMIPLevelNode:ee,SpecularMIPLevelNode:oe,ColorSpaceNode:de,SubSlotNode:Ne,BlurNode:re,ColorAdjustmentNode:te,LuminanceNode:se,RawNode:ae,SpriteNode:ie,PhongNode:ce,StandardNode:ne,MeshStandardNode:le,NodeMaterial:ue,SpriteNodeMaterial:pe,PhongNodeMaterial:me,StandardNodeMaterial:Me,MeshStandardNodeMaterial:Se,NodePostProcessing:Ce}});
//# sourceMappingURL=../sourcemaps/nodes/Nodes.js.map
