/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["../threex","./core/Node","./core/TempNode","./core/InputNode","./core/ConstNode","./core/VarNode","./core/StructNode","./core/AttributeNode","./core/FunctionNode","./core/ExpressionNode","./core/FunctionCallNode","./core/NodeLib","./core/NodeUtils","./core/NodeFrame","./core/NodeUniform","./core/NodeBuilder","./inputs/BoolNode","./inputs/IntNode","./inputs/FloatNode","./inputs/Vector2Node","./inputs/Vector3Node","./inputs/Vector4Node","./inputs/ColorNode","./inputs/Matrix3Node","./inputs/Matrix4Node","./inputs/TextureNode","./inputs/CubeTextureNode","./inputs/ScreenNode","./inputs/ReflectorNode","./inputs/PropertyNode","./inputs/RTTNode","./accessors/UVNode","./accessors/ColorsNode","./accessors/PositionNode","./accessors/NormalNode","./accessors/CameraNode","./accessors/LightNode","./accessors/ReflectNode","./accessors/ScreenUVNode","./accessors/ResolutionNode","./math/MathNode","./math/OperatorNode","./math/CondNode","./procedural/NoiseNode","./procedural/CheckerNode","./misc/TextureCubeUVNode","./misc/TextureCubeNode","./misc/NormalMapNode","./misc/BumpMapNode","./utils/BypassNode","./utils/JoinNode","./utils/SwitchNode","./utils/TimerNode","./utils/VelocityNode","./utils/UVTransformNode","./utils/MaxMIPLevelNode","./utils/SpecularMIPLevelNode","./utils/ColorSpaceNode","./utils/SubSlotNode","./effects/BlurNode","./effects/ColorAdjustmentNode","./effects/LuminanceNode","./materials/nodes/RawNode","./materials/nodes/SpriteNode","./materials/nodes/PhongNode","./materials/nodes/StandardNode","./materials/nodes/MeshStandardNode","./materials/NodeMaterial","./materials/SpriteNodeMaterial","./materials/PhongNodeMaterial","./materials/StandardNodeMaterial","./materials/MeshStandardNodeMaterial","./postprocessing/NodePostProcessing"],function(e,o,d,N,r,t,s,a,i,c,n,l,u,p,m,M,S,C,h,T,V,x,f,P,b,U,B,L,R,g,F,I,y,v,w,A,j,k,E,J,O,q,z,D,G,H,K,Q,W,X,Y,Z,$,_,ee,oe,de,Ne,re,te,se,ae,ie,ce,ne,le,ue,pe,me,Me,Se,Ce,he){"use strict";return e.nodes.Nodes={Node:o,TempNode:d,InputNode:N,ConstNode:r,VarNode:t,StructNode:s,AttributeNode:a,FunctionNode:i,ExpressionNode:c,FunctionCallNode:n,NodeLib:l,NodeUtils:u,NodeFrame:p,NodeUniform:m,NodeBuilder:M,BoolNode:S,IntNode:C,FloatNode:h,Vector2Node:T,Vector3Node:V,Vector4Node:x,ColorNode:f,Matrix3Node:P,Matrix4Node:b,TextureNode:U,CubeTextureNode:B,ScreenNode:L,ReflectorNode:R,PropertyNode:g,RTTNode:F,UVNode:I,ColorsNode:y,PositionNode:v,NormalNode:w,CameraNode:A,LightNode:j,ReflectNode:k,ScreenUVNode:E,ResolutionNode:J,MathNode:O,OperatorNode:q,CondNode:z,NoiseNode:D,CheckerNode:G,TextureCubeUVNode:H,TextureCubeNode:K,NormalMapNode:Q,BumpMapNode:W,BypassNode:X,JoinNode:Y,SwitchNode:Z,TimerNode:$,VelocityNode:_,UVTransformNode:ee,MaxMIPLevelNode:oe,SpecularMIPLevelNode:de,ColorSpaceNode:Ne,SubSlotNode:re,BlurNode:te,ColorAdjustmentNode:se,LuminanceNode:ae,RawNode:ie,SpriteNode:ce,PhongNode:ne,StandardNode:le,MeshStandardNode:ue,NodeMaterial:pe,SpriteNodeMaterial:me,PhongNodeMaterial:Me,StandardNodeMaterial:Se,MeshStandardNodeMaterial:Ce,NodePostProcessing:he}});
//# sourceMappingURL=../sourcemaps/nodes/Nodes.js.map
