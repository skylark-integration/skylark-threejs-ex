/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../../core/Node","../../inputs/ColorNode"],function(e,i,t){"use strict";function o(){i.call(this),this.color=new t(15658734),this.spherical=!0}return o.prototype=Object.create(i.prototype),o.prototype.constructor=o,o.prototype.nodeType="Sprite",o.prototype.build=function(i){if(i.define("SPRITE"),i.requires.lights=!1,i.requires.transparent=void 0!==this.alpha,i.isShader("vertex")){var t=this.position?this.position.analyzeAndFlow(i,"v3",{cache:"position"}):void 0;i.mergeUniform(e.UniformsUtils.merge([e.UniformsLib.fog])),i.addParsCode(["#include <fog_pars_vertex>","#include <logdepthbuf_pars_vertex>","#include <clipping_planes_pars_vertex>"].join("\n")),r=["#include <clipping_planes_fragment>","#include <begin_vertex>"],t&&r.push(t.code,t.result?"transformed = "+t.result+";":""),r.push("#include <project_vertex>","#include <fog_vertex>","mat4 modelViewMtx = modelViewMatrix;","mat4 modelMtx = modelMatrix;","modelMtx[3][0] = 0.0;","modelMtx[3][1] = 0.0;","modelMtx[3][2] = 0.0;"),this.spherical||r.push("modelMtx[1][1] = 1.0;"),r.push("modelViewMtx[0][0] = 1.0;","modelViewMtx[0][1] = 0.0;","modelViewMtx[0][2] = 0.0;"),this.spherical&&r.push("modelViewMtx[1][0] = 0.0;","modelViewMtx[1][1] = 1.0;","modelViewMtx[1][2] = 0.0;"),r.push("modelViewMtx[2][0] = 0.0;","modelViewMtx[2][1] = 0.0;","modelViewMtx[2][2] = 1.0;","gl_Position = projectionMatrix * modelViewMtx * modelMtx * vec4( transformed, 1.0 );","#include <logdepthbuf_vertex>","#include <clipping_planes_vertex>","#include <fog_vertex>")}else{i.addParsCode(["#include <fog_pars_fragment>","#include <logdepthbuf_pars_fragment>","#include <clipping_planes_pars_fragment>"].join("\n")),i.addCode(["#include <clipping_planes_fragment>","#include <logdepthbuf_fragment>"].join("\n")),this.mask&&this.mask.analyze(i),this.alpha&&this.alpha.analyze(i),this.color.analyze(i,{slot:"color"});var o=this.mask?this.mask.flow(i,"b"):void 0,s=this.alpha?this.alpha.flow(i,"f"):void 0,l=this.color.flow(i,"c",{slot:"color"}),r=[];o&&r.push(o.code,"if ( ! "+o.result+" ) discard;"),s?r.push(s.code,"#ifdef ALPHATEST","if ( "+s.result+" <= ALPHATEST ) discard;","#endif",l.code,"gl_FragColor = vec4( "+l.result+", "+s.result+" );"):r.push(l.code,"gl_FragColor = vec4( "+l.result+", 1.0 );"),r.push("#include <tonemapping_fragment>","#include <encodings_fragment>","#include <fog_fragment>")}return r.join("\n")},o.prototype.copy=function(e){return i.prototype.copy.call(this,e),e.position&&(this.position=e.position),this.color=e.color,void 0!==e.spherical&&(this.spherical=e.spherical),e.mask&&(this.mask=e.mask),e.alpha&&(this.alpha=e.alpha),this},o.prototype.toJSON=function(e){var i=this.getJSONNode(e);return i||(i=this.createJSONNode(e),this.position&&(i.position=this.position.toJSON(e).uuid),i.color=this.color.toJSON(e).uuid,!1===this.spherical&&(i.spherical=!1),this.mask&&(i.mask=this.mask.toJSON(e).uuid),this.alpha&&(i.alpha=this.alpha.toJSON(e).uuid)),i},o});
//# sourceMappingURL=../../../sourcemaps/nodes/materials/nodes/SpriteNode.js.map
