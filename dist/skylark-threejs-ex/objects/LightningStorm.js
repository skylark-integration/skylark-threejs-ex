/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../geometries/LightningStrike"],function(i,t){"use strict";var n=function(n){i.Object3D.call(this),n=n||{},this.stormParams=n,n.size=void 0!==n.size?n.size:1e3,n.minHeight=void 0!==n.minHeight?n.minHeight:80,n.maxHeight=void 0!==n.maxHeight?n.maxHeight:100,n.maxSlope=void 0!==n.maxSlope?n.maxSlope:1.1,n.maxLightnings=void 0!==n.maxLightnings?n.maxLightnings:3,n.lightningMinPeriod=void 0!==n.lightningMinPeriod?n.lightningMinPeriod:3,n.lightningMaxPeriod=void 0!==n.lightningMaxPeriod?n.lightningMaxPeriod:7,n.lightningMinDuration=void 0!==n.lightningMinDuration?n.lightningMinDuration:1,n.lightningMaxDuration=void 0!==n.lightningMaxDuration?n.lightningMaxDuration:2.5,this.lightningParameters=t.copyParameters(n.lightningParameters,n.lightningParameters),this.lightningParameters.isEternal=!1,this.lightningMaterial=void 0!==n.lightningMaterial?n.lightningMaterial:new i.MeshBasicMaterial({color:11599871}),void 0!==n.onRayPosition?this.onRayPosition=n.onRayPosition:this.onRayPosition=function(t,s){s.set((Math.random()-.5)*n.size,0,(Math.random()-.5)*n.size);var a=i.MathUtils.lerp(n.minHeight,n.maxHeight,Math.random());t.set(n.maxSlope*(2*Math.random()-1),1,n.maxSlope*(2*Math.random()-1)).multiplyScalar(a).add(s)},this.onLightningDown=n.onLightningDown,this.inited=!1,this.nextLightningTime=0,this.lightningsMeshes=[],this.deadLightningsMeshes=[];for(var s=0;s<this.stormParams.maxLightnings;s++){var a=new t(t.copyParameters({},this.lightningParameters)),e=new i.Mesh(a,this.lightningMaterial);this.deadLightningsMeshes.push(e)}};return(n.prototype=Object.create(i.Object3D.prototype)).constructor=n,n.prototype.isLightningStorm=!0,n.prototype.update=function(n){if(this.inited||(this.nextLightningTime=this.getNextLightningTime(n)*Math.random(),this.inited=!0),n>=this.nextLightningTime){var s=this.deadLightningsMeshes.pop();if(s){var a=t.copyParameters(s.geometry.rayParameters,this.lightningParameters);a.birthTime=n,a.deathTime=n+i.MathUtils.lerp(this.stormParams.lightningMinDuration,this.stormParams.lightningMaxDuration,Math.random()),this.onRayPosition(a.sourceOffset,a.destOffset),a.noiseSeed=Math.random(),this.add(s),this.lightningsMeshes.push(s)}this.nextLightningTime=this.getNextLightningTime(n)}for(var e=0,h=this.lightningsMeshes.length;e<h;){var r=this.lightningsMeshes[e],g=r.geometry,o=g.state;g.update(n),o===t.RAY_PROPAGATING&&g.state>o&&this.onLightningDown&&this.onLightningDown(g),g.state===t.RAY_EXTINGUISHED?(this.lightningsMeshes.splice(this.lightningsMeshes.indexOf(r),1),this.deadLightningsMeshes.push(r),this.remove(r),h--):e++}},n.prototype.getNextLightningTime=function(t){return t+i.MathUtils.lerp(this.stormParams.lightningMinPeriod,this.stormParams.lightningMaxPeriod,Math.random())/(this.stormParams.maxLightnings+1)},n.prototype.copy=function(n){return i.Object3D.prototype.copy.call(this,n),this.stormParams.size=n.stormParams.size,this.stormParams.minHeight=n.stormParams.minHeight,this.stormParams.maxHeight=n.stormParams.maxHeight,this.stormParams.maxSlope=n.stormParams.maxSlope,this.stormParams.maxLightnings=n.stormParams.maxLightnings,this.stormParams.lightningMinPeriod=n.stormParams.lightningMinPeriod,this.stormParams.lightningMaxPeriod=n.stormParams.lightningMaxPeriod,this.stormParams.lightningMinDuration=n.stormParams.lightningMinDuration,this.stormParams.lightningMaxDuration=n.stormParams.lightningMaxDuration,this.lightningParameters=t.copyParameters({},n.lightningParameters),this.lightningMaterial=n.stormParams.lightningMaterial,this.onLightningDown=n.onLightningDown,this},t.prototype.clone=function(){return new this.constructor(this.stormParams).copy(this)},n});
//# sourceMappingURL=../sourcemaps/objects/LightningStorm.js.map
