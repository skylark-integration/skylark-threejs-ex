/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex","../geometries/LightningStrike"],function(i,t,n){"use strict";var s=function(t){i.Object3D.call(this),t=t||{},this.stormParams=t,t.size=void 0!==t.size?t.size:1e3,t.minHeight=void 0!==t.minHeight?t.minHeight:80,t.maxHeight=void 0!==t.maxHeight?t.maxHeight:100,t.maxSlope=void 0!==t.maxSlope?t.maxSlope:1.1,t.maxLightnings=void 0!==t.maxLightnings?t.maxLightnings:3,t.lightningMinPeriod=void 0!==t.lightningMinPeriod?t.lightningMinPeriod:3,t.lightningMaxPeriod=void 0!==t.lightningMaxPeriod?t.lightningMaxPeriod:7,t.lightningMinDuration=void 0!==t.lightningMinDuration?t.lightningMinDuration:1,t.lightningMaxDuration=void 0!==t.lightningMaxDuration?t.lightningMaxDuration:2.5,this.lightningParameters=n.copyParameters(t.lightningParameters,t.lightningParameters),this.lightningParameters.isEternal=!1,this.lightningMaterial=void 0!==t.lightningMaterial?t.lightningMaterial:new i.MeshBasicMaterial({color:11599871}),void 0!==t.onRayPosition?this.onRayPosition=t.onRayPosition:this.onRayPosition=function(n,s){s.set((Math.random()-.5)*t.size,0,(Math.random()-.5)*t.size);var a=i.MathUtils.lerp(t.minHeight,t.maxHeight,Math.random());n.set(t.maxSlope*(2*Math.random()-1),1,t.maxSlope*(2*Math.random()-1)).multiplyScalar(a).add(s)},this.onLightningDown=t.onLightningDown,this.inited=!1,this.nextLightningTime=0,this.lightningsMeshes=[],this.deadLightningsMeshes=[];for(var s=0;s<this.stormParams.maxLightnings;s++){var a=new n(n.copyParameters({},this.lightningParameters)),e=new i.Mesh(a,this.lightningMaterial);this.deadLightningsMeshes.push(e)}};return(s.prototype=Object.create(i.Object3D.prototype)).constructor=s,s.prototype.isLightningStorm=!0,s.prototype.update=function(t){if(this.inited||(this.nextLightningTime=this.getNextLightningTime(t)*Math.random(),this.inited=!0),t>=this.nextLightningTime){var s=this.deadLightningsMeshes.pop();if(s){var a=n.copyParameters(s.geometry.rayParameters,this.lightningParameters);a.birthTime=t,a.deathTime=t+i.MathUtils.lerp(this.stormParams.lightningMinDuration,this.stormParams.lightningMaxDuration,Math.random()),this.onRayPosition(a.sourceOffset,a.destOffset),a.noiseSeed=Math.random(),this.add(s),this.lightningsMeshes.push(s)}this.nextLightningTime=this.getNextLightningTime(t)}for(var e=0,h=this.lightningsMeshes.length;e<h;){var r=this.lightningsMeshes[e],g=r.geometry,o=g.state;g.update(t),o===n.RAY_PROPAGATING&&g.state>o&&this.onLightningDown&&this.onLightningDown(g),g.state===n.RAY_EXTINGUISHED?(this.lightningsMeshes.splice(this.lightningsMeshes.indexOf(r),1),this.deadLightningsMeshes.push(r),this.remove(r),h--):e++}},s.prototype.getNextLightningTime=function(t){return t+i.MathUtils.lerp(this.stormParams.lightningMinPeriod,this.stormParams.lightningMaxPeriod,Math.random())/(this.stormParams.maxLightnings+1)},s.prototype.copy=function(t){return i.Object3D.prototype.copy.call(this,t),this.stormParams.size=t.stormParams.size,this.stormParams.minHeight=t.stormParams.minHeight,this.stormParams.maxHeight=t.stormParams.maxHeight,this.stormParams.maxSlope=t.stormParams.maxSlope,this.stormParams.maxLightnings=t.stormParams.maxLightnings,this.stormParams.lightningMinPeriod=t.stormParams.lightningMinPeriod,this.stormParams.lightningMaxPeriod=t.stormParams.lightningMaxPeriod,this.stormParams.lightningMinDuration=t.stormParams.lightningMinDuration,this.stormParams.lightningMaxDuration=t.stormParams.lightningMaxDuration,this.lightningParameters=n.copyParameters({},t.lightningParameters),this.lightningMaterial=t.stormParams.lightningMaterial,this.onLightningDown=t.onLightningDown,this},n.prototype.clone=function(){return new this.constructor(this.stormParams).copy(this)},t.objects.LightningStorm=s});
//# sourceMappingURL=../sourcemaps/objects/LightningStorm.js.map
