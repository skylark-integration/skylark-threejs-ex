/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../geometries/LightningStrike"],function(i,t){return i.LightningStorm=function(t){i.Object3D.call(this),t=t||{},this.stormParams=t,t.size=void 0!==t.size?t.size:1e3,t.minHeight=void 0!==t.minHeight?t.minHeight:80,t.maxHeight=void 0!==t.maxHeight?t.maxHeight:100,t.maxSlope=void 0!==t.maxSlope?t.maxSlope:1.1,t.maxLightnings=void 0!==t.maxLightnings?t.maxLightnings:3,t.lightningMinPeriod=void 0!==t.lightningMinPeriod?t.lightningMinPeriod:3,t.lightningMaxPeriod=void 0!==t.lightningMaxPeriod?t.lightningMaxPeriod:7,t.lightningMinDuration=void 0!==t.lightningMinDuration?t.lightningMinDuration:1,t.lightningMaxDuration=void 0!==t.lightningMaxDuration?t.lightningMaxDuration:2.5,this.lightningParameters=i.LightningStrike.copyParameters(t.lightningParameters,t.lightningParameters),this.lightningParameters.isEternal=!1,this.lightningMaterial=void 0!==t.lightningMaterial?t.lightningMaterial:new i.MeshBasicMaterial({color:11599871}),void 0!==t.onRayPosition?this.onRayPosition=t.onRayPosition:this.onRayPosition=function(n,s){s.set((Math.random()-.5)*t.size,0,(Math.random()-.5)*t.size);var g=i.MathUtils.lerp(t.minHeight,t.maxHeight,Math.random());n.set(t.maxSlope*(2*Math.random()-1),1,t.maxSlope*(2*Math.random()-1)).multiplyScalar(g).add(s)},this.onLightningDown=t.onLightningDown,this.inited=!1,this.nextLightningTime=0,this.lightningsMeshes=[],this.deadLightningsMeshes=[];for(var n=0;n<this.stormParams.maxLightnings;n++){var s=new i.LightningStrike(i.LightningStrike.copyParameters({},this.lightningParameters)),g=new i.Mesh(s,this.lightningMaterial);this.deadLightningsMeshes.push(g)}},i.LightningStorm.prototype=Object.create(i.Object3D.prototype),i.LightningStorm.prototype.constructor=i.LightningStorm,i.LightningStorm.prototype.isLightningStorm=!0,i.LightningStorm.prototype.update=function(t){if(this.inited||(this.nextLightningTime=this.getNextLightningTime(t)*Math.random(),this.inited=!0),t>=this.nextLightningTime){var n=this.deadLightningsMeshes.pop();if(n){var s=i.LightningStrike.copyParameters(n.geometry.rayParameters,this.lightningParameters);s.birthTime=t,s.deathTime=t+i.MathUtils.lerp(this.stormParams.lightningMinDuration,this.stormParams.lightningMaxDuration,Math.random()),this.onRayPosition(s.sourceOffset,s.destOffset),s.noiseSeed=Math.random(),this.add(n),this.lightningsMeshes.push(n)}this.nextLightningTime=this.getNextLightningTime(t)}for(var g=0,a=this.lightningsMeshes.length;g<a;){var e=this.lightningsMeshes[g],h=e.geometry,r=h.state;h.update(t),r===i.LightningStrike.RAY_PROPAGATING&&h.state>r&&this.onLightningDown&&this.onLightningDown(h),h.state===i.LightningStrike.RAY_EXTINGUISHED?(this.lightningsMeshes.splice(this.lightningsMeshes.indexOf(e),1),this.deadLightningsMeshes.push(e),this.remove(e),a--):g++}},i.LightningStorm.prototype.getNextLightningTime=function(t){return t+i.MathUtils.lerp(this.stormParams.lightningMinPeriod,this.stormParams.lightningMaxPeriod,Math.random())/(this.stormParams.maxLightnings+1)},i.LightningStorm.prototype.copy=function(t){return i.Object3D.prototype.copy.call(this,t),this.stormParams.size=t.stormParams.size,this.stormParams.minHeight=t.stormParams.minHeight,this.stormParams.maxHeight=t.stormParams.maxHeight,this.stormParams.maxSlope=t.stormParams.maxSlope,this.stormParams.maxLightnings=t.stormParams.maxLightnings,this.stormParams.lightningMinPeriod=t.stormParams.lightningMinPeriod,this.stormParams.lightningMaxPeriod=t.stormParams.lightningMaxPeriod,this.stormParams.lightningMinDuration=t.stormParams.lightningMinDuration,this.stormParams.lightningMaxDuration=t.stormParams.lightningMaxDuration,this.lightningParameters=i.LightningStrike.copyParameters({},t.lightningParameters),this.lightningMaterial=t.stormParams.lightningMaterial,this.onLightningDown=t.onLightningDown,this},i.LightningStrike.prototype.clone=function(){return new this.constructor(this.stormParams).copy(this)},i.LightningStorm});
//# sourceMappingURL=../sourcemaps/objects/LightningStorm.js.map
