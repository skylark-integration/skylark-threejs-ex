/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){"use strict";var r={fromCubeTexture:function(r){for(var a,n,o,c=0,s=new e.Vector3,i=new e.Vector3,h=new e.Color,g=[0,0,0,0,0,0,0,0,0],f=new e.SphericalHarmonics3,d=f.coefficients,l=0;l<6;l++){var w=r.image[l],b=w.width,u=w.height,v=document.createElement("canvas");v.width=b,v.height=u;var k=v.getContext("2d");k.drawImage(w,0,0,b,u);for(var m=k.getImageData(0,0,b,u),p=m.data,x=m.width,y=2/x,R=0,S=p.length;R<S;R+=4){h.setRGB(p[R]/255,p[R+1]/255,p[R+2]/255),t(h,r.encoding);var z=R/4,B=(z%x+.5)*y-1,C=1-(Math.floor(z/x)+.5)*y;switch(l){case 0:s.set(-1,C,-B);break;case 1:s.set(1,C,B);break;case 2:s.set(-B,1,-C);break;case 3:s.set(-B,-1,C);break;case 4:s.set(-B,C,1);break;case 5:s.set(B,C,-1)}n=s.lengthSq(),c+=o=4/(Math.sqrt(n)*n),i.copy(s).normalize(),e.SphericalHarmonics3.getBasisAt(i,g);for(var G=0;G<9;G++)d[G].x+=g[G]*h.r*o,d[G].y+=g[G]*h.g*o,d[G].z+=g[G]*h.b*o}}a=4*Math.PI/c;for(G=0;G<9;G++)d[G].x*=a,d[G].y*=a,d[G].z*=a;return new e.LightProbe(f)},fromCubeRenderTarget:function(r,a){for(var n,o,c,s=0,i=new e.Vector3,h=new e.Vector3,g=new e.Color,f=[0,0,0,0,0,0,0,0,0],d=new e.SphericalHarmonics3,l=d.coefficients,w=0;w<6;w++){var b=a.width,u=new Uint8Array(b*b*4);r.readRenderTargetPixels(a,0,0,b,b,u,w);for(var v=2/b,k=0,m=u.length;k<m;k+=4){g.setRGB(u[k]/255,u[k+1]/255,u[k+2]/255),t(g,a.texture.encoding);var p=k/4,x=(p%b+.5)*v-1,y=1-(Math.floor(p/b)+.5)*v;switch(w){case 0:i.set(1,y,-x);break;case 1:i.set(-1,y,x);break;case 2:i.set(x,1,-y);break;case 3:i.set(x,-1,y);break;case 4:i.set(x,y,1);break;case 5:i.set(-x,y,-1)}o=i.lengthSq(),s+=c=4/(Math.sqrt(o)*o),h.copy(i).normalize(),e.SphericalHarmonics3.getBasisAt(h,f);for(var R=0;R<9;R++)l[R].x+=f[R]*g.r*c,l[R].y+=f[R]*g.g*c,l[R].z+=f[R]*g.b*c}}n=4*Math.PI/s;for(R=0;R<9;R++)l[R].x*=n,l[R].y*=n,l[R].z*=n;return new e.LightProbe(d)}},t=function(r,t){switch(t){case e.sRGBEncoding:r.convertSRGBToLinear();break;case e.LinearEncoding:break;default:console.warn("WARNING: LightProbeGenerator convertColorToLinear() encountered an unsupported encoding.")}return r};return r});
//# sourceMappingURL=../sourcemaps/lights/LightProbeGenerator.js.map
