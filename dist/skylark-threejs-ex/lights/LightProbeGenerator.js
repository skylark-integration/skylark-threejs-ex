/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){e.LightProbeGenerator={fromCubeTexture:function(t){for(var a,n,o,c=0,s=new e.Vector3,i=new e.Vector3,h=new e.Color,g=[0,0,0,0,0,0,0,0,0],f=new e.SphericalHarmonics3,b=f.coefficients,d=0;d<6;d++){var l=t.image[d],w=l.width,u=l.height,v=document.createElement("canvas");v.width=w,v.height=u;var k=v.getContext("2d");k.drawImage(l,0,0,w,u);for(var m=k.getImageData(0,0,w,u),p=m.data,x=m.width,y=2/x,G=0,L=p.length;G<L;G+=4){h.setRGB(p[G]/255,p[G+1]/255,p[G+2]/255),r(h,t.encoding);var P=G/4,R=(P%x+.5)*y-1,S=1-(Math.floor(P/x)+.5)*y;switch(d){case 0:s.set(-1,S,-R);break;case 1:s.set(1,S,R);break;case 2:s.set(-R,1,-S);break;case 3:s.set(-R,-1,S);break;case 4:s.set(-R,S,1);break;case 5:s.set(R,S,-1)}n=s.lengthSq(),c+=o=4/(Math.sqrt(n)*n),i.copy(s).normalize(),e.SphericalHarmonics3.getBasisAt(i,g);for(var z=0;z<9;z++)b[z].x+=g[z]*h.r*o,b[z].y+=g[z]*h.g*o,b[z].z+=g[z]*h.b*o}}a=4*Math.PI/c;for(z=0;z<9;z++)b[z].x*=a,b[z].y*=a,b[z].z*=a;return new e.LightProbe(f)},fromCubeRenderTarget:function(t,a){for(var n,o,c,s=0,i=new e.Vector3,h=new e.Vector3,g=new e.Color,f=[0,0,0,0,0,0,0,0,0],b=new e.SphericalHarmonics3,d=b.coefficients,l=0;l<6;l++){var w=a.width,u=new Uint8Array(w*w*4);t.readRenderTargetPixels(a,0,0,w,w,u,l);for(var v=2/w,k=0,m=u.length;k<m;k+=4){g.setRGB(u[k]/255,u[k+1]/255,u[k+2]/255),r(g,a.texture.encoding);var p=k/4,x=(p%w+.5)*v-1,y=1-(Math.floor(p/w)+.5)*v;switch(l){case 0:i.set(1,y,-x);break;case 1:i.set(-1,y,x);break;case 2:i.set(x,1,-y);break;case 3:i.set(x,-1,y);break;case 4:i.set(x,y,1);break;case 5:i.set(-x,y,-1)}o=i.lengthSq(),s+=c=4/(Math.sqrt(o)*o),h.copy(i).normalize(),e.SphericalHarmonics3.getBasisAt(h,f);for(var G=0;G<9;G++)d[G].x+=f[G]*g.r*c,d[G].y+=f[G]*g.g*c,d[G].z+=f[G]*g.b*c}}n=4*Math.PI/s;for(G=0;G<9;G++)d[G].x*=n,d[G].y*=n,d[G].z*=n;return new e.LightProbe(b)}};var r=function(r,t){switch(t){case e.sRGBEncoding:r.convertSRGBToLinear();break;case e.LinearEncoding:break;default:console.warn("WARNING: LightProbeGenerator convertColorToLinear() encountered an unsupported encoding.")}return r};return e.LightProbeGenerator});
//# sourceMappingURL=../sourcemaps/lights/LightProbeGenerator.js.map
