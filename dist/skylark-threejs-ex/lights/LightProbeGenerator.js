/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex"],function(e,r){"use strict";var t={fromCubeTexture:function(r){for(var t,n,o,s=0,c=new e.Vector3,i=new e.Vector3,h=new e.Color,g=[0,0,0,0,0,0,0,0,0],f=new e.SphericalHarmonics3,l=f.coefficients,b=0;b<6;b++){var d=r.image[b],w=d.width,u=d.height,v=document.createElement("canvas");v.width=w,v.height=u;var k=v.getContext("2d");k.drawImage(d,0,0,w,u);for(var m=k.getImageData(0,0,w,u),x=m.data,p=m.width,y=2/p,G=0,L=x.length;G<L;G+=4){h.setRGB(x[G]/255,x[G+1]/255,x[G+2]/255),a(h,r.encoding);var P=G/4,R=(P%p+.5)*y-1,S=1-(Math.floor(P/p)+.5)*y;switch(b){case 0:c.set(-1,S,-R);break;case 1:c.set(1,S,R);break;case 2:c.set(-R,1,-S);break;case 3:c.set(-R,-1,S);break;case 4:c.set(-R,S,1);break;case 5:c.set(R,S,-1)}n=c.lengthSq(),s+=o=4/(Math.sqrt(n)*n),i.copy(c).normalize(),e.SphericalHarmonics3.getBasisAt(i,g);for(var z=0;z<9;z++)l[z].x+=g[z]*h.r*o,l[z].y+=g[z]*h.g*o,l[z].z+=g[z]*h.b*o}}t=4*Math.PI/s;for(z=0;z<9;z++)l[z].x*=t,l[z].y*=t,l[z].z*=t;return new e.LightProbe(f)},fromCubeRenderTarget:function(r,t){for(var n,o,s,c=0,i=new e.Vector3,h=new e.Vector3,g=new e.Color,f=[0,0,0,0,0,0,0,0,0],l=new e.SphericalHarmonics3,b=l.coefficients,d=0;d<6;d++){var w=t.width,u=new Uint8Array(w*w*4);r.readRenderTargetPixels(t,0,0,w,w,u,d);for(var v=2/w,k=0,m=u.length;k<m;k+=4){g.setRGB(u[k]/255,u[k+1]/255,u[k+2]/255),a(g,t.texture.encoding);var x=k/4,p=(x%w+.5)*v-1,y=1-(Math.floor(x/w)+.5)*v;switch(d){case 0:i.set(1,y,-p);break;case 1:i.set(-1,y,p);break;case 2:i.set(p,1,-y);break;case 3:i.set(p,-1,y);break;case 4:i.set(p,y,1);break;case 5:i.set(-p,y,-1)}o=i.lengthSq(),c+=s=4/(Math.sqrt(o)*o),h.copy(i).normalize(),e.SphericalHarmonics3.getBasisAt(h,f);for(var G=0;G<9;G++)b[G].x+=f[G]*g.r*s,b[G].y+=f[G]*g.g*s,b[G].z+=f[G]*g.b*s}}n=4*Math.PI/c;for(G=0;G<9;G++)b[G].x*=n,b[G].y*=n,b[G].z*=n;return new e.LightProbe(l)}},a=function(r,t){switch(t){case e.sRGBEncoding:r.convertSRGBToLinear();break;case e.LinearEncoding:break;default:console.warn("WARNING: LightProbeGenerator convertColorToLinear() encountered an unsupported encoding.")}return r};return r.lights.LightProbeGenerator=t});
//# sourceMappingURL=../sourcemaps/lights/LightProbeGenerator.js.map
