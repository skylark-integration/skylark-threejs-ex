/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(t){"use strict";var e={klein:function(t,e,o){var s,r,a;e*=Math.PI,t*=2*Math.PI,(e*=2)<Math.PI?(s=3*Math.cos(e)*(1+Math.sin(e))+2*(1-Math.cos(e)/2)*Math.cos(e)*Math.cos(t),a=-8*Math.sin(e)-2*(1-Math.cos(e)/2)*Math.sin(e)*Math.cos(t)):(s=3*Math.cos(e)*(1+Math.sin(e))+2*(1-Math.cos(e)/2)*Math.cos(t+Math.PI),a=-8*Math.sin(e)),r=-2*(1-Math.cos(e)/2)*Math.sin(t),o.set(s,r,a)},plane:function(t,e){return function(o,s,r){var a=o*t,n=s*e;r.set(a,0,n)}},mobius:function(t,e,o){t-=.5;var s,r,a,n=2*Math.PI*e;s=Math.cos(n)*(2+t*Math.cos(n/2)),r=Math.sin(n)*(2+t*Math.cos(n/2)),a=t*Math.sin(n/2),o.set(s,r,a)},mobius3d:function(t,e,o){t*=Math.PI,e*=2*Math.PI;var s,r,a,n=(t*=2)/2;s=.125*Math.cos(e)*Math.cos(n)-.65*Math.sin(e)*Math.sin(n),a=.125*Math.cos(e)*Math.sin(n)+.65*Math.sin(e)*Math.cos(n),r=(2.25+s)*Math.sin(t),s=(2.25+s)*Math.cos(t),o.set(s,r,a)},TubeGeometry:function(e,o,s,r,a){this.path=e,this.segments=o||64,this.radius=s||1,this.segmentsRadius=r||8,this.closed=a||!1;var n=this,h=this.segments+1,c=e.computeFrenetFrames(o,a),i=c.tangents,M=c.normals,y=c.binormals;this.tangents=i,this.normals=M,this.binormals=y;var u=new t.Vector3;t.ParametricGeometry.call(this,function(t,o,s){o*=2*Math.PI;var r=t*(h-1);r=Math.floor(r),e.getPointAt(t,u);var a=M[r],c=y[r],i=-n.radius*Math.cos(o),p=n.radius*Math.sin(o);u.x+=i*a.x+p*c.x,u.y+=i*a.y+p*c.y,u.z+=i*a.z+p*c.z,s.copy(u)},o,r)}};return e.TubeGeometry.prototype=Object.create(t.Geometry.prototype),e.TubeGeometry.prototype.constructor=e.TubeGeometry,e.TorusKnotGeometry=function(o,s,r,a,n,h){function c(){t.Curve.call(this)}this.radius=o||200,this.tube=s||40,this.segmentsT=r||64,this.segmentsR=a||8,this.p=n||2,this.q=h||3,c.prototype=Object.create(t.Curve.prototype),c.prototype.constructor=c,c.prototype.getPoint=function(e,s){var r=s||new t.Vector3;e*=2*Math.PI;var a=(1+.5*Math.cos(h*e))*Math.cos(n*e),c=(1+.5*Math.cos(h*e))*Math.sin(n*e),i=.5*Math.sin(h*e);return r.set(a,c,i).multiplyScalar(o)};var i=r,M=a,y=new c;e.TubeGeometry.call(this,y,i,s,M,!0,!1)},e.TorusKnotGeometry.prototype=Object.create(t.Geometry.prototype),e.TorusKnotGeometry.prototype.constructor=e.TorusKnotGeometry,e.SphereGeometry=function(e,o,s){t.ParametricGeometry.call(this,function(t,o,s){t*=Math.PI,o*=2*Math.PI;var r=e*Math.sin(t)*Math.cos(o),a=e*Math.sin(t)*Math.sin(o),n=e*Math.cos(t);s.set(r,a,n)},o,s)},e.SphereGeometry.prototype=Object.create(t.Geometry.prototype),e.SphereGeometry.prototype.constructor=e.SphereGeometry,e.PlaneGeometry=function(e,o,s,r){t.ParametricGeometry.call(this,function(t,s,r){var a=t*e,n=s*o;r.set(a,0,n)},s,r)},e.PlaneGeometry.prototype=Object.create(t.Geometry.prototype),e.PlaneGeometry.prototype.constructor=e.PlaneGeometry,e});
//# sourceMappingURL=../sourcemaps/geometries/ParametricGeometries.js.map
