/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(t){return t.ParametricGeometries={klein:function(t,e,r){var o,a,s;e*=Math.PI,t*=2*Math.PI,(e*=2)<Math.PI?(o=3*Math.cos(e)*(1+Math.sin(e))+2*(1-Math.cos(e)/2)*Math.cos(e)*Math.cos(t),s=-8*Math.sin(e)-2*(1-Math.cos(e)/2)*Math.sin(e)*Math.cos(t)):(o=3*Math.cos(e)*(1+Math.sin(e))+2*(1-Math.cos(e)/2)*Math.cos(t+Math.PI),s=-8*Math.sin(e)),a=-2*(1-Math.cos(e)/2)*Math.sin(t),r.set(o,a,s)},plane:function(t,e){return function(r,o,a){var s=r*t,i=o*e;a.set(s,0,i)}},mobius:function(t,e,r){t-=.5;var o,a,s,i=2*Math.PI*e;o=Math.cos(i)*(2+t*Math.cos(i/2)),a=Math.sin(i)*(2+t*Math.cos(i/2)),s=t*Math.sin(i/2),r.set(o,a,s)},mobius3d:function(t,e,r){t*=Math.PI,e*=2*Math.PI;var o,a,s,i=(t*=2)/2;o=.125*Math.cos(e)*Math.cos(i)-.65*Math.sin(e)*Math.sin(i),s=.125*Math.cos(e)*Math.sin(i)+.65*Math.sin(e)*Math.cos(i),a=(2.25+o)*Math.sin(t),o=(2.25+o)*Math.cos(t),r.set(o,a,s)}},t.ParametricGeometries.TubeGeometry=function(e,r,o,a,s){this.path=e,this.segments=r||64,this.radius=o||1,this.segmentsRadius=a||8,this.closed=s||!1;var i=this,c=this.segments+1,n=e.computeFrenetFrames(r,s),h=n.tangents,m=n.normals,M=n.binormals;this.tangents=h,this.normals=m,this.binormals=M;var y=new t.Vector3;t.ParametricGeometry.call(this,function(t,r,o){r*=2*Math.PI;var a=t*(c-1);a=Math.floor(a),e.getPointAt(t,y);var s=m[a],n=M[a],h=-i.radius*Math.cos(r),u=i.radius*Math.sin(r);y.x+=h*s.x+u*n.x,y.y+=h*s.y+u*n.y,y.z+=h*s.z+u*n.z,o.copy(y)},r,a)},t.ParametricGeometries.TubeGeometry.prototype=Object.create(t.Geometry.prototype),t.ParametricGeometries.TubeGeometry.prototype.constructor=t.ParametricGeometries.TubeGeometry,t.ParametricGeometries.TorusKnotGeometry=function(e,r,o,a,s,i){function c(){t.Curve.call(this)}this.radius=e||200,this.tube=r||40,this.segmentsT=o||64,this.segmentsR=a||8,this.p=s||2,this.q=i||3,c.prototype=Object.create(t.Curve.prototype),c.prototype.constructor=c,c.prototype.getPoint=function(r,o){var a=o||new t.Vector3;r*=2*Math.PI;var c=(1+.5*Math.cos(i*r))*Math.cos(s*r),n=(1+.5*Math.cos(i*r))*Math.sin(s*r),h=.5*Math.sin(i*r);return a.set(c,n,h).multiplyScalar(e)};var n=o,h=a,m=new c;t.ParametricGeometries.TubeGeometry.call(this,m,n,r,h,!0,!1)},t.ParametricGeometries.TorusKnotGeometry.prototype=Object.create(t.Geometry.prototype),t.ParametricGeometries.TorusKnotGeometry.prototype.constructor=t.ParametricGeometries.TorusKnotGeometry,t.ParametricGeometries.SphereGeometry=function(e,r,o){t.ParametricGeometry.call(this,function(t,r,o){t*=Math.PI,r*=2*Math.PI;var a=e*Math.sin(t)*Math.cos(r),s=e*Math.sin(t)*Math.sin(r),i=e*Math.cos(t);o.set(a,s,i)},r,o)},t.ParametricGeometries.SphereGeometry.prototype=Object.create(t.Geometry.prototype),t.ParametricGeometries.SphereGeometry.prototype.constructor=t.ParametricGeometries.SphereGeometry,t.ParametricGeometries.PlaneGeometry=function(e,r,o,a){t.ParametricGeometry.call(this,function(t,o,a){var s=t*e,i=o*r;a.set(s,0,i)},o,a)},t.ParametricGeometries.PlaneGeometry.prototype=Object.create(t.Geometry.prototype),t.ParametricGeometries.PlaneGeometry.prototype.constructor=t.ParametricGeometries.PlaneGeometry,t.ParametricGeometries});
//# sourceMappingURL=../sourcemaps/geometries/ParametricGeometries.js.map
