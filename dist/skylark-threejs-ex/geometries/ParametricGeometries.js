/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex"],function(t,e){"use strict";var o={klein:function(t,e,o){var r,s,a;e*=Math.PI,t*=2*Math.PI,(e*=2)<Math.PI?(r=3*Math.cos(e)*(1+Math.sin(e))+2*(1-Math.cos(e)/2)*Math.cos(e)*Math.cos(t),a=-8*Math.sin(e)-2*(1-Math.cos(e)/2)*Math.sin(e)*Math.cos(t)):(r=3*Math.cos(e)*(1+Math.sin(e))+2*(1-Math.cos(e)/2)*Math.cos(t+Math.PI),a=-8*Math.sin(e)),s=-2*(1-Math.cos(e)/2)*Math.sin(t),o.set(r,s,a)},plane:function(t,e){return function(o,r,s){var a=o*t,n=r*e;s.set(a,0,n)}},mobius:function(t,e,o){t-=.5;var r,s,a,n=2*Math.PI*e;r=Math.cos(n)*(2+t*Math.cos(n/2)),s=Math.sin(n)*(2+t*Math.cos(n/2)),a=t*Math.sin(n/2),o.set(r,s,a)},mobius3d:function(t,e,o){t*=Math.PI,e*=2*Math.PI;var r,s,a,n=(t*=2)/2;r=.125*Math.cos(e)*Math.cos(n)-.65*Math.sin(e)*Math.sin(n),a=.125*Math.cos(e)*Math.sin(n)+.65*Math.sin(e)*Math.cos(n),s=(2.25+r)*Math.sin(t),r=(2.25+r)*Math.cos(t),o.set(r,s,a)},TubeGeometry:function(e,o,r,s,a){this.path=e,this.segments=o||64,this.radius=r||1,this.segmentsRadius=s||8,this.closed=a||!1;var n=this,h=this.segments+1,i=e.computeFrenetFrames(o,a),c=i.tangents,M=i.normals,y=i.binormals;this.tangents=c,this.normals=M,this.binormals=y;var u=new t.Vector3;t.ParametricGeometry.call(this,function(t,o,r){o*=2*Math.PI;var s=t*(h-1);s=Math.floor(s),e.getPointAt(t,u);var a=M[s],i=y[s],c=-n.radius*Math.cos(o),m=n.radius*Math.sin(o);u.x+=c*a.x+m*i.x,u.y+=c*a.y+m*i.y,u.z+=c*a.z+m*i.z,r.copy(u)},o,s)}};return o.TubeGeometry.prototype=Object.create(t.Geometry.prototype),o.TubeGeometry.prototype.constructor=o.TubeGeometry,o.TorusKnotGeometry=function(e,r,s,a,n,h){function i(){t.Curve.call(this)}this.radius=e||200,this.tube=r||40,this.segmentsT=s||64,this.segmentsR=a||8,this.p=n||2,this.q=h||3,i.prototype=Object.create(t.Curve.prototype),i.prototype.constructor=i,i.prototype.getPoint=function(o,r){var s=r||new t.Vector3;o*=2*Math.PI;var a=(1+.5*Math.cos(h*o))*Math.cos(n*o),i=(1+.5*Math.cos(h*o))*Math.sin(n*o),c=.5*Math.sin(h*o);return s.set(a,i,c).multiplyScalar(e)};var c=s,M=a,y=new i;o.TubeGeometry.call(this,y,c,r,M,!0,!1)},o.TorusKnotGeometry.prototype=Object.create(t.Geometry.prototype),o.TorusKnotGeometry.prototype.constructor=o.TorusKnotGeometry,o.SphereGeometry=function(e,o,r){t.ParametricGeometry.call(this,function(t,o,r){t*=Math.PI,o*=2*Math.PI;var s=e*Math.sin(t)*Math.cos(o),a=e*Math.sin(t)*Math.sin(o),n=e*Math.cos(t);r.set(s,a,n)},o,r)},o.SphereGeometry.prototype=Object.create(t.Geometry.prototype),o.SphereGeometry.prototype.constructor=o.SphereGeometry,o.PlaneGeometry=function(e,o,r,s){t.ParametricGeometry.call(this,function(t,r,s){var a=t*e,n=r*o;s.set(a,0,n)},r,s)},o.PlaneGeometry.prototype=Object.create(t.Geometry.prototype),o.PlaneGeometry.prototype.constructor=o.PlaneGeometry,e.geometries.ParametricGeometries=o});
//# sourceMappingURL=../sourcemaps/geometries/ParametricGeometries.js.map
