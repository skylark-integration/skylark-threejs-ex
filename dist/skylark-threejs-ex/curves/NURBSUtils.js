/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex"],function(r,a){"use strict";var i={findSpan:function(r,a,i){var n=i.length-r-1;if(a>=i[n])return n-1;if(a<=i[r])return r;for(var c=r,t=n,e=Math.floor((c+t)/2);a<i[e]||a>=i[e+1];)a<i[e]?t=e:c=e,e=Math.floor((c+t)/2);return e},calcBasisFunctions:function(r,a,i,n){var c=[],t=[],e=[];c[0]=1;for(var o=1;o<=i;++o){t[o]=a-n[r+1-o],e[o]=n[r+o]-a;for(var v=0,l=0;l<o;++l){var f=e[l+1],s=t[o-l],u=c[l]/(f+s);c[l]=v+f*u,v=s*u}c[o]=v}return c},calcBSplinePoint:function(a,i,n,c){for(var t=this.findSpan(a,c,i),e=this.calcBasisFunctions(t,c,a,i),o=new r.Vector4(0,0,0,0),v=0;v<=a;++v){var l=n[t-a+v],f=e[v],s=l.w*f;o.x+=l.x*s,o.y+=l.y*s,o.z+=l.z*s,o.w+=l.w*f}return o},calcBasisFunctionDerivatives:function(r,a,i,n,c){for(var t=[],e=0;e<=i;++e)t[e]=0;var o=[];for(e=0;e<=n;++e)o[e]=t.slice(0);var v=[];for(e=0;e<=i;++e)v[e]=t.slice(0);v[0][0]=1;for(var l=t.slice(0),f=t.slice(0),s=1;s<=i;++s){l[s]=a-c[r+1-s],f[s]=c[r+s]-a;for(var u=0,h=0;h<s;++h){var S=f[h+1],d=l[s-h];v[s][h]=S+d;var p=v[h][s-1]/v[s][h];v[h][s]=u+S*p,u=d*p}v[s][s]=u}for(s=0;s<=i;++s)o[0][s]=v[s][i];for(h=0;h<=i;++h){var w=0,y=1,B=[];for(e=0;e<=i;++e)B[e]=t.slice(0);B[0][0]=1;for(var x=1;x<=n;++x){var D=0,z=h-x,F=i-x;h>=x&&(B[y][0]=B[w][0]/v[F+1][z],D=B[y][0]*v[z][F]);var m=h-1<=F?x-1:i-h;for(s=z>=-1?1:-z;s<=m;++s)B[y][s]=(B[w][s]-B[w][s-1])/v[F+1][z+s],D+=B[y][s]*v[z+s][F];h<=F&&(B[y][x]=-B[w][x-1]/v[F+1][h],D+=B[y][x]*v[h][F]),o[x][h]=D;s=w;w=y,y=s}}for(h=i,x=1;x<=n;++x){for(s=0;s<=i;++s)o[x][s]*=h;h*=i-x}return o},calcBSplineDerivatives:function(a,i,n,c,t){for(var e=t<a?t:a,o=[],v=this.findSpan(a,c,i),l=this.calcBasisFunctionDerivatives(v,c,a,e,i),f=[],s=0;s<n.length;++s){var u=(S=n[s].clone()).w;S.x*=u,S.y*=u,S.z*=u,f[s]=S}for(var h=0;h<=e;++h){for(var S=f[v-a].clone().multiplyScalar(l[h][0]),d=1;d<=a;++d)S.add(f[v-a+d].clone().multiplyScalar(l[h][d]));o[h]=S}for(h=e+1;h<=t+1;++h)o[h]=new r.Vector4(0,0,0);return o},calcKoverI:function(r,a){for(var i=1,n=2;n<=r;++n)i*=n;var c=1;for(n=2;n<=a;++n)c*=n;for(n=2;n<=r-a;++n)c*=n;return i/c},calcRationalCurveDerivatives:function(a){for(var i=a.length,n=[],c=[],t=0;t<i;++t){var e=a[t];n[t]=new r.Vector3(e.x,e.y,e.z),c[t]=e.w}for(var o=[],v=0;v<i;++v){var l=n[v].clone();for(t=1;t<=v;++t)l.sub(o[v-t].clone().multiplyScalar(this.calcKoverI(v,t)*c[t]));o[v]=l.divideScalar(c[0])}return o},calcNURBSDerivatives:function(r,a,i,n,c){var t=this.calcBSplineDerivatives(r,a,i,n,c);return this.calcRationalCurveDerivatives(t)},calcSurfacePoint:function(a,i,n,c,t,e,o,v){for(var l=this.findSpan(a,e,n),f=this.findSpan(i,o,c),s=this.calcBasisFunctions(l,e,a,n),u=this.calcBasisFunctions(f,o,i,c),h=[],S=0;S<=i;++S){h[S]=new r.Vector4(0,0,0,0);for(var d=0;d<=a;++d){var p=t[l-a+d][f-i+S].clone(),w=p.w;p.x*=w,p.y*=w,p.z*=w,h[S].add(p.multiplyScalar(s[d]))}}var y=new r.Vector4(0,0,0,0);for(S=0;S<=i;++S)y.add(h[S].multiplyScalar(u[S]));y.divideScalar(y.w),v.set(y.x,y.y,y.z)}};return a.curves.NURBSUtils=i});
//# sourceMappingURL=../sourcemaps/curves/NURBSUtils.js.map
