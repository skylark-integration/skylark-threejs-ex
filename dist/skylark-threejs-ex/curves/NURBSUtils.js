/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(r){"use strict";return{findSpan:function(r,a,i){var n=i.length-r-1;if(a>=i[n])return n-1;if(a<=i[r])return r;for(var c=r,t=n,o=Math.floor((c+t)/2);a<i[o]||a>=i[o+1];)a<i[o]?t=o:c=o,o=Math.floor((c+t)/2);return o},calcBasisFunctions:function(r,a,i,n){var c=[],t=[],o=[];c[0]=1;for(var e=1;e<=i;++e){t[e]=a-n[r+1-e],o[e]=n[r+e]-a;for(var l=0,v=0;v<e;++v){var f=o[v+1],s=t[e-v],u=c[v]/(f+s);c[v]=l+f*u,l=s*u}c[e]=l}return c},calcBSplinePoint:function(a,i,n,c){for(var t=this.findSpan(a,c,i),o=this.calcBasisFunctions(t,c,a,i),e=new r.Vector4(0,0,0,0),l=0;l<=a;++l){var v=n[t-a+l],f=o[l],s=v.w*f;e.x+=v.x*s,e.y+=v.y*s,e.z+=v.z*s,e.w+=v.w*f}return e},calcBasisFunctionDerivatives:function(r,a,i,n,c){for(var t=[],o=0;o<=i;++o)t[o]=0;var e=[];for(o=0;o<=n;++o)e[o]=t.slice(0);var l=[];for(o=0;o<=i;++o)l[o]=t.slice(0);l[0][0]=1;for(var v=t.slice(0),f=t.slice(0),s=1;s<=i;++s){v[s]=a-c[r+1-s],f[s]=c[r+s]-a;for(var u=0,h=0;h<s;++h){var S=f[h+1],d=v[s-h];l[s][h]=S+d;var p=l[h][s-1]/l[s][h];l[h][s]=u+S*p,u=d*p}l[s][s]=u}for(s=0;s<=i;++s)e[0][s]=l[s][i];for(h=0;h<=i;++h){var w=0,y=1,B=[];for(o=0;o<=i;++o)B[o]=t.slice(0);B[0][0]=1;for(var D=1;D<=n;++D){var x=0,z=h-D,F=i-D;h>=D&&(B[y][0]=B[w][0]/l[F+1][z],x=B[y][0]*l[z][F]);var m=h-1<=F?D-1:i-h;for(s=z>=-1?1:-z;s<=m;++s)B[y][s]=(B[w][s]-B[w][s-1])/l[F+1][z+s],x+=B[y][s]*l[z+s][F];h<=F&&(B[y][D]=-B[w][D-1]/l[F+1][h],x+=B[y][D]*l[h][F]),e[D][h]=x;s=w;w=y,y=s}}for(h=i,D=1;D<=n;++D){for(s=0;s<=i;++s)e[D][s]*=h;h*=i-D}return e},calcBSplineDerivatives:function(a,i,n,c,t){for(var o=t<a?t:a,e=[],l=this.findSpan(a,c,i),v=this.calcBasisFunctionDerivatives(l,c,a,o,i),f=[],s=0;s<n.length;++s){var u=(S=n[s].clone()).w;S.x*=u,S.y*=u,S.z*=u,f[s]=S}for(var h=0;h<=o;++h){for(var S=f[l-a].clone().multiplyScalar(v[h][0]),d=1;d<=a;++d)S.add(f[l-a+d].clone().multiplyScalar(v[h][d]));e[h]=S}for(h=o+1;h<=t+1;++h)e[h]=new r.Vector4(0,0,0);return e},calcKoverI:function(r,a){for(var i=1,n=2;n<=r;++n)i*=n;var c=1;for(n=2;n<=a;++n)c*=n;for(n=2;n<=r-a;++n)c*=n;return i/c},calcRationalCurveDerivatives:function(a){for(var i=a.length,n=[],c=[],t=0;t<i;++t){var o=a[t];n[t]=new r.Vector3(o.x,o.y,o.z),c[t]=o.w}for(var e=[],l=0;l<i;++l){var v=n[l].clone();for(t=1;t<=l;++t)v.sub(e[l-t].clone().multiplyScalar(this.calcKoverI(l,t)*c[t]));e[l]=v.divideScalar(c[0])}return e},calcNURBSDerivatives:function(r,a,i,n,c){var t=this.calcBSplineDerivatives(r,a,i,n,c);return this.calcRationalCurveDerivatives(t)},calcSurfacePoint:function(a,i,n,c,t,o,e,l){for(var v=this.findSpan(a,o,n),f=this.findSpan(i,e,c),s=this.calcBasisFunctions(v,o,a,n),u=this.calcBasisFunctions(f,e,i,c),h=[],S=0;S<=i;++S){h[S]=new r.Vector4(0,0,0,0);for(var d=0;d<=a;++d){var p=t[v-a+d][f-i+S].clone(),w=p.w;p.x*=w,p.y*=w,p.z*=w,h[S].add(p.multiplyScalar(s[d]))}}var y=new r.Vector4(0,0,0,0);for(S=0;S<=i;++S)y.add(h[S].multiplyScalar(u[S]));y.divideScalar(y.w),l.set(y.x,y.y,y.z)}}});
//# sourceMappingURL=../sourcemaps/curves/NURBSUtils.js.map
