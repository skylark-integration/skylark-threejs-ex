/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){return e.DRACOExporter=function(){},e.DRACOExporter.prototype={constructor:e.DRACOExporter,parse:function(r,o){if(void 0===DracoEncoderModule)throw new Error("THREE.DRACOExporter: required the draco_decoder to work.");void 0===o&&(o={decodeSpeed:5,encodeSpeed:5,encoderMethod:e.DRACOExporter.MESH_EDGEBREAKER_ENCODING,quantization:[16,8,8,8,8],exportUvs:!0,exportNormals:!0,exportColor:!1});var t=DracoEncoderModule(),n=new t.Encoder,i=new t.MeshBuilder,d=new t.Mesh;if(!0===r.isGeometry){var a=new e.BufferGeometry;a.fromGeometry(r),r=a}if(!0!==r.isBufferGeometry)throw new Error("THREE.DRACOExporter.parse(geometry, options): geometry is not a THREE.Geometry or THREE.BufferGeometry instance.");var E=r.getAttribute("position");if(i.AddFloatAttributeToMesh(d,t.POSITION,E.count,E.itemSize,E.array),null!==(A=r.getIndex()))i.AddFacesToMesh(d,A.count,A.array);else{for(var A=new(E.count>65535?Uint32Array:Uint16Array)(E.count),u=0;u<A.length;u++)A[u]=u;i.AddFacesToMesh(d,E.count,A)}if(!0===o.exportNormals){var O=r.getAttribute("normal");void 0!==O&&i.AddFloatAttributeToMesh(d,t.NORMAL,O.count,O.itemSize,O.array)}if(!0===o.exportUvs){var c=r.getAttribute("uv");void 0!==c&&i.AddFloatAttributeToMesh(d,t.TEX_COORD,c.count,c.itemSize,c.array)}if(!0===o.exportColor){var p=r.getAttribute("color");void 0!==p&&i.AddFloatAttributeToMesh(d,t.COLOR,p.count,p.itemSize,p.array)}var R=new t.DracoInt8Array;if(n.SetSpeedOptions(o.encodeSpeed||5,o.decodeSpeed||5),void 0!==o.encoderMethod&&n.SetEncodingMethod(o.encoderMethod),void 0!==o.quantization)for(u=0;u<5;u++)void 0!==o.quantization[u]&&n.SetAttributeQuantization(u,o.quantization[u]);var s=n.EncodeMeshToDracoBuffer(d,R);if(t.destroy(d),0===s)throw new Error("THREE.DRACOExporter: Draco encoding failed.");var D=new Int8Array(new ArrayBuffer(s));for(u=0;u<s;u++)D[u]=R.GetValue(u);return t.destroy(R),t.destroy(n),t.destroy(i),D}},e.DRACOExporter.MESH_EDGEBREAKER_ENCODING=1,e.DRACOExporter.MESH_SEQUENTIAL_ENCODING=0,e.DRACOExporter.POINT_CLOUD=0,e.DRACOExporter.TRIANGULAR_MESH=1,e.DRACOExporter.INVALID=-1,e.DRACOExporter.POSITION=0,e.DRACOExporter.NORMAL=1,e.DRACOExporter.COLOR=2,e.DRACOExporter.TEX_COORD=3,e.DRACOExporter.GENERIC=4,e.DRACOExporter});
//# sourceMappingURL=../sourcemaps/exporters/DRACOExporter.js.map
