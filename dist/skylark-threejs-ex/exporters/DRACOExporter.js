/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){"use strict";var r=function(){};return r.prototype={constructor:r,parse:function(o,t){if(void 0===DracoEncoderModule)throw new Error("THREE.DRACOExporter: required the draco_decoder to work.");void 0===t&&(t={decodeSpeed:5,encodeSpeed:5,encoderMethod:r.MESH_EDGEBREAKER_ENCODING,quantization:[16,8,8,8,8],exportUvs:!0,exportNormals:!0,exportColor:!1});var n=DracoEncoderModule(),i=new n.Encoder,a=new n.MeshBuilder,d=new n.Mesh;if(!0===o.isGeometry){var u=new e.BufferGeometry;u.fromGeometry(o),o=u}if(!0!==o.isBufferGeometry)throw new Error("THREE.DRACOExporter.parse(geometry, options): geometry is not a THREE.Geometry or BufferGeometry instance.");var E=o.getAttribute("position");if(a.AddFloatAttributeToMesh(d,n.POSITION,E.count,E.itemSize,E.array),null!==(c=o.getIndex()))a.AddFacesToMesh(d,c.count,c.array);else{for(var c=new(E.count>65535?Uint32Array:Uint16Array)(E.count),s=0;s<c.length;s++)c[s]=s;a.AddFacesToMesh(d,E.count,c)}if(!0===t.exportNormals){var A=o.getAttribute("normal");void 0!==A&&a.AddFloatAttributeToMesh(d,n.NORMAL,A.count,A.itemSize,A.array)}if(!0===t.exportUvs){var f=o.getAttribute("uv");void 0!==f&&a.AddFloatAttributeToMesh(d,n.TEX_COORD,f.count,f.itemSize,f.array)}if(!0===t.exportColor){var y=o.getAttribute("color");void 0!==y&&a.AddFloatAttributeToMesh(d,n.COLOR,y.count,y.itemSize,y.array)}var O=new n.DracoInt8Array;if(i.SetSpeedOptions(t.encodeSpeed||5,t.decodeSpeed||5),void 0!==t.encoderMethod&&i.SetEncodingMethod(t.encoderMethod),void 0!==t.quantization)for(s=0;s<5;s++)void 0!==t.quantization[s]&&i.SetAttributeQuantization(s,t.quantization[s]);var v=i.EncodeMeshToDracoBuffer(d,O);if(n.destroy(d),0===v)throw new Error("THREE.DRACOExporter: Draco encoding failed.");var p=new Int8Array(new ArrayBuffer(v));for(s=0;s<v;s++)p[s]=O.GetValue(s);return n.destroy(O),n.destroy(i),n.destroy(a),p}},r.MESH_EDGEBREAKER_ENCODING=1,r.MESH_SEQUENTIAL_ENCODING=0,r.POINT_CLOUD=0,r.TRIANGULAR_MESH=1,r.INVALID=-1,r.POSITION=0,r.NORMAL=1,r.COLOR=2,r.TEX_COORD=3,r.GENERIC=4,r});
//# sourceMappingURL=../sourcemaps/exporters/DRACOExporter.js.map
