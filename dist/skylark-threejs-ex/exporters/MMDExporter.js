/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../utils/mmdparser"],function(r,n){"use strict";return function(){var e;this.parseVpd=function(t,a,o){if(!0!==t.isSkinnedMesh)return console.warn("THREE.MMDExporter: parseVpd() requires SkinnedMesh instance."),null;function i(r){Math.abs(r)<1e-6&&(r=0);var n=r.toString();-1===n.indexOf(".")&&(n+=".");var e=(n+="000000").indexOf(".");return n.slice(0,e)+"."+n.slice(e+1,e+7)}function s(r){for(var n=[],e=0,t=r.length;e<t;e++)n.push(i(r[e]));return n.join(",")}t.updateMatrixWorld(!0);var u=t.skeleton.bones,h=function(r){var n=r.clone();return n.pose(),n.skeleton.bones}(t),p=new r.Vector3,c=new r.Quaternion,l=new r.Quaternion,v=new r.Matrix4,f=[];f.push("Vocaloid Pose Data file"),f.push(""),f.push((""!==t.name?t.name.replace(/\s/g,"_"):"skin")+".osm;"),f.push(u.length+";"),f.push("");for(var d=0,g=u.length;d<g;d++){var k=u[d],m=h[d];!0===o&&void 0!==k.userData.ik&&void 0!==k.userData.ik.originalMatrix?v.fromArray(k.userData.ik.originalMatrix):v.copy(k.matrix),p.setFromMatrixPosition(v),c.setFromRotationMatrix(v);var x=p.sub(m.position).toArray(),M=l.copy(m.quaternion).conjugate().multiply(c).toArray();x[2]=-x[2],M[0]=-M[0],M[1]=-M[1],f.push("Bone"+d+"{"+k.name),f.push("  "+s(x)+";"),f.push("  "+s(M)+";"),f.push("}"),f.push("")}f.push("");var y=f.join("\n");return!0===a?function(r){if(void 0===e){var t=(new n.CharsetEncoder).s2uTable;e={};for(var a=Object.keys(t),o=0,i=a.length;o<i;o++){var s=a[o],u=t[s];s=parseInt(s),e[u]=s}}var h=[];for(o=0,i=r.length;o<i;o++){var p=r.charCodeAt(o);if(void 0===(u=e[p]))throw"cannot convert charcode 0x"+p.toString(16);u>255?(h.push(u>>8&255),h.push(255&u)):h.push(255&u)}return new Uint8Array(h)}(y):y}}});
//# sourceMappingURL=../sourcemaps/exporters/MMDExporter.js.map
