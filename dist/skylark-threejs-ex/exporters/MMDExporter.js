/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex","../utils/mmdparser"],function(r,e,n){"use strict";return e.exporters.MMDExporter=function(){var e;this.parseVpd=function(t,o,a){if(!0!==t.isSkinnedMesh)return console.warn("THREE.MMDExporter: parseVpd() requires SkinnedMesh instance."),null;function i(r){Math.abs(r)<1e-6&&(r=0);var e=r.toString();-1===e.indexOf(".")&&(e+=".");var n=(e+="000000").indexOf(".");return e.slice(0,n)+"."+e.slice(n+1,n+7)}function s(r){for(var e=[],n=0,t=r.length;n<t;n++)e.push(i(r[n]));return e.join(",")}t.updateMatrixWorld(!0);var u=t.skeleton.bones,p=function(r){var e=r.clone();return e.pose(),e.skeleton.bones}(t),h=new r.Vector3,c=new r.Quaternion,l=new r.Quaternion,v=new r.Matrix4,f=[];f.push("Vocaloid Pose Data file"),f.push(""),f.push((""!==t.name?t.name.replace(/\s/g,"_"):"skin")+".osm;"),f.push(u.length+";"),f.push("");for(var d=0,x=u.length;d<x;d++){var M=u[d],g=p[d];!0===a&&void 0!==M.userData.ik&&void 0!==M.userData.ik.originalMatrix?v.fromArray(M.userData.ik.originalMatrix):v.copy(M.matrix),h.setFromMatrixPosition(v),c.setFromRotationMatrix(v);var k=h.sub(g.position).toArray(),m=l.copy(g.quaternion).conjugate().multiply(c).toArray();k[2]=-k[2],m[0]=-m[0],m[1]=-m[1],f.push("Bone"+d+"{"+M.name),f.push("  "+s(k)+";"),f.push("  "+s(m)+";"),f.push("}"),f.push("")}f.push("");var y=f.join("\n");return!0===o?function(r){if(void 0===e){var t=(new n.CharsetEncoder).s2uTable;e={};for(var o=Object.keys(t),a=0,i=o.length;a<i;a++){var s=o[a],u=t[s];s=parseInt(s),e[u]=s}}var p=[];for(a=0,i=r.length;a<i;a++){var h=r.charCodeAt(a);if(void 0===(u=e[h]))throw"cannot convert charcode 0x"+h.toString(16);u>255?(p.push(u>>8&255),p.push(255&u)):p.push(255&u)}return new Uint8Array(p)}(y):y}}});
//# sourceMappingURL=../sourcemaps/exporters/MMDExporter.js.map
