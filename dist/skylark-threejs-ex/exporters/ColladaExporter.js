/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){return e.ColladaExporter=function(){},e.ColladaExporter.prototype={constructor:e.ColladaExporter,parse:function(r,t,a){a=a||{},""!==(a=Object.assign({version:"1.4.1",author:null,textureDirectory:""},a)).textureDirectory&&(a.textureDirectory=`${a.textureDirectory}/`.replace(/\\/g,"/").replace(/\/+/g,"/"));var i,n,o=a.version;if("1.4.1"!==o&&"1.5.0"!==o)return console.warn(`ColladaExporter : Version ${o} not supported for export. Only 1.4.1 and 1.5.0.`),null;function s(e,r){return i=i||document.createElement("canvas"),n=n||i.getContext("2d"),i.width=e.naturalWidth,i.height=e.naturalHeight,n.drawImage(e,0,0),function(e){for(var r=atob(e),t=new Uint8Array(r.length),a=0,i=t.length;a<i;a++)t[a]=r.charCodeAt(a);return t}(i.toDataURL(`image/${r}`,1).replace(/^data:image\/(png|jpg);base64,/,""))}var u,l=["getX","getY","getZ","getW"];function c(e){if(e.isInterleavedBufferAttribute){for(var r=new e.array.constructor(e.count*e.itemSize),t=e.itemSize,a=0,i=e.count;a<i;a++)for(var n=0;n<t;n++)r[a*t+n]=e[l[n]](a);return r}return e.array}function m(e,r,t,a){var i=c(e);return`<source id="${r}">`+`<float_array id="${r}-array" count="${i.length}">`+i.join(" ")+"</float_array><technique_common>"+`<accessor source="#${r}-array" count="${Math.floor(i.length/e.itemSize)}" stride="${e.itemSize}">`+t.map(e=>`<param name="${e}" type="${a}" />`).join("")+"</accessor></technique_common></source>"}function p(e){var r=$.get(e);if(null==r){r=`image-${h.length+1}`;var t=e.name||r,i=`<image id="${r}" name="${t}">`;i+="1.5.0"===o?`<init_from><ref>${a.textureDirectory}${t}.png</ref></init_from>`:`<init_from>${a.textureDirectory}${t}.png</init_from>`,i+="</image>",h.push(i),$.set(e,r),g.push({directory:a.textureDirectory,name:t,ext:"png",data:s(e.image,"png"),original:e})}return r}var f=new WeakMap,d=new WeakMap,$=new WeakMap,g=[],h=[],y=[],_=[],v=[],x=function r(t){var a=`<node name="${t.name}">`;if(a+=function(r){return r.updateMatrix(),(u=u||new e.Matrix4).copy(r.matrix),u.transpose(),`<matrix>${u.toArray().join(" ")}</matrix>`}(t),t instanceof e.Mesh&&null!=t.geometry){var i=function(r){var t,a,i,n=f.get(r);if(!n){var o=r;o instanceof e.Geometry&&(o=(new e.BufferGeometry).fromGeometry(o));var s=`Mesh${y.length+1}`,u=o.index?o.index.count*o.index.itemSize:o.attributes.position.count,l=null!=o.groups&&0!==o.groups.length?o.groups:[{start:0,count:u,materialIndex:0}],p=`<geometry id="${s}"${r.name?` name="${r.name}"`:""}><mesh>`,d=`${s}-position`,$=`${s}-vertices`;p+=m(o.attributes.position,d,["X","Y","Z"],"float"),p+=`<vertices id="${$}"><input semantic="POSITION" source="#${d}" /></vertices>`;var g=`<input semantic="VERTEX" source="#${$}" offset="0" />`;if("normal"in o.attributes){var h=`${s}-normal`;p+=m(o.attributes.normal,h,["X","Y","Z"],"float"),g+=`<input semantic="NORMAL" source="#${h}" offset="0" />`}if("uv"in o.attributes){var _=`${s}-texcoord`;p+=m(o.attributes.uv,_,["S","T"],"float"),g+=`<input semantic="TEXCOORD" source="#${_}" offset="0" set="0" />`}if("color"in o.attributes){var v=`${s}-color`;p+=m(o.attributes.color,v,["X","Y","Z"],"uint8"),g+=`<input semantic="COLOR" source="#${v}" offset="0" />`}var x=null;if(o.index)x=c(o.index);else for(var b=0,w=(x=new Array(u)).length;b<w;b++)x[b]=b;for(b=0,w=l.length;b<w;b++){var M=l[b],D=(t=x,a=M.start,i=M.count,Array.isArray(t)?t.slice(a,a+i):new t.constructor(t.buffer,a*t.BYTES_PER_ELEMENT,i)),O=D.length/3;p+=`<triangles material="MESH_MATERIAL_${M.materialIndex}" count="${O}">`,p+=g,p+=`<p>${D.join(" ")}</p>`,p+="</triangles>"}p+="</mesh></geometry>",y.push(p),n={meshid:s,bufferGeometry:o},f.set(r,n)}return n}(t.geometry),n=i.meshid,o=i.bufferGeometry,s=null,l=t.material||new e.MeshBasicMaterial,$=Array.isArray(l)?l:[l];s=(o.groups.length>$.length?new Array(o.groups.length):new Array($.length)).fill().map((r,t)=>(function(r){var t=d.get(r);if(null==t){t=`Mat${_.length+1}`;var a="phong";r instanceof e.MeshLambertMaterial?a="lambert":r instanceof e.MeshBasicMaterial&&(a="constant",null!==r.map&&console.warn("ColladaExporter: Texture maps not supported with MeshBasicMaterial."));var i=r.emissive?r.emissive:new e.Color(0,0,0),n=r.color?r.color:new e.Color(0,0,0),o=r.specular?r.specular:new e.Color(1,1,1),s=r.shininess||0,u=r.reflectivity||0,l="";!0===r.transparent&&(l+="<transparent>"+(r.map?'<texture texture="diffuse-sampler"></texture>':"<float>1</float>")+"</transparent>",r.opacity<1&&(l+=`<transparency><float>${r.opacity}</float></transparency>`));var c=`<technique sid="common"><${a}>`+"<emission>"+(r.emissiveMap?'<texture texture="emissive-sampler" texcoord="TEXCOORD" />':`<color sid="emission">${i.r} ${i.g} ${i.b} 1</color>`)+"</emission>"+("constant"!==a?"<diffuse>"+(r.map?'<texture texture="diffuse-sampler" texcoord="TEXCOORD" />':`<color sid="diffuse">${n.r} ${n.g} ${n.b} 1</color>`)+"</diffuse>":"")+("constant"!==a?"<bump>"+(r.normalMap?'<texture texture="bump-sampler" texcoord="TEXCOORD" />':"")+"</bump>":"")+("phong"===a?`<specular><color sid="specular">${o.r} ${o.g} ${o.b} 1</color></specular>`+"<shininess>"+(r.specularMap?'<texture texture="specular-sampler" texcoord="TEXCOORD" />':`<float sid="shininess">${s}</float>`)+"</shininess>":"")+`<reflective><color>${n.r} ${n.g} ${n.b} 1</color></reflective>`+`<reflectivity><float>${u}</float></reflectivity>`+l+`</${a}></technique>`,m=`<effect id="${t}-effect">`+"<profile_COMMON>"+(r.map?'<newparam sid="diffuse-surface"><surface type="2D">'+`<init_from>${p(r.map)}</init_from>`+'</surface></newparam><newparam sid="diffuse-sampler"><sampler2D><source>diffuse-surface</source></sampler2D></newparam>':"")+(r.specularMap?'<newparam sid="specular-surface"><surface type="2D">'+`<init_from>${p(r.specularMap)}</init_from>`+'</surface></newparam><newparam sid="specular-sampler"><sampler2D><source>specular-surface</source></sampler2D></newparam>':"")+(r.emissiveMap?'<newparam sid="emissive-surface"><surface type="2D">'+`<init_from>${p(r.emissiveMap)}</init_from>`+'</surface></newparam><newparam sid="emissive-sampler"><sampler2D><source>emissive-surface</source></sampler2D></newparam>':"")+(r.normalMap?'<newparam sid="bump-surface"><surface type="2D">'+`<init_from>${p(r.normalMap)}</init_from>`+'</surface></newparam><newparam sid="bump-sampler"><sampler2D><source>bump-surface</source></sampler2D></newparam>':"")+c+(r.side===e.DoubleSide?'<extra><technique profile="THREEJS"><double_sided sid="double_sided" type="int">1</double_sided></technique></extra>':"")+"</profile_COMMON></effect>",f=`<material id="${t}"${r.name?` name="${r.name}"`:""}><instance_effect url="#${t}-effect" /></material>`;v.push(f),_.push(m),d.set(r,t)}return t})($[t%$.length])),a+=`<instance_geometry url="#${n}">`+(null!=s?"<bind_material><technique_common>"+s.map((e,r)=>`<instance_material symbol="MESH_MATERIAL_${r}" target="#${e}" >`+'<bind_vertex_input semantic="TEXCOORD" input_semantic="TEXCOORD" input_set="0" /></instance_material>').join("")+"</technique_common></bind_material>":"")+"</instance_geometry>"}return t.children.forEach(e=>a+=r(e)),a+="</node>"}(r),b='<?xml version="1.0" encoding="UTF-8" standalone="no" ?>'+`<COLLADA xmlns="${"1.4.1"===o?"http://www.collada.org/2005/11/COLLADASchema":"https://www.khronos.org/collada/"}" version="${o}">`+"<asset><contributor><authoring_tool>three.js Collada Exporter</authoring_tool>"+(null!==a.author?`<author>${a.author}</author>`:"")+"</contributor>"+`<created>${(new Date).toISOString()}</created>`+`<modified>${(new Date).toISOString()}</modified>`+"<up_axis>Y_UP</up_axis></asset>";b+=`<library_images>${h.join("")}</library_images>`,b+=`<library_effects>${_.join("")}</library_effects>`,b+=`<library_materials>${v.join("")}</library_materials>`,b+=`<library_geometries>${y.join("")}</library_geometries>`,b+=`<library_visual_scenes><visual_scene id="Scene" name="scene">${x}</visual_scene></library_visual_scenes>`,b+='<scene><instance_visual_scene url="#Scene"/></scene>';var w,M,D,O,E,C,A={data:(w=b+="</COLLADA>",M=/^<\//,D=/(\?>$)|(\/>$)/,O=/<[^>]+>[^<]*<\/[^<]+>/,E=((e,r)=>r>0?e+E(e,r-1):""),C=0,w.match(/(<[^>]+>[^<]+<\/[^<]+>)|(<[^>]+>)/g).map(e=>{O.test(e)||D.test(e)||!M.test(e)||C--;var r=`${E("  ",C)}${e}`;return O.test(e)||D.test(e)||M.test(e)||C++,r}).join("\n")),textures:g};return"function"==typeof t&&requestAnimationFrame(()=>t(A)),A}},e.ColladaExporter});
//# sourceMappingURL=../sourcemaps/exporters/ColladaExporter.js.map
