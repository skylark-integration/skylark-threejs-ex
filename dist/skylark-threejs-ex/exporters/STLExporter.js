/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex"],function(e,r){"use strict";var t,o,a=function(){};return a.prototype={constructor:a,parse:(t=new e.Vector3,o=new e.Matrix3,function(r,a){void 0===a&&(a={});var n=void 0!==a.binary&&a.binary,i=[],l=0;if(r.traverse(function(r){if(r.isMesh){var t=r.geometry;t.isBufferGeometry&&(t=(new e.Geometry).fromBufferGeometry(t)),t.isGeometry&&(l+=t.faces.length,i.push({geometry:t,matrixWorld:r.matrixWorld}))}}),n){var s=80,y=new ArrayBuffer(2*l+3*l*4*4+80+4);(M=new DataView(y)).setUint32(s,l,!0),s+=4;for(var f=0,m=i.length;f<m;f++){var p=(w=i[f]).geometry.vertices,c=w.geometry.faces,x=w.matrixWorld;o.getNormalMatrix(x);for(var v=0,d=c.length;v<d;v++){var u=c[v];t.copy(u.normal).applyMatrix3(o).normalize(),M.setFloat32(s,t.x,!0),s+=4,M.setFloat32(s,t.y,!0),s+=4,M.setFloat32(s,t.z,!0),s+=4;for(var g=[u.a,u.b,u.c],h=0;h<3;h++)t.copy(p[g[h]]).applyMatrix4(x),M.setFloat32(s,t.x,!0),s+=4,M.setFloat32(s,t.y,!0),s+=4,M.setFloat32(s,t.z,!0),s+=4;M.setUint16(s,0,!0),s+=2}}return M}var M="";for(M+="solid exported\n",f=0,m=i.length;f<m;f++){var w;for(p=(w=i[f]).geometry.vertices,c=w.geometry.faces,x=w.matrixWorld,o.getNormalMatrix(x),v=0,d=c.length;v<d;v++){for(u=c[v],t.copy(u.normal).applyMatrix3(o).normalize(),M+="\tfacet normal "+t.x+" "+t.y+" "+t.z+"\n",M+="\t\touter loop\n",g=[u.a,u.b,u.c],h=0;h<3;h++)t.copy(p[g[h]]).applyMatrix4(x),M+="\t\t\tvertex "+t.x+" "+t.y+" "+t.z+"\n";M+="\t\tendloop\n",M+="\tendfacet\n"}}return M+="endsolid exported\n"})},r.exporters.STLExporter=a});
//# sourceMappingURL=../sourcemaps/exporters/STLExporter.js.map
