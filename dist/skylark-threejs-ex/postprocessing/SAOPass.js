/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex","./Pass","../shaders/SAOShader","../shaders/DepthLimitedBlurShader","../shaders/CopyShader","../shaders/UnpackDepthRGBAShader"],function(e,t,r,a,s,i,l){"use strict";var o=function(t,o,n,h,u){(r.call(this),this.scene=t,this.camera=o,this.clear=!0,this.needsSwap=!1,this.supportsDepthTextureExtension=void 0!==n&&n,this.supportsNormalTexture=void 0!==h&&h,this.originalClearColor=new e.Color,this.oldClearColor=new e.Color,this.oldClearAlpha=1,this.params={output:0,saoBias:.5,saoIntensity:.18,saoScale:1,saoKernelRadius:100,saoMinResolution:0,saoBlur:!0,saoBlurRadius:8,saoBlurStdDev:4,saoBlurDepthCutoff:.01},this.resolution=void 0!==u?new e.Vector2(u.x,u.y):new e.Vector2(256,256),this.saoRenderTarget=new e.WebGLRenderTarget(this.resolution.x,this.resolution.y,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat}),this.blurIntermediateRenderTarget=this.saoRenderTarget.clone(),this.beautyRenderTarget=this.saoRenderTarget.clone(),this.normalRenderTarget=new e.WebGLRenderTarget(this.resolution.x,this.resolution.y,{minFilter:e.NearestFilter,magFilter:e.NearestFilter,format:e.RGBAFormat}),this.depthRenderTarget=this.normalRenderTarget.clone(),this.supportsDepthTextureExtension)&&((n=new e.DepthTexture).type=e.UnsignedShortType,n.minFilter=e.NearestFilter,n.maxFilter=e.NearestFilter,this.beautyRenderTarget.depthTexture=n,this.beautyRenderTarget.depthBuffer=!0);this.depthMaterial=new e.MeshDepthMaterial,this.depthMaterial.depthPacking=e.RGBADepthPacking,this.depthMaterial.blending=e.NoBlending,this.normalMaterial=new e.MeshNormalMaterial,this.normalMaterial.blending=e.NoBlending,void 0===a&&console.error("THREE.SAOPass relies on SAOShader"),this.saoMaterial=new e.ShaderMaterial({defines:Object.assign({},a.defines),fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:e.UniformsUtils.clone(a.uniforms)}),this.saoMaterial.extensions.derivatives=!0,this.saoMaterial.defines.DEPTH_PACKING=this.supportsDepthTextureExtension?0:1,this.saoMaterial.defines.NORMAL_TEXTURE=this.supportsNormalTexture?1:0,this.saoMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.saoMaterial.uniforms.tDepth.value=this.supportsDepthTextureExtension?n:this.depthRenderTarget.texture,this.saoMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.saoMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.getInverse(this.camera.projectionMatrix),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.blending=e.NoBlending,void 0===s&&console.error("THREE.SAOPass relies on DepthLimitedBlurShader"),this.vBlurMaterial=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(s.uniforms),defines:Object.assign({},s.defines),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader}),this.vBlurMaterial.defines.DEPTH_PACKING=this.supportsDepthTextureExtension?0:1,this.vBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.vBlurMaterial.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.vBlurMaterial.uniforms.tDepth.value=this.supportsDepthTextureExtension?n:this.depthRenderTarget.texture,this.vBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.vBlurMaterial.blending=e.NoBlending,this.hBlurMaterial=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(s.uniforms),defines:Object.assign({},s.defines),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader}),this.hBlurMaterial.defines.DEPTH_PACKING=this.supportsDepthTextureExtension?0:1,this.hBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.hBlurMaterial.uniforms.tDiffuse.value=this.blurIntermediateRenderTarget.texture,this.hBlurMaterial.uniforms.tDepth.value=this.supportsDepthTextureExtension?n:this.depthRenderTarget.texture,this.hBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.hBlurMaterial.blending=e.NoBlending,void 0===i&&console.error("THREE.SAOPass relies on CopyShader"),this.materialCopy=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,blending:e.NoBlending}),this.materialCopy.transparent=!0,this.materialCopy.depthTest=!1,this.materialCopy.depthWrite=!1,this.materialCopy.blending=e.CustomBlending,this.materialCopy.blendSrc=e.DstColorFactor,this.materialCopy.blendDst=e.ZeroFactor,this.materialCopy.blendEquation=e.AddEquation,this.materialCopy.blendSrcAlpha=e.DstAlphaFactor,this.materialCopy.blendDstAlpha=e.ZeroFactor,this.materialCopy.blendEquationAlpha=e.AddEquation,void 0===l&&console.error("THREE.SAOPass relies on UnpackDepthRGBAShader"),this.depthCopy=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader,blending:e.NoBlending}),this.fsQuad=new r.FullScreenQuad(null)};return o.OUTPUT={Beauty:1,Default:0,SAO:2,Depth:3,Normal:4},o.prototype=Object.assign(Object.create(r.prototype),{constructor:o,render:function(t,r,a){if(this.renderToScreen&&(this.materialCopy.blending=e.NoBlending,this.materialCopy.uniforms.tDiffuse.value=a.texture,this.materialCopy.needsUpdate=!0,this.renderPass(t,this.materialCopy,null)),1!==this.params.output){this.oldClearColor.copy(t.getClearColor()),this.oldClearAlpha=t.getClearAlpha();var s=t.autoClear;t.autoClear=!1,t.setRenderTarget(this.depthRenderTarget),t.clear(),this.saoMaterial.uniforms.bias.value=this.params.saoBias,this.saoMaterial.uniforms.intensity.value=this.params.saoIntensity,this.saoMaterial.uniforms.scale.value=this.params.saoScale,this.saoMaterial.uniforms.kernelRadius.value=this.params.saoKernelRadius,this.saoMaterial.uniforms.minResolution.value=this.params.saoMinResolution,this.saoMaterial.uniforms.cameraNear.value=this.camera.near,this.saoMaterial.uniforms.cameraFar.value=this.camera.far;var i=this.params.saoBlurDepthCutoff*(this.camera.far-this.camera.near);this.vBlurMaterial.uniforms.depthCutoff.value=i,this.hBlurMaterial.uniforms.depthCutoff.value=i,this.vBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.vBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.hBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.hBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.params.saoBlurRadius=Math.floor(this.params.saoBlurRadius),this.prevStdDev===this.params.saoBlurStdDev&&this.prevNumSamples===this.params.saoBlurRadius||(BlurShaderUtils.configure(this.vBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new e.Vector2(0,1)),BlurShaderUtils.configure(this.hBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new e.Vector2(1,0)),this.prevStdDev=this.params.saoBlurStdDev,this.prevNumSamples=this.params.saoBlurRadius),t.setClearColor(0),t.setRenderTarget(this.beautyRenderTarget),t.clear(),t.render(this.scene,this.camera),this.supportsDepthTextureExtension||this.renderOverride(t,this.depthMaterial,this.depthRenderTarget,0,1),this.supportsNormalTexture&&this.renderOverride(t,this.normalMaterial,this.normalRenderTarget,7829503,1),this.renderPass(t,this.saoMaterial,this.saoRenderTarget,16777215,1),this.params.saoBlur&&(this.renderPass(t,this.vBlurMaterial,this.blurIntermediateRenderTarget,16777215,1),this.renderPass(t,this.hBlurMaterial,this.saoRenderTarget,16777215,1));var l=this.materialCopy;3===this.params.output?this.supportsDepthTextureExtension?(this.materialCopy.uniforms.tDiffuse.value=this.beautyRenderTarget.depthTexture,this.materialCopy.needsUpdate=!0):(this.depthCopy.uniforms.tDiffuse.value=this.depthRenderTarget.texture,this.depthCopy.needsUpdate=!0,l=this.depthCopy):4===this.params.output?(this.materialCopy.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.materialCopy.needsUpdate=!0):(this.materialCopy.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.materialCopy.needsUpdate=!0),0===this.params.output?l.blending=e.CustomBlending:l.blending=e.NoBlending,this.renderPass(t,l,this.renderToScreen?null:a),t.setClearColor(this.oldClearColor,this.oldClearAlpha),t.autoClear=s}},renderPass:function(e,t,r,a,s){this.originalClearColor.copy(e.getClearColor());var i=e.getClearAlpha(),l=e.autoClear;e.setRenderTarget(r),e.autoClear=!1,void 0!==a&&null!==a&&(e.setClearColor(a),e.setClearAlpha(s||0),e.clear()),this.fsQuad.material=t,this.fsQuad.render(e),e.autoClear=l,e.setClearColor(this.originalClearColor),e.setClearAlpha(i)},renderOverride:function(e,t,r,a,s){this.originalClearColor.copy(e.getClearColor());var i=e.getClearAlpha(),l=e.autoClear;e.setRenderTarget(r),e.autoClear=!1,a=t.clearColor||a,s=t.clearAlpha||s,void 0!==a&&null!==a&&(e.setClearColor(a),e.setClearAlpha(s||0),e.clear()),this.scene.overrideMaterial=t,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=l,e.setClearColor(this.originalClearColor),e.setClearAlpha(i)},setSize:function(e,t){this.beautyRenderTarget.setSize(e,t),this.saoRenderTarget.setSize(e,t),this.blurIntermediateRenderTarget.setSize(e,t),this.normalRenderTarget.setSize(e,t),this.depthRenderTarget.setSize(e,t),this.saoMaterial.uniforms.size.value.set(e,t),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.getInverse(this.camera.projectionMatrix),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.needsUpdate=!0,this.vBlurMaterial.uniforms.size.value.set(e,t),this.vBlurMaterial.needsUpdate=!0,this.hBlurMaterial.uniforms.size.value.set(e,t),this.hBlurMaterial.needsUpdate=!0}}),t.postprocessing.SAOPass=o});
//# sourceMappingURL=../sourcemaps/postprocessing/SAOPass.js.map
