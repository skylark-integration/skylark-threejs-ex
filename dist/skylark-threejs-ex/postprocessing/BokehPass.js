/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex","../postprocessing/Pass","../shaders/BokehShader"],function(e,r,t,a){"use strict";var s=function(r,s,i){t.call(this),this.scene=r,this.camera=s;var l=void 0!==i.focus?i.focus:1,n=void 0!==i.aspect?i.aspect:s.aspect,h=void 0!==i.aperture?i.aperture:.025,o=void 0!==i.maxblur?i.maxblur:1,d=i.width||window.innerWidth||1,u=i.height||window.innerHeight||1;this.renderTargetDepth=new e.WebGLRenderTarget(d,u,{minFilter:e.NearestFilter,magFilter:e.NearestFilter,stencilBuffer:!1}),this.renderTargetDepth.texture.name="BokehPass.depth",this.materialDepth=new e.MeshDepthMaterial,this.materialDepth.depthPacking=e.RGBADepthPacking,this.materialDepth.blending=e.NoBlending,void 0===a&&console.error("BokehPass relies on BokehShader");var c=a,p=e.UniformsUtils.clone(c.uniforms);p.tDepth.value=this.renderTargetDepth.texture,p.focus.value=l,p.aspect.value=n,p.aperture.value=h,p.maxblur.value=o,p.nearClip.value=s.near,p.farClip.value=s.far,this.materialBokeh=new e.ShaderMaterial({defines:Object.assign({},c.defines),uniforms:p,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}),this.uniforms=p,this.needsSwap=!1,this.fsQuad=new t.FullScreenQuad(this.materialBokeh),this.oldClearColor=new e.Color};return s.prototype=Object.assign(Object.create(t.prototype),{constructor:s,render:function(e,r,t){this.scene.overrideMaterial=this.materialDepth,this.oldClearColor.copy(e.getClearColor());var a=e.getClearAlpha(),s=e.autoClear;e.autoClear=!1,e.setClearColor(16777215),e.setClearAlpha(1),e.setRenderTarget(this.renderTargetDepth),e.clear(),e.render(this.scene,this.camera),this.uniforms.tColor.value=t.texture,this.uniforms.nearClip.value=this.camera.near,this.uniforms.farClip.value=this.camera.far,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(r),e.clear(),this.fsQuad.render(e)),this.scene.overrideMaterial=null,e.setClearColor(this.oldClearColor),e.setClearAlpha(a),e.autoClear=s}}),r.postprocessing.BokehPass=s});
//# sourceMappingURL=../sourcemaps/postprocessing/BokehPass.js.map
