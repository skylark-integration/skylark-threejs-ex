/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","./SSAARenderPass"],function(e){return e.TAARenderPass=function(t,s,a,r){void 0===e.SSAARenderPass&&console.error("THREE.TAARenderPass relies on THREE.SSAARenderPass"),e.SSAARenderPass.call(this,t,s,a,r),this.sampleLevel=0,this.accumulate=!1},e.TAARenderPass.JitterVectors=e.SSAARenderPass.JitterVectors,e.TAARenderPass.prototype=Object.assign(Object.create(e.SSAARenderPass.prototype),{constructor:e.TAARenderPass,render:function(t,s,a,r){if(!this.accumulate)return e.SSAARenderPass.prototype.render.call(this,t,s,a,r),void(this.accumulateIndex=-1);var i=e.TAARenderPass.JitterVectors[5];this.sampleRenderTarget||(this.sampleRenderTarget=new e.WebGLRenderTarget(a.width,a.height,this.params),this.sampleRenderTarget.texture.name="TAARenderPass.sample"),this.holdRenderTarget||(this.holdRenderTarget=new e.WebGLRenderTarget(a.width,a.height,this.params),this.holdRenderTarget.texture.name="TAARenderPass.hold"),this.accumulate&&-1===this.accumulateIndex&&(e.SSAARenderPass.prototype.render.call(this,t,this.holdRenderTarget,a,r),this.accumulateIndex=0);var n=t.autoClear;t.autoClear=!1;var h=1/i.length;if(this.accumulateIndex>=0&&this.accumulateIndex<i.length){this.copyUniforms.opacity.value=h,this.copyUniforms.tDiffuse.value=s.texture;for(var d=Math.pow(2,this.sampleLevel),c=0;c<d;c++){var l=i[this.accumulateIndex];if(this.camera.setViewOffset&&this.camera.setViewOffset(a.width,a.height,.0625*l[0],.0625*l[1],a.width,a.height),t.setRenderTarget(s),t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(this.sampleRenderTarget),0===this.accumulateIndex&&t.clear(),this.fsQuad.render(t),this.accumulateIndex++,this.accumulateIndex>=i.length)break}this.camera.clearViewOffset&&this.camera.clearViewOffset()}var u=this.accumulateIndex*h;u>0&&(this.copyUniforms.opacity.value=1,this.copyUniforms.tDiffuse.value=this.sampleRenderTarget.texture,t.setRenderTarget(s),t.clear(),this.fsQuad.render(t)),u<1&&(this.copyUniforms.opacity.value=1-u,this.copyUniforms.tDiffuse.value=this.holdRenderTarget.texture,t.setRenderTarget(s),0===u&&t.clear(),this.fsQuad.render(t)),t.autoClear=n}}),e.TAARenderPass});
//# sourceMappingURL=../sourcemaps/postprocessing/TAARenderPass.js.map
