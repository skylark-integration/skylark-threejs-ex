/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex","./SSAARenderPass"],function(e,t,r){"use strict";var a=function(e,t,a,s){void 0===r&&console.error("TAARenderPass relies on SSAARenderPass"),r.call(this,e,t,a,s),this.sampleLevel=0,this.accumulate=!1};return a.JitterVectors=r.JitterVectors,a.prototype=Object.assign(Object.create(r.prototype),{constructor:a,render:function(t,s,i,h){if(!this.accumulate)return r.prototype.render.call(this,t,s,i,h),void(this.accumulateIndex=-1);var n=a.JitterVectors[5];this.sampleRenderTarget||(this.sampleRenderTarget=new e.WebGLRenderTarget(i.width,i.height,this.params),this.sampleRenderTarget.texture.name="TAARenderPass.sample"),this.holdRenderTarget||(this.holdRenderTarget=new e.WebGLRenderTarget(i.width,i.height,this.params),this.holdRenderTarget.texture.name="TAARenderPass.hold"),this.accumulate&&-1===this.accumulateIndex&&(r.prototype.render.call(this,t,this.holdRenderTarget,i,h),this.accumulateIndex=0);var c=t.autoClear;t.autoClear=!1;var l=1/n.length;if(this.accumulateIndex>=0&&this.accumulateIndex<n.length){this.copyUniforms.opacity.value=l,this.copyUniforms.tDiffuse.value=s.texture;for(var d=Math.pow(2,this.sampleLevel),u=0;u<d;u++){var o=n[this.accumulateIndex];if(this.camera.setViewOffset&&this.camera.setViewOffset(i.width,i.height,.0625*o[0],.0625*o[1],i.width,i.height),t.setRenderTarget(s),t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(this.sampleRenderTarget),0===this.accumulateIndex&&t.clear(),this.fsQuad.render(t),this.accumulateIndex++,this.accumulateIndex>=n.length)break}this.camera.clearViewOffset&&this.camera.clearViewOffset()}var m=this.accumulateIndex*l;m>0&&(this.copyUniforms.opacity.value=1,this.copyUniforms.tDiffuse.value=this.sampleRenderTarget.texture,t.setRenderTarget(s),t.clear(),this.fsQuad.render(t)),m<1&&(this.copyUniforms.opacity.value=1-m,this.copyUniforms.tDiffuse.value=this.holdRenderTarget.texture,t.setRenderTarget(s),0===m&&t.clear(),this.fsQuad.render(t)),t.autoClear=c}}),t.postprocessing.TAARenderPass=a});
//# sourceMappingURL=../sourcemaps/postprocessing/TAARenderPass.js.map
