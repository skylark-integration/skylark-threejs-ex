/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex","../postprocessing/Pass","../shaders/CopyShader","../shaders/ConvolutionShader"],function(e,r,t,n,s){"use strict";var i=function(r,o,a,l){t.call(this),r=void 0!==r?r:1,o=void 0!==o?o:25,a=void 0!==a?a:4,l=void 0!==l?l:256;var u={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat};this.renderTargetX=new e.WebGLRenderTarget(l,l,u),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new e.WebGLRenderTarget(l,l,u),this.renderTargetY.texture.name="BloomPass.y",void 0===n&&console.error("BloomPass relies on CopyShader");var d=n;this.copyUniforms=e.UniformsUtils.clone(d.uniforms),this.copyUniforms.opacity.value=r,this.materialCopy=new e.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:e.AdditiveBlending,transparent:!0}),void 0===s&&console.error("BloomPass relies on ConvolutionShader");var h=s;this.convolutionUniforms=e.UniformsUtils.clone(h.uniforms),this.convolutionUniforms.uImageIncrement.value=i.blurX,this.convolutionUniforms.cKernel.value=s.buildKernel(a),this.materialConvolution=new e.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,defines:{KERNEL_SIZE_FLOAT:o.toFixed(1),KERNEL_SIZE_INT:o.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new t.FullScreenQuad(null)};return i.prototype=Object.assign(Object.create(t.prototype),{constructor:i,render:function(e,r,t,n,s){s&&e.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=t.texture,this.convolutionUniforms.uImageIncrement.value=i.blurX,e.setRenderTarget(this.renderTargetX),e.clear(),this.fsQuad.render(e),this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture,this.convolutionUniforms.uImageIncrement.value=i.blurY,e.setRenderTarget(this.renderTargetY),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY.texture,s&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e)}}),i.blurX=new e.Vector2(.001953125,0),i.blurY=new e.Vector2(0,.001953125),r.postprocessing.BloomPass=i});
//# sourceMappingURL=../sourcemaps/postprocessing/BloomPass.js.map
