/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../shaders/CopyShader","./ShaderPass","./MaskPass"],function(e){return e.EffectComposer=function(t,i){if(this.renderer=t,void 0===i){var s={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat,stencilBuffer:!1},r=t.getSize(new e.Vector2);this._pixelRatio=t.getPixelRatio(),this._width=r.width,this._height=r.height,(i=new e.WebGLRenderTarget(this._width*this._pixelRatio,this._height*this._pixelRatio,s)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=i.width,this._height=i.height;this.renderTarget1=i,this.renderTarget2=i.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===e.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),void 0===e.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass"),this.copyPass=new e.ShaderPass(e.CopyShader),this.clock=new e.Clock},Object.assign(e.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},insertPass:function(e,t){this.passes.splice(t,0,e)},isLastEnabledPass:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0},render:function(t){void 0===t&&(t=this.clock.getDelta());var i,s,r=this.renderer.getRenderTarget(),h=!1,a=this.passes.length;for(s=0;s<a;s++)if(!1!==(i=this.passes[s]).enabled){if(i.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),i.render(this.renderer,this.writeBuffer,this.readBuffer,t,h),i.needsSwap){if(h){var n=this.renderer.getContext(),o=this.renderer.state.buffers.stencil;o.setFunc(n.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),o.setFunc(n.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==e.MaskPass&&(i instanceof e.MaskPass?h=!0:i instanceof e.ClearMaskPass&&(h=!1))}this.renderer.setRenderTarget(r)},reset:function(t){if(void 0===t){var i=this.renderer.getSize(new e.Vector2);this._pixelRatio=this.renderer.getPixelRatio(),this._width=i.width,this._height=i.height,(t=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this._width=e,this._height=t;var i=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget1.setSize(i,s),this.renderTarget2.setSize(i,s);for(var r=0;r<this.passes.length;r++)this.passes[r].setSize(i,s)},setPixelRatio:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}),e.EffectComposer});
//# sourceMappingURL=../sourcemaps/postprocessing/EffectComposer.js.map
