/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(t){"use strict";var e=function(e,i,s){this._scene=e,this._trackInfo=i,this._onUpdate=s,this._mixer=new t.AnimationMixer(e),this._clip=null,this._action=null,this._tracks={},this._propRefs={},this._channelNames=[]};return e.prototype={constructor:e,init:function(){for(var e=[],i=this._trackInfo,s=0,r=i.length;s!==r;++s){var n=i[s];e.push(this._addTrack(n.type,n.propertyPath,n.initialValue,n.interpolation))}this._clip=new t.AnimationClip("editclip",0,e),this._action=this._mixer.clipAction(this._clip).play()},setDisplayTime:function(t){this._action.time=t,this._mixer.update(0),this._onUpdate()},setDuration:function(t){this._clip.duration=t},getChannelNames:function(){return this._channelNames},getChannelKeyTimes:function(t){return this._tracks[t].times},setKeyframe:function(t,e){var i=this._tracks[t],s=i.times,r=Timeliner.binarySearch(s,e),n=i.values,a=i.getValueSize(),h=r*a;if(r<0){h=(r=~r)*a;for(var l=s.length+1,o=n.length+a,c=l-1;c!==r;--c)s[c]=s[c-1];c=o-1;for(var u=h+a-1;c!==u;--c)n[c]=n[c-a]}s[r]=e,this._propRefs[t].getValue(n,h)},delKeyframe:function(t,e){var i=this._tracks[t],s=i.times,r=Timeliner.binarySearch(s,e);if(s.length>1&&r>=0){for(var n=s.length-1,a=i.values,h=i.getValueSize(),l=a.length-h,o=r;o!==n;++o)s[o]=s[o+1];s.pop();for(var c=r*h;c!==l;++c)a[c]=a[c+h];a.length=l}},moveKeyframe:function(t,e,i,s){var r=this._tracks[t],n=r.times,a=Timeliner.binarySearch(n,e);if(a>=0){for(var h=s?n.length:a+1,l=n[a-1]<=e||!s&&e>=n[a+1];a!==h;)n[a++]+=i;l&&this._sort(r)}},serialize:function(){for(var t={duration:this._clip.duration,channels:{}},e=this._channelNames,i=this._tracks,s=t.channels,r=0,n=e.length;r!==n;++r){var a=e[r],h=i[a];s[a]={times:h.times,values:h.values}}return t},deserialize:function(t){var e=this._channelNames,i=this._tracks,s=t.channels;this.setDuration(t.duration);for(var r=0,n=e.length;r!==n;++r){var a=e[r],h=i[a],l=s[a];this._setArray(h.times,l.times),this._setArray(h.values,l.values)}this.setDisplayTime(this._mixer.time)},_sort:function(e){var i=e.times,s=t.AnimationUtils.getKeyframeOrder(i);this._setArray(i,t.AnimationUtils.sortedArray(i,1,s));var r=e.values,n=e.getValueSize();this._setArray(r,t.AnimationUtils.sortedArray(r,n,s))},_setArray:function(t,e){t.length=0,t.push.apply(t,e)},_addTrack:function(e,i,s,r){var n=new e(i,[0],s,r);return n.times=Array.prototype.slice.call(n.times),n.values=Array.prototype.slice.call(n.values),this._channelNames.push(i),this._tracks[i]=n,this._propRefs[i]=new t.PropertyBinding(this._scene,i),n}},e});
//# sourceMappingURL=../sourcemaps/animation/TimelinerController.js.map
