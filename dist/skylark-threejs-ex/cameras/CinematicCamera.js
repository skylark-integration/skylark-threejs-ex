/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../shaders/BokehShader2","../shaders/BokehShader2"],function(e){return e.CinematicCamera=function(t,s,i,r){e.PerspectiveCamera.call(this,t,s,i,r),this.type="CinematicCamera",this.postprocessing={enabled:!0},this.shaderSettings={rings:3,samples:4};var o=e.BokehDepthShader;this.materialDepth=new e.ShaderMaterial({uniforms:o.uniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader}),this.materialDepth.uniforms.mNear.value=i,this.materialDepth.uniforms.mFar.value=r,this.setLens(),this.initPostProcessing()},e.CinematicCamera.prototype=Object.create(e.PerspectiveCamera.prototype),e.CinematicCamera.prototype.constructor=e.CinematicCamera,e.CinematicCamera.prototype.setLens=function(e,t,s,i){void 0===e&&(e=35),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e),void 0===s&&(s=8),void 0===i&&(i=.019),this.fNumber=s,this.coc=i,this.aperture=e/this.fNumber,this.hyperFocal=e*e/(this.aperture*this.coc)},e.CinematicCamera.prototype.linearize=function(e){var t=this.far,s=this.near;return-t*s/(e*(t-s)-t)},e.CinematicCamera.prototype.smoothstep=function(e,t,s){var i=this.saturate((s-e)/(t-e));return i*i*(3-2*i)},e.CinematicCamera.prototype.saturate=function(e){return Math.max(0,Math.min(1,e))},e.CinematicCamera.prototype.focusAt=function(e){void 0===e&&(e=20);var t=this.getFocalLength();this.focus=e,this.nearPoint=this.hyperFocal*this.focus/(this.hyperFocal+(this.focus-t)),this.farPoint=this.hyperFocal*this.focus/(this.hyperFocal-(this.focus-t)),this.depthOfField=this.farPoint-this.nearPoint,this.depthOfField<0&&(this.depthOfField=0),this.sdistance=this.smoothstep(this.near,this.far,this.focus),this.ldistance=this.linearize(1-this.sdistance),this.postprocessing.bokeh_uniforms.focalDepth.value=this.ldistance},e.CinematicCamera.prototype.initPostProcessing=function(){if(this.postprocessing.enabled){this.postprocessing.scene=new e.Scene,this.postprocessing.camera=new e.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,-1e4,1e4),this.postprocessing.scene.add(this.postprocessing.camera);var t={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBFormat};this.postprocessing.rtTextureDepth=new e.WebGLRenderTarget(window.innerWidth,window.innerHeight,t),this.postprocessing.rtTextureColor=new e.WebGLRenderTarget(window.innerWidth,window.innerHeight,t);var s=e.BokehShader;this.postprocessing.bokeh_uniforms=e.UniformsUtils.clone(s.uniforms),this.postprocessing.bokeh_uniforms.tColor.value=this.postprocessing.rtTextureColor.texture,this.postprocessing.bokeh_uniforms.tDepth.value=this.postprocessing.rtTextureDepth.texture,this.postprocessing.bokeh_uniforms.manualdof.value=0,this.postprocessing.bokeh_uniforms.shaderFocus.value=0,this.postprocessing.bokeh_uniforms.fstop.value=2.8,this.postprocessing.bokeh_uniforms.showFocus.value=1,this.postprocessing.bokeh_uniforms.focalDepth.value=.1,this.postprocessing.bokeh_uniforms.znear.value=this.near,this.postprocessing.bokeh_uniforms.zfar.value=this.near,this.postprocessing.bokeh_uniforms.textureWidth.value=window.innerWidth,this.postprocessing.bokeh_uniforms.textureHeight.value=window.innerHeight,this.postprocessing.materialBokeh=new e.ShaderMaterial({uniforms:this.postprocessing.bokeh_uniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,defines:{RINGS:this.shaderSettings.rings,SAMPLES:this.shaderSettings.samples,DEPTH_PACKING:1}}),this.postprocessing.quad=new e.Mesh(new e.PlaneBufferGeometry(window.innerWidth,window.innerHeight),this.postprocessing.materialBokeh),this.postprocessing.quad.position.z=-500,this.postprocessing.scene.add(this.postprocessing.quad)}},e.CinematicCamera.prototype.renderCinematic=function(e,t){if(this.postprocessing.enabled){var s=t.getRenderTarget();t.clear(),e.overrideMaterial=null,t.setRenderTarget(this.postprocessing.rtTextureColor),t.clear(),t.render(e,this),e.overrideMaterial=this.materialDepth,t.setRenderTarget(this.postprocessing.rtTextureDepth),t.clear(),t.render(e,this),t.setRenderTarget(null),t.render(this.postprocessing.scene,this.postprocessing.camera),t.setRenderTarget(s)}},e.CinematicCamera});
//# sourceMappingURL=../sourcemaps/cameras/CinematicCamera.js.map
