/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(function(){"use strict";function e(e,n,t,r){var a=n.x,i=n.y,o=n.z,s=n.w,N=a+a,c=i+i,u=o+o,p=a*N,h=a*c,d=a*u,v=i*c,f=i*u,y=o*u,w=s*N,M=s*c,A=s*u;t[r+0]=1-(v+y),t[r+1]=h+A,t[r+2]=d-M,t[r+3]=0,t[r+4]=h-A,t[r+5]=1-(p+y),t[r+6]=f+w,t[r+7]=0,t[r+8]=d+M,t[r+9]=f-w,t[r+10]=1-(p+v),t[r+11]=0,t[r+12]=e.x,t[r+13]=e.y,t[r+14]=e.z,t[r+15]=1}return function(){var n=60,t=1/n,r=new CANNON.World;r.gravity.set(0,-9.8,0),r.broadphase=new CANNON.SAPBroadphase(r);var a=[],i=new WeakMap,o=0;return setInterval(function(){var s=performance.now();if(o>0){var N=(s-o)/1e3;r.step(t,N,n)}o=s;for(var c=0,u=a.length;c<u;c++){var p=a[c];if(p.isInstancedMesh){for(var h=p.instanceMatrix.array,d=i.get(p),v=0;v<d.length;v++)e((f=d[v]).position,f.quaternion,h,16*v);p.instanceMatrix.needsUpdate=!0}else if(p.isMesh){var f=i.get(p);p.position.copy(f.position),p.quaternion.copy(f.quaternion)}}},1e3/n),{addMesh:function(e,n=0){var t=function(e){var n=e.parameters;switch(e.type){case"BoxBufferGeometry":var t=new CANNON.Vec3;return t.x=void 0!==n.width?n.width/2:.5,t.y=void 0!==n.height?n.height/2:.5,t.z=void 0!==n.depth?n.depth/2:.5,new CANNON.Box(t);case"PlaneBufferGeometry":return new CANNON.Plane;case"SphereBufferGeometry":var r=n.radius;return new CANNON.Sphere(r)}return null}(e.geometry);null!==t&&(e.isInstancedMesh?function(e,n,t){for(var o=e.instanceMatrix.array,s=[],N=0;N<e.count;N++){var c=16*N,u=new CANNON.Vec3;u.set(o[c+12],o[c+13],o[c+14]);var p=new CANNON.Body({position:u,mass:n,shape:t});r.addBody(p),s.push(p)}n>0&&(e.instanceMatrix.setUsage(35048),a.push(e),i.set(e,s))}(e,n,t):e.isMesh&&function(e,n,t){var o=new CANNON.Vec3;o.copy(e.position);var s=new CANNON.Quaternion;s.copy(e.quaternion);var N=new CANNON.Body({position:o,quaternion:s,mass:n,shape:t});r.addBody(N),n>0&&(a.push(e),i.set(e,N))}(e,n,t))},setMeshPosition:function(e,n,t=0){e.isInstancedMesh?i.get(e)[t].position.copy(n):e.isMesh&&i.get(e).position.copy(n)}}}});
//# sourceMappingURL=../sourcemaps/physics/CannonPhysics.js.map
