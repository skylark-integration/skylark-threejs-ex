/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","./LineSegmentsGeometry","./LineMaterial"],function(t,e,r){var n,a;return t.LineSegments2=function(e,r){t.Mesh.call(this),this.type="LineSegments2",this.geometry=void 0!==e?e:new t.LineSegmentsGeometry,this.material=void 0!==r?r:new t.LineMaterial({color:16777215*Math.random()})},t.LineSegments2.prototype=Object.assign(Object.create(t.Mesh.prototype),{constructor:t.LineSegments2,isLineSegments2:!0,computeLineDistances:(n=new t.Vector3,a=new t.Vector3,function(){for(var e=this.geometry,r=e.attributes.instanceStart,i=e.attributes.instanceEnd,o=new Float32Array(2*r.data.count),s=0,c=0,l=r.data.count;s<l;s++,c+=2)n.fromBufferAttribute(r,s),a.fromBufferAttribute(i,s),o[c]=0===c?0:o[c-1],o[c+1]=o[c]+n.distanceTo(a);var u=new t.InstancedInterleavedBuffer(o,2,1);return e.setAttribute("instanceDistanceStart",new t.InterleavedBufferAttribute(u,1,0)),e.setAttribute("instanceDistanceEnd",new t.InterleavedBufferAttribute(u,1,1)),this}),raycast:function(){var e=new t.Vector4,r=new t.Vector4,n=new t.Vector4,a=new t.Vector3,i=new t.Matrix4,o=new t.Line3,s=new t.Vector3;return function(c,l){null===c.camera&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.');var u=c.ray,m=c.camera,f=m.projectionMatrix,y=this.geometry,p=this.material,d=p.resolution,w=p.linewidth,v=y.attributes.instanceStart,x=y.attributes.instanceEnd;u.at(1,n),n.w=1,n.applyMatrix4(m.matrixWorldInverse),n.applyMatrix4(f),n.multiplyScalar(1/n.w),n.x*=d.x/2,n.y*=d.y/2,n.z=0,a.copy(n);var b=this.matrixWorld;i.multiplyMatrices(m.matrixWorldInverse,b);for(var S=0,g=v.count;S<g;S++){e.fromBufferAttribute(v,S),r.fromBufferAttribute(x,S),e.w=1,r.w=1,e.applyMatrix4(i),r.applyMatrix4(i),e.applyMatrix4(f),r.applyMatrix4(f),e.multiplyScalar(1/e.w),r.multiplyScalar(1/r.w);var h=e.z<-1&&r.z<-1,M=e.z>1&&r.z>1;if(!h&&!M){e.x*=d.x/2,e.y*=d.y/2,r.x*=d.x/2,r.y*=d.y/2,o.start.copy(e),o.start.z=0,o.end.copy(r),o.end.z=0;var L=o.closestPointToPointParameter(a,!0);o.at(L,s);var A=t.MathUtils.lerp(e.z,r.z,L),z=A>=-1&&A<=1,B=a.distanceTo(s)<.5*w;if(z&&B){o.start.fromBufferAttribute(v,S),o.end.fromBufferAttribute(x,S),o.start.applyMatrix4(b),o.end.applyMatrix4(b);var V=new t.Vector3,I=new t.Vector3;u.distanceSqToSegment(o.start,o.end,I,V),l.push({point:I,pointOnLine:V,distance:u.origin.distanceTo(I),object:this,face:null,faceIndex:S,uv:null,uv2:null})}}}}}()}),t.LineSegments2});
//# sourceMappingURL=../sourcemaps/lines/LineSegments2.js.map
