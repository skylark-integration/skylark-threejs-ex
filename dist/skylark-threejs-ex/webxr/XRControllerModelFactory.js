/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex","../loaders/GLTFLoader","../utils/motion"],function(e,t,o,n){"use strict";const r="https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles";function s(){e.Object3D.call(this),this.motionController=null,this.envMap=null}function a(t,o){!function(t,o){Object.values(t.components).forEach(t=>{const{type:r,touchPointNodeName:s,visualResponses:a}=t;if(r===MotionControllerConstants.ComponentType.TOUCHPAD)if(t.touchPointNode=o.getObjectByName(s),t.touchPointNode){const o=new e.SphereGeometry(.001),n=new e.MeshBasicMaterial({color:255}),r=new e.Mesh(o,n);t.touchPointNode.add(r)}else console.warn(`Could not find touch dot, ${t.touchPointNodeName}, in touchpad component ${t.id}`);Object.values(a).forEach(e=>{const{valueNodeName:t,minNodeName:r,maxNodeName:s,valueNodeProperty:a}=e;if(a===n.Constants.VisualResponseProperty.TRANSFORM){if(e.minNode=o.getObjectByName(r),e.maxNode=o.getObjectByName(s),!e.minNode)return void console.warn(`Could not find ${r} in the model`);if(!e.maxNode)return void console.warn(`Could not find ${s} in the model`)}e.valueNode=o.getObjectByName(t),e.valueNode||console.warn(`Could not find ${t} in the model`)})})}(t.motionController,o),t.envMap&&o.traverse(e=>{e.isMesh&&(e.material.envMap=t.envMap,e.material.needsUpdate=!0)}),t.add(o)}s.prototype=Object.assign(Object.create(e.Object3D.prototype),{constructor:s,setEnvironmentMap:function(e){return this.envMap==e?this:(this.envMap=e,this.traverse(e=>{e.isMesh&&(e.material.envMap=this.envMap,e.material.needsUpdate=!0)}),this)},updateMatrixWorld:function(t){e.Object3D.prototype.updateMatrixWorld.call(this,t),this.motionController&&(this.motionController.updateFromGamepad(),Object.values(this.motionController.components).forEach(t=>{Object.values(t.visualResponses).forEach(t=>{const{valueNode:o,minNode:r,maxNode:s,value:a,valueNodeProperty:i}=t;o&&(i===n.Constants.VisualResponseProperty.VISIBILITY?o.visible=a:i===n.Constants.VisualResponseProperty.TRANSFORM&&(e.Quaternion.slerp(r.quaternion,s.quaternion,o.quaternion,a),o.position.lerpVectors(r.position,s.position,a)))})}))}});var i=function(){function e(e=null){this.gltfLoader=e,this.path=r,this._assetCache={},this.gltfLoader||(this.gltfLoader=new o)}return e.prototype={constructor:e,createControllerModel:function(e){const t=new s;let o=null;return e.addEventListener("connected",e=>{const r=e.data;"tracked-pointer"===r.targetRayMode&&r.gamepad&&n.fetchProfile(r,this.path,"generic-trigger").then(({profile:e,assetPath:n})=>{t.motionController=new c.MotionController(r,e,n);let s=this._assetCache[t.motionController.assetUrl];if(s)o=s.scene.clone(),a(t,o);else{if(!this.gltfLoader)throw new Error("GLTFLoader not set.");this.gltfLoader.setPath(""),this.gltfLoader.load(t.motionController.assetUrl,e=>{this._assetCache[t.motionController.assetUrl]=e,o=e.scene.clone(),a(t,o)},null,()=>{throw new Error(`Asset ${t.motionController.assetUrl} missing or malformed.`)})}}).catch(e=>{console.warn(e)})}),e.addEventListener("disconnected",()=>{t.motionController=null,t.remove(o),o=null}),t}},e}();return t.webxr.XRControllerModelFactory=i});
//# sourceMappingURL=../sourcemaps/webxr/XRControllerModelFactory.js.map
