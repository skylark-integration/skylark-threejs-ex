/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(r){"use strict";return function(){let a=new r.BufferAttribute(new Float32Array(3e6),3);a.usage=r.DynamicDrawUsage;let e=new r.BufferAttribute(new Float32Array(3e6),3);e.usage=r.DynamicDrawUsage;let t=new r.BufferAttribute(new Float32Array(3e6),3);t.usage=r.DynamicDrawUsage;let o=new r.BufferGeometry;o.setAttribute("position",a),o.setAttribute("normal",e),o.setAttribute("color",t),o.drawRange.count=0;let n=new r.MeshStandardMaterial({vertexColors:r.VertexColors}),y=new r.Mesh(o,n);y.frustumCulled=!1;let u=new r.Vector3,c=new r.Vector3,l=new r.Vector3,p=new r.Vector3,i=new r.Color(16777215),d=1;function s(n,y,s,A){if(0===n.distanceToSquared(y))return;let w=o.drawRange.count,f=function(a){let e=2*Math.PI,t=[],o=.01*a;for(let a=0;a<10;a++){let n=a/10*e;t.push(new r.Vector3(Math.sin(n)*o,Math.cos(n)*o,0))}return t}(d);for(let r=0,o=f.length;r<o;r++){let d=f[r],g=f[(r+1)%o];u.copy(d).applyMatrix4(A).add(y),c.copy(g).applyMatrix4(A).add(y),l.copy(g).applyMatrix4(s).add(n),p.copy(d).applyMatrix4(s).add(n),u.toArray(a.array,3*(w+0)),c.toArray(a.array,3*(w+1)),p.toArray(a.array,3*(w+2)),c.toArray(a.array,3*(w+3)),l.toArray(a.array,3*(w+4)),p.toArray(a.array,3*(w+5)),u.copy(d).applyMatrix4(A).normalize(),c.copy(g).applyMatrix4(A).normalize(),l.copy(g).applyMatrix4(s).normalize(),p.copy(d).applyMatrix4(s).normalize(),u.toArray(e.array,3*(w+0)),c.toArray(e.array,3*(w+1)),p.toArray(e.array,3*(w+2)),c.toArray(e.array,3*(w+3)),l.toArray(e.array,3*(w+4)),p.toArray(e.array,3*(w+5)),i.toArray(t.array,3*(w+0)),i.toArray(t.array,3*(w+1)),i.toArray(t.array,3*(w+2)),i.toArray(t.array,3*(w+3)),i.toArray(t.array,3*(w+4)),i.toArray(t.array,3*(w+5)),w+=6}o.drawRange.count=w}let A=new r.Vector3(0,1,0),w=new r.Vector3,f=new r.Vector3,g=new r.Matrix4,M=new r.Matrix4,m=0;return{mesh:y,moveTo:function(r){w.copy(r),g.lookAt(f,w,A),f.copy(r),M.copy(g)},lineTo:function(r){w.copy(r),g.lookAt(f,w,A),s(w,f,g,M),f.copy(w),M.copy(g)},setSize:function(r){d=r},update:function(){let r=m,n=o.drawRange.count;r!==n&&(a.updateRange.offset=3*r,a.updateRange.count=3*(n-r),a.needsUpdate=!0,e.updateRange.offset=3*r,e.updateRange.count=3*(n-r),e.needsUpdate=!0,t.updateRange.offset=3*r,t.updateRange.count=3*(n-r),t.needsUpdate=!0,m=o.drawRange.count)}}}});
//# sourceMappingURL=../sourcemaps/misc/TubePainter.js.map
