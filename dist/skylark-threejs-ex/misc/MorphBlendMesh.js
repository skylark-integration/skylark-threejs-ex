/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(t){return t.MorphBlendMesh=function(i,n){t.Mesh.call(this,i,n),this.animationsMap={},this.animationsList=[];var a=Object.keys(this.morphTargetDictionary).length,e=a-1,r=a/1;this.createAnimation("__default",0,e,r),this.setAnimationWeight("__default",1)},t.MorphBlendMesh.prototype=Object.assign(Object.create(t.Mesh.prototype),{constructor:t.MorphBlendMesh,createAnimation:function(t,i,n,a){var e={start:i,end:n,length:n-i+1,fps:a,duration:(n-i)/a,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[t]=e,this.animationsList.push(e)},autoCreateAnimations:function(t){var i,n=/([a-z]+)_?(\d+)/i,a={},e=0;for(var r in this.morphTargetDictionary){var o=r.match(n);if(o&&o.length>1)a[s=o[1]]||(a[s]={start:1/0,end:-1/0}),e<(m=a[s]).start&&(m.start=e),e>m.end&&(m.end=e),i||(i=s);e++}for(var s in a){var m=a[s];this.createAnimation(s,m.start,m.end,t)}this.firstAnimation=i},setAnimationDirectionForward:function(t){var i=this.animationsMap[t];i&&(i.direction=1,i.directionBackwards=!1)},setAnimationDirectionBackward:function(t){var i=this.animationsMap[t];i&&(i.direction=-1,i.directionBackwards=!0)},setAnimationFPS:function(t,i){var n=this.animationsMap[t];n&&(n.fps=i,n.duration=(n.end-n.start)/n.fps)},setAnimationDuration:function(t,i){var n=this.animationsMap[t];n&&(n.duration=i,n.fps=(n.end-n.start)/n.duration)},setAnimationWeight:function(t,i){var n=this.animationsMap[t];n&&(n.weight=i)},setAnimationTime:function(t,i){var n=this.animationsMap[t];n&&(n.time=i)},getAnimationTime:function(t){var i=0,n=this.animationsMap[t];return n&&(i=n.time),i},getAnimationDuration:function(t){var i=-1,n=this.animationsMap[t];return n&&(i=n.duration),i},playAnimation:function(t){var i=this.animationsMap[t];i?(i.time=0,i.active=!0):console.warn("THREE.MorphBlendMesh: animation["+t+"] undefined in .playAnimation()")},stopAnimation:function(t){var i=this.animationsMap[t];i&&(i.active=!1)},update:function(i){for(var n=0,a=this.animationsList.length;n<a;n++){var e=this.animationsList[n];if(e.active){var r=e.duration/e.length;e.time+=e.direction*i,e.mirroredLoop?(e.time>e.duration||e.time<0)&&(e.direction*=-1,e.time>e.duration&&(e.time=e.duration,e.directionBackwards=!0),e.time<0&&(e.time=0,e.directionBackwards=!1)):(e.time=e.time%e.duration,e.time<0&&(e.time+=e.duration));var o=e.start+t.MathUtils.clamp(Math.floor(e.time/r),0,e.length-1),s=e.weight;o!==e.currentFrame&&(this.morphTargetInfluences[e.lastFrame]=0,this.morphTargetInfluences[e.currentFrame]=1*s,this.morphTargetInfluences[o]=0,e.lastFrame=e.currentFrame,e.currentFrame=o);var m=e.time%r/r;e.directionBackwards&&(m=1-m),e.currentFrame!==e.lastFrame?(this.morphTargetInfluences[e.currentFrame]=m*s,this.morphTargetInfluences[e.lastFrame]=(1-m)*s):this.morphTargetInfluences[e.currentFrame]=s}}}}),t.MorphBlendMesh});
//# sourceMappingURL=../sourcemaps/misc/MorphBlendMesh.js.map
