/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../loaders/MD2Loader","./MorphBlendMesh"],function(e,t,i){return e.MD2CharacterComplex=function(){var t=this;function i(t,i){for(var s=new e.TextureLoader,o=[],h=0;h<i.length;h++)o[h]=s.load(t+i[h],a),o[h].mapping=e.UVMapping,o[h].name=i[h],o[h].encoding=e.sRGBEncoding;return o}function s(i,s){var a=new e.MeshLambertMaterial({color:16755200,wireframe:!0,morphTargets:!0,morphNormals:!0}),o=new e.MeshLambertMaterial({color:16777215,wireframe:!1,map:s,morphTargets:!0,morphNormals:!0}),h=new e.MorphBlendMesh(i,o);return h.rotation.y=-Math.PI/2,h.materialTexture=o,h.materialWireframe=a,h.autoCreateAnimations(t.animationFPS),h}function a(){t.loadCounter-=1,0===t.loadCounter&&t.onLoadComplete()}function o(e){return 1===e?1:1-Math.pow(2,-10*e)}this.scale=1,this.animationFPS=6,this.transitionFrames=15,this.maxSpeed=275,this.maxReverseSpeed=-275,this.frontAcceleration=600,this.backAcceleration=600,this.frontDecceleration=600,this.angularSpeed=2.5,this.root=new e.Object3D,this.meshBody=null,this.meshWeapon=null,this.controls=null,this.skinsBody=[],this.skinsWeapon=[],this.weapons=[],this.currentSkin=void 0,this.onLoadComplete=function(){},this.meshes=[],this.animations={},this.loadCounter=0,this.speed=0,this.bodyOrientation=0,this.walkSpeed=this.maxSpeed,this.crouchSpeed=.5*this.maxSpeed,this.activeAnimation=null,this.oldAnimation=null,this.enableShadows=function(e){for(var t=0;t<this.meshes.length;t++)this.meshes[t].castShadow=e,this.meshes[t].receiveShadow=e},this.setVisible=function(e){for(var t=0;t<this.meshes.length;t++)this.meshes[t].visible=e,this.meshes[t].visible=e},this.shareParts=function(e){this.animations=e.animations,this.walkSpeed=e.walkSpeed,this.crouchSpeed=e.crouchSpeed,this.skinsBody=e.skinsBody,this.skinsWeapon=e.skinsWeapon;var t=s(e.meshBody.geometry,this.skinsBody[0]);t.scale.set(this.scale,this.scale,this.scale),this.root.position.y=e.root.position.y,this.root.add(t),this.meshBody=t,this.meshes.push(t);for(var i=0;i<e.weapons.length;i++){var a=s(e.weapons[i].geometry,this.skinsWeapon[i]);a.scale.set(this.scale,this.scale,this.scale),a.visible=!1,a.name=e.weapons[i].name,this.root.add(a),this.weapons[i]=a,this.meshWeapon=a,this.meshes.push(a)}},this.loadParts=function(o){this.animations=o.animations,this.walkSpeed=o.walkSpeed,this.crouchSpeed=o.crouchSpeed,this.loadCounter=2*o.weapons.length+o.skins.length+1;for(var h=[],n=0;n<o.weapons.length;n++)h[n]=o.weapons[n][1];this.skinsBody=i(o.baseUrl+"skins/",o.skins),this.skinsWeapon=i(o.baseUrl+"skins/",h);var r=new e.MD2Loader;r.load(o.baseUrl+o.body,function(i){var o=new e.Box3;o.setFromBufferAttribute(i.attributes.position),t.root.position.y=-t.scale*o.min.y;var h=s(i,t.skinsBody[0]);h.scale.set(t.scale,t.scale,t.scale),t.root.add(h),t.meshBody=h,t.meshes.push(h),a()});var m=function(e,i){return function(o){var h=s(o,t.skinsWeapon[e]);h.scale.set(t.scale,t.scale,t.scale),h.visible=!1,h.name=i,t.root.add(h),t.weapons[e]=h,t.meshWeapon=h,t.meshes.push(h),a()}};for(n=0;n<o.weapons.length;n++)r.load(o.baseUrl+o.weapons[n][0],m(n,o.weapons[n][0]))},this.setPlaybackRate=function(e){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/e),this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/e)},this.setWireframe=function(e){e?(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialWireframe)):(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialTexture))},this.setSkin=function(e){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=this.skinsBody[e],this.currentSkin=e)},this.setWeapon=function(e){for(var t=0;t<this.weapons.length;t++)this.weapons[t].visible=!1;var i=this.weapons[e];i&&(i.visible=!0,this.meshWeapon=i,this.activeAnimation&&(i.playAnimation(this.activeAnimation),this.meshWeapon.setAnimationTime(this.activeAnimation,this.meshBody.getAnimationTime(this.activeAnimation))))},this.setAnimation=function(e){e!==this.activeAnimation&&e&&(this.meshBody&&(this.meshBody.setAnimationWeight(e,0),this.meshBody.playAnimation(e),this.oldAnimation=this.activeAnimation,this.activeAnimation=e,this.blendCounter=this.transitionFrames),this.meshWeapon&&(this.meshWeapon.setAnimationWeight(e,0),this.meshWeapon.playAnimation(e)))},this.update=function(e){this.controls&&this.updateMovementModel(e),this.animations&&(this.updateBehaviors(),this.updateAnimations(e))},this.updateAnimations=function(e){var t=1;this.blendCounter>0&&(t=(this.transitionFrames-this.blendCounter)/this.transitionFrames,this.blendCounter-=1),this.meshBody&&(this.meshBody.update(e),this.meshBody.setAnimationWeight(this.activeAnimation,t),this.meshBody.setAnimationWeight(this.oldAnimation,1-t)),this.meshWeapon&&(this.meshWeapon.update(e),this.meshWeapon.setAnimationWeight(this.activeAnimation,t),this.meshWeapon.setAnimationWeight(this.oldAnimation,1-t))},this.updateBehaviors=function(){var e,t,i=this.controls,s=this.animations;i.crouch?(e=s.crouchMove,t=s.crouchIdle):(e=s.move,t=s.idle),i.jump&&(e=s.jump,t=s.jump),i.attack&&(i.crouch?(e=s.crouchAttack,t=s.crouchAttack):(e=s.attack,t=s.attack)),(i.moveForward||i.moveBackward||i.moveLeft||i.moveRight)&&this.activeAnimation!==e&&this.setAnimation(e),Math.abs(this.speed)<.2*this.maxSpeed&&!(i.moveLeft||i.moveRight||i.moveForward||i.moveBackward)&&this.activeAnimation!==t&&this.setAnimation(t),i.moveForward&&(this.meshBody&&(this.meshBody.setAnimationDirectionForward(this.activeAnimation),this.meshBody.setAnimationDirectionForward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionForward(this.activeAnimation),this.meshWeapon.setAnimationDirectionForward(this.oldAnimation))),i.moveBackward&&(this.meshBody&&(this.meshBody.setAnimationDirectionBackward(this.activeAnimation),this.meshBody.setAnimationDirectionBackward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation),this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation)))},this.updateMovementModel=function(t){var i=this.controls;i.crouch?this.maxSpeed=this.crouchSpeed:this.maxSpeed=this.walkSpeed,this.maxReverseSpeed=-this.maxSpeed,i.moveForward&&(this.speed=e.MathUtils.clamp(this.speed+t*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),i.moveBackward&&(this.speed=e.MathUtils.clamp(this.speed-t*this.backAcceleration,this.maxReverseSpeed,this.maxSpeed));if(i.moveLeft&&(this.bodyOrientation+=t*this.angularSpeed,this.speed=e.MathUtils.clamp(this.speed+1*t*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),i.moveRight&&(this.bodyOrientation-=t*this.angularSpeed,this.speed=e.MathUtils.clamp(this.speed+1*t*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),!i.moveForward&&!i.moveBackward)if(this.speed>0){var s=o(this.speed/this.maxSpeed);this.speed=e.MathUtils.clamp(this.speed-s*t*this.frontDecceleration,0,this.maxSpeed)}else{s=o(this.speed/this.maxReverseSpeed);this.speed=e.MathUtils.clamp(this.speed+s*t*this.backAcceleration,this.maxReverseSpeed,0)}var a=this.speed*t;this.root.position.x+=Math.sin(this.bodyOrientation)*a,this.root.position.z+=Math.cos(this.bodyOrientation)*a,this.root.rotation.y=this.bodyOrientation}},e.MD2CharacterComplex});
//# sourceMappingURL=../sourcemaps/misc/MD2CharacterComplex.js.map
