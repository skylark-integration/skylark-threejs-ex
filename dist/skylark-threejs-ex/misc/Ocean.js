/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../shaders/OceanShaders"],function(e,r){return e.Ocean=function(r,t,i,a){function s(e,r){return void 0!==e?e:r}this.changed=!0,this.initial=!0,this.oceanCamera=new e.OrthographicCamera,this.oceanCamera.position.z=1,this.renderer=r,this.renderer.clearColor(16777215),this.scene=new e.Scene,a=a||{},this.clearColor=s(a.CLEAR_COLOR,[1,1,1,0]),this.geometryOrigin=s(a.GEOMETRY_ORIGIN,[-1e3,-1e3]),this.sunDirectionX=s(a.SUN_DIRECTION[0],-1),this.sunDirectionY=s(a.SUN_DIRECTION[1],1),this.sunDirectionZ=s(a.SUN_DIRECTION[2],1),this.oceanColor=s(a.OCEAN_COLOR,new e.Vector3(.004,.016,.047)),this.skyColor=s(a.SKY_COLOR,new e.Vector3(3.2,9.6,12.8)),this.exposure=s(a.EXPOSURE,.35),this.geometryResolution=s(a.GEOMETRY_RESOLUTION,32),this.geometrySize=s(a.GEOMETRY_SIZE,2e3),this.resolution=s(a.RESOLUTION,64),this.floatSize=s(a.SIZE_OF_FLOAT,4),this.windX=s(a.INITIAL_WIND[0],10),this.windY=s(a.INITIAL_WIND[1],10),this.size=s(a.INITIAL_SIZE,250),this.choppiness=s(a.INITIAL_CHOPPINESS,1.5),this.matrixNeedsUpdate=!1;var n=s(a.USE_HALF_FLOAT,!1)?e.HalfFloatType:e.FloatType,h={minFilter:e.LinearFilter,magFilter:e.LinearFilter,wrapS:e.ClampToEdgeWrapping,wrapT:e.ClampToEdgeWrapping,format:e.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:n},o={minFilter:e.NearestFilter,magFilter:e.NearestFilter,wrapS:e.ClampToEdgeWrapping,wrapT:e.ClampToEdgeWrapping,format:e.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:n},u={minFilter:e.NearestFilter,magFilter:e.NearestFilter,wrapS:e.RepeatWrapping,wrapT:e.RepeatWrapping,format:e.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:n};this.initialSpectrumFramebuffer=new e.WebGLRenderTarget(this.resolution,this.resolution,u),this.spectrumFramebuffer=new e.WebGLRenderTarget(this.resolution,this.resolution,o),this.pingPhaseFramebuffer=new e.WebGLRenderTarget(this.resolution,this.resolution,o),this.pongPhaseFramebuffer=new e.WebGLRenderTarget(this.resolution,this.resolution,o),this.pingTransformFramebuffer=new e.WebGLRenderTarget(this.resolution,this.resolution,o),this.pongTransformFramebuffer=new e.WebGLRenderTarget(this.resolution,this.resolution,o),this.displacementMapFramebuffer=new e.WebGLRenderTarget(this.resolution,this.resolution,h),this.normalMapFramebuffer=new e.WebGLRenderTarget(this.resolution,this.resolution,h);var l=e.OceanShaders.ocean_sim_vertex,m=e.OceanShaders.ocean_subtransform,f=e.UniformsUtils.clone(m.uniforms);this.materialOceanHorizontal=new e.ShaderMaterial({uniforms:f,vertexShader:l.vertexShader,fragmentShader:"#define HORIZONTAL \n"+m.fragmentShader}),this.materialOceanHorizontal.uniforms.u_transformSize={value:this.resolution},this.materialOceanHorizontal.uniforms.u_subtransformSize={value:null},this.materialOceanHorizontal.uniforms.u_input={value:null},this.materialOceanHorizontal.depthTest=!1;var c=e.OceanShaders.ocean_subtransform,p=e.UniformsUtils.clone(c.uniforms);this.materialOceanVertical=new e.ShaderMaterial({uniforms:p,vertexShader:l.vertexShader,fragmentShader:c.fragmentShader}),this.materialOceanVertical.uniforms.u_transformSize={value:this.resolution},this.materialOceanVertical.uniforms.u_subtransformSize={value:null},this.materialOceanVertical.uniforms.u_input={value:null},this.materialOceanVertical.depthTest=!1;var d=e.OceanShaders.ocean_initial_spectrum,g=e.UniformsUtils.clone(d.uniforms);this.materialInitialSpectrum=new e.ShaderMaterial({uniforms:g,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader}),this.materialInitialSpectrum.uniforms.u_wind={value:new e.Vector2},this.materialInitialSpectrum.uniforms.u_resolution={value:this.resolution},this.materialInitialSpectrum.depthTest=!1;var S=e.OceanShaders.ocean_phase,v=e.UniformsUtils.clone(S.uniforms);this.materialPhase=new e.ShaderMaterial({uniforms:v,vertexShader:l.vertexShader,fragmentShader:S.fragmentShader}),this.materialPhase.uniforms.u_resolution={value:this.resolution},this.materialPhase.depthTest=!1;var O=e.OceanShaders.ocean_spectrum,T=e.UniformsUtils.clone(O.uniforms);this.materialSpectrum=new e.ShaderMaterial({uniforms:T,vertexShader:l.vertexShader,fragmentShader:O.fragmentShader}),this.materialSpectrum.uniforms.u_initialSpectrum={value:null},this.materialSpectrum.uniforms.u_resolution={value:this.resolution},this.materialSpectrum.depthTest=!1;var _=e.OceanShaders.ocean_normals,F=e.UniformsUtils.clone(_.uniforms);this.materialNormal=new e.ShaderMaterial({uniforms:F,vertexShader:l.vertexShader,fragmentShader:_.fragmentShader}),this.materialNormal.uniforms.u_displacementMap={value:null},this.materialNormal.uniforms.u_resolution={value:this.resolution},this.materialNormal.depthTest=!1;var b=e.OceanShaders.ocean_main,w=e.UniformsUtils.clone(b.uniforms);this.materialOcean=new e.ShaderMaterial({uniforms:w,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader}),this.materialOcean.uniforms.u_geometrySize={value:this.resolution},this.materialOcean.uniforms.u_displacementMap={value:this.displacementMapFramebuffer.texture},this.materialOcean.uniforms.u_normalMap={value:this.normalMapFramebuffer.texture},this.materialOcean.uniforms.u_oceanColor={value:this.oceanColor},this.materialOcean.uniforms.u_skyColor={value:this.skyColor},this.materialOcean.uniforms.u_sunDirection={value:new e.Vector3(this.sunDirectionX,this.sunDirectionY,this.sunDirectionZ)},this.materialOcean.uniforms.u_exposure={value:this.exposure},this.materialOceanHorizontal.blending=0,this.materialOceanVertical.blending=0,this.materialInitialSpectrum.blending=0,this.materialPhase.blending=0,this.materialSpectrum.blending=0,this.materialNormal.blending=0,this.materialOcean.blending=0,this.screenQuad=new e.Mesh(new e.PlaneBufferGeometry(2,2)),this.scene.add(this.screenQuad),this.generateSeedPhaseTexture(),this.generateMesh()},e.Ocean.prototype.generateMesh=function(){var r=new e.PlaneBufferGeometry(this.geometrySize,this.geometrySize,this.geometryResolution,this.geometryResolution);r.rotateX(-Math.PI/2),this.oceanMesh=new e.Mesh(r,this.materialOcean)},e.Ocean.prototype.render=function(){var e=this.renderer.getRenderTarget();this.scene.overrideMaterial=null,this.changed&&this.renderInitialSpectrum(),this.renderWavePhase(),this.renderSpectrum(),this.renderSpectrumFFT(),this.renderNormalMap(),this.scene.overrideMaterial=null,this.renderer.setRenderTarget(e)},e.Ocean.prototype.generateSeedPhaseTexture=function(){this.pingPhase=!0;for(var r=new window.Float32Array(this.resolution*this.resolution*4),t=0;t<this.resolution;t++)for(var i=0;i<this.resolution;i++)r[t*this.resolution*4+4*i]=2*Math.random()*Math.PI,r[t*this.resolution*4+4*i+1]=0,r[t*this.resolution*4+4*i+2]=0,r[t*this.resolution*4+4*i+3]=0;this.pingPhaseTexture=new e.DataTexture(r,this.resolution,this.resolution,e.RGBAFormat),this.pingPhaseTexture.wrapS=e.ClampToEdgeWrapping,this.pingPhaseTexture.wrapT=e.ClampToEdgeWrapping,this.pingPhaseTexture.type=e.FloatType},e.Ocean.prototype.renderInitialSpectrum=function(){this.scene.overrideMaterial=this.materialInitialSpectrum,this.materialInitialSpectrum.uniforms.u_wind.value.set(this.windX,this.windY),this.materialInitialSpectrum.uniforms.u_size.value=this.size,this.renderer.setRenderTarget(this.initialSpectrumFramebuffer),this.renderer.clear(),this.renderer.render(this.scene,this.oceanCamera)},e.Ocean.prototype.renderWavePhase=function(){this.scene.overrideMaterial=this.materialPhase,this.screenQuad.material=this.materialPhase,this.initial?(this.materialPhase.uniforms.u_phases.value=this.pingPhaseTexture,this.initial=!1):this.materialPhase.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture,this.materialPhase.uniforms.u_deltaTime.value=this.deltaTime,this.materialPhase.uniforms.u_size.value=this.size,this.renderer.setRenderTarget(this.pingPhase?this.pongPhaseFramebuffer:this.pingPhaseFramebuffer),this.renderer.render(this.scene,this.oceanCamera),this.pingPhase=!this.pingPhase},e.Ocean.prototype.renderSpectrum=function(){this.scene.overrideMaterial=this.materialSpectrum,this.materialSpectrum.uniforms.u_initialSpectrum.value=this.initialSpectrumFramebuffer.texture,this.materialSpectrum.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture,this.materialSpectrum.uniforms.u_choppiness.value=this.choppiness,this.materialSpectrum.uniforms.u_size.value=this.size,this.renderer.setRenderTarget(this.spectrumFramebuffer),this.renderer.render(this.scene,this.oceanCamera)},e.Ocean.prototype.renderSpectrumFFT=function(){var e=Math.log(this.resolution)/Math.log(2);this.scene.overrideMaterial=this.materialOceanHorizontal;for(var r=0;r<e;r++)0===r?(this.materialOceanHorizontal.uniforms.u_input.value=this.spectrumFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pingTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):r%2==1?(this.materialOceanHorizontal.uniforms.u_input.value=this.pingTransformFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pongTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):(this.materialOceanHorizontal.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pingTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera));this.scene.overrideMaterial=this.materialOceanVertical;for(r=e;r<2*e;r++)r===2*e-1?(this.materialOceanVertical.uniforms.u_input.value=e%2==0?this.pingTransformFramebuffer.texture:this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.displacementMapFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):r%2==1?(this.materialOceanVertical.uniforms.u_input.value=this.pingTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pongTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):(this.materialOceanVertical.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pingTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera))},e.Ocean.prototype.renderNormalMap=function(){this.scene.overrideMaterial=this.materialNormal,this.changed&&(this.materialNormal.uniforms.u_size.value=this.size),this.materialNormal.uniforms.u_displacementMap.value=this.displacementMapFramebuffer.texture,this.renderer.setRenderTarget(this.normalMapFramebuffer),this.renderer.clear(),this.renderer.render(this.scene,this.oceanCamera)},e.Ocean});
//# sourceMappingURL=../sourcemaps/misc/Ocean.js.map
