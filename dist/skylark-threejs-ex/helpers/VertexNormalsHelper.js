/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex"],function(t,e){"use strict";var r=new t.Vector3,i=new t.Vector3,o=new t.Matrix3,a=["a","b","c"];function s(e,r,i,o){this.object=e,this.size=void 0!==r?r:1;var a=void 0!==i?i:16711680,s=void 0!==o?o:1,l=0,n=this.object.geometry;n&&n.isGeometry?l=3*n.faces.length:n&&n.isBufferGeometry&&(l=n.attributes.normal.count);var p=new t.BufferGeometry,c=new t.Float32BufferAttribute(2*l*3,3);p.setAttribute("position",c),t.LineSegments.call(this,p,new t.LineBasicMaterial({color:a,linewidth:s})),this.matrixAutoUpdate=!1,this.update()}return s.prototype=Object.create(t.LineSegments.prototype),s.prototype.constructor=s,s.prototype.update=function(){this.object.updateMatrixWorld(!0),o.getNormalMatrix(this.object.matrixWorld);var t=this.object.matrixWorld,e=this.geometry.attributes.position,s=this.object.geometry;if(s&&s.isGeometry)for(var l=s.vertices,n=s.faces,p=0,c=0,y=n.length;c<y;c++)for(var u=n[c],m=0,h=u.vertexNormals.length;m<h;m++){var f=l[u[a[m]]],d=u.vertexNormals[m];r.copy(f).applyMatrix4(t),i.copy(d).applyMatrix3(o).normalize().multiplyScalar(this.size).add(r),e.setXYZ(p,r.x,r.y,r.z),p+=1,e.setXYZ(p,i.x,i.y,i.z),p+=1}else if(s&&s.isBufferGeometry){var x=s.attributes.position,g=s.attributes.normal;for(p=0,m=0,h=x.count;m<h;m++)r.set(x.getX(m),x.getY(m),x.getZ(m)).applyMatrix4(t),i.set(g.getX(m),g.getY(m),g.getZ(m)),i.applyMatrix3(o).normalize().multiplyScalar(this.size).add(r),e.setXYZ(p,r.x,r.y,r.z),p+=1,e.setXYZ(p,i.x,i.y,i.z),p+=1}e.needsUpdate=!0},e.helpers.VertexNormalsHelper=s});
//# sourceMappingURL=../sourcemaps/helpers/VertexNormalsHelper.js.map
