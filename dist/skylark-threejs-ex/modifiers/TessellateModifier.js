/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){return e.TessellateModifier=function(e){this.maxEdgeLength=e},e.TessellateModifier.prototype.modify=function(r){for(var o,l=[],t=[],c=this.maxEdgeLength*this.maxEdgeLength,s=0,a=r.faceVertexUvs.length;s<a;s++)t[s]=[];for(s=0,a=r.faces.length;s<a;s++){var n=r.faces[s];if(n instanceof e.Face3){var v=n.a,x=n.b,f=n.c,i=r.vertices[v],p=r.vertices[x],h=r.vertices[f],m=i.distanceToSquared(p),y=p.distanceToSquared(h),C=i.distanceToSquared(h);if(m>c||y>c||C>c){var N=r.vertices.length,g=n.clone(),d=n.clone();if(m>=y&&m>=C){if((u=i.clone()).lerp(p,.5),g.a=v,g.b=N,g.c=f,d.a=N,d.b=x,d.c=f,3===n.vertexNormals.length)(b=n.vertexNormals[0].clone()).lerp(n.vertexNormals[1],.5),g.vertexNormals[1].copy(b),d.vertexNormals[0].copy(b);if(3===n.vertexColors.length)(U=n.vertexColors[0].clone()).lerp(n.vertexColors[1],.5),g.vertexColors[1].copy(U),d.vertexColors[0].copy(U);o=0}else if(y>=m&&y>=C){if((u=p.clone()).lerp(h,.5),g.a=v,g.b=x,g.c=N,d.a=N,d.b=f,d.c=v,3===n.vertexNormals.length)(b=n.vertexNormals[1].clone()).lerp(n.vertexNormals[2],.5),g.vertexNormals[2].copy(b),d.vertexNormals[0].copy(b),d.vertexNormals[1].copy(n.vertexNormals[2]),d.vertexNormals[2].copy(n.vertexNormals[0]);if(3===n.vertexColors.length)(U=n.vertexColors[1].clone()).lerp(n.vertexColors[2],.5),g.vertexColors[2].copy(U),d.vertexColors[0].copy(U),d.vertexColors[1].copy(n.vertexColors[2]),d.vertexColors[2].copy(n.vertexColors[0]);o=1}else{var u,b,U;if((u=i.clone()).lerp(h,.5),g.a=v,g.b=x,g.c=N,d.a=N,d.b=x,d.c=f,3===n.vertexNormals.length)(b=n.vertexNormals[0].clone()).lerp(n.vertexNormals[2],.5),g.vertexNormals[2].copy(b),d.vertexNormals[0].copy(b);if(3===n.vertexColors.length)(U=n.vertexColors[0].clone()).lerp(n.vertexColors[2],.5),g.vertexColors[2].copy(U),d.vertexColors[0].copy(U);o=2}l.push(g,d),r.vertices.push(u);for(var V=0,T=r.faceVertexUvs.length;V<T;V++)if(r.faceVertexUvs[V].length){var q=r.faceVertexUvs[V][s],E=q[0],L=q[1],M=q[2];if(0===o){(j=E.clone()).lerp(L,.5);var S=[E.clone(),j.clone(),M.clone()],k=[j.clone(),L.clone(),M.clone()]}else if(1===o){(j=L.clone()).lerp(M,.5);S=[E.clone(),L.clone(),j.clone()],k=[j.clone(),M.clone(),E.clone()]}else{var j;(j=E.clone()).lerp(M,.5);S=[E.clone(),L.clone(),j.clone()],k=[j.clone(),L.clone(),M.clone()]}t[V].push(S,k)}}else{l.push(n);for(V=0,T=r.faceVertexUvs.length;V<T;V++)t[V].push(r.faceVertexUvs[V][s])}}}r.faces=l,r.faceVertexUvs=t},e.TessellateModifier});
//# sourceMappingURL=../sourcemaps/modifiers/TessellateModifier.js.map
