/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","../threex"],function(e,t){"use strict";var n=function(e){this.subdivisions=void 0===e?1:e};return n.prototype.modify=function(t){(t=t.isBufferGeometry?(new e.Geometry).fromBufferGeometry(t):t.clone()).mergeVertices();for(var n=this.subdivisions;n-- >0;)this.smooth(t);return t.computeFaceNormals(),t.computeVertexNormals(),t},function(){var t=["a","b","c"];function r(e,t,n){return n[Math.min(e,t)+"_"+Math.max(e,t)]}function a(e,t,n,r,a,o){var i,c=Math.min(e,t),s=Math.max(e,t),f=c+"_"+s;f in r?i=r[f]:(i={a:n[c],b:n[s],newEdge:null,faces:[]},r[f]=i);i.faces.push(a),o[e].edges.push(i),o[t].edges.push(i)}function o(t,n,r,a,o){t.push(new e.Face3(n,r,a,void 0,void 0,o))}function i(e,t){return Math.abs(t-e)/2+Math.min(e,t)}function c(t,n,r,a){t.push([e.clone(),r.clone(),a.clone()])}n.prototype.smooth=function(n){var s,f,l,u,d,h,m,g,v,p,y,x,b,w=new e.Vector3,V=[];s=n.vertices,f=n.faces;var M,E,S,I,G,k,B,F,N,U,_,j,A,q,z=void 0!==(l=n.faceVertexUvs)[0]&&l[0].length>0;if(z)for(var C=0;C<l.length;C++)V.push([]);for(m in function(e,t,n,r){var o,i,c;for(o=0,i=e.length;o<i;o++)n[o]={edges:[]};for(o=0,i=t.length;o<i;o++)a((c=t[o]).a,c.b,e,r,c,n),a(c.b,c.c,e,r,c,n),a(c.c,c.a,e,r,c,n)}(s,f,p=new Array(s.length),y={}),x=[],y){for(E=y[m],S=new e.Vector3,G=3/8,k=1/8,2!=(B=E.faces.length)&&(G=.5,k=0),S.addVectors(E.a,E.b).multiplyScalar(G),w.set(0,0,0),C=0;C<B;C++){for(I=E.faces[C],v=0;v<3&&((M=s[I[t[v]]])===E.a||M===E.b);v++);w.add(M)}w.multiplyScalar(k),S.add(w),E.newEdge=x.length,x.push(S)}for(b=[],m=0,g=s.length;m<g;m++){for(A=s[m],3==(h=(j=p[m].edges).length)?F=3/16:h>3&&(F=3/(8*h)),N=1-h*F,U=F,h<=2&&2==h&&(N=.75,U=1/8),q=A.clone().multiplyScalar(N),w.set(0,0,0),C=0;C<h;C++)M=(_=j[C]).a!==A?_.a:_.b,w.add(M);w.multiplyScalar(U),q.add(w),b.push(q)}u=b.concat(x);var D,H,J,K,L,O,P,Q=b.length;d=[];var R=new e.Vector2,T=new e.Vector2,W=new e.Vector2;for(m=0,g=f.length;m<g;m++)if(o(d,D=r((I=f[m]).a,I.b,y).newEdge+Q,H=r(I.b,I.c,y).newEdge+Q,J=r(I.c,I.a,y).newEdge+Q,I.materialIndex),o(d,I.a,D,J,I.materialIndex),o(d,I.b,H,D,I.materialIndex),o(d,I.c,J,H,I.materialIndex),z)for(C=0;C<l.length;C++)L=(K=l[C][m])[0],O=K[1],P=K[2],R.set(i(L.x,O.x),i(L.y,O.y)),T.set(i(O.x,P.x),i(O.y,P.y)),W.set(i(L.x,P.x),i(L.y,P.y)),c(V[C],0,T,W),c(V[C],0,R,W),c(V[C],0,T,R),c(V[C],0,W,T);n.vertices=u,n.faces=d,z&&(n.faceVertexUvs=V)}}(),t.modifiers.SubdivisionModifier=n});
//# sourceMappingURL=../sourcemaps/modifiers/SubdivisionModifier.js.map
