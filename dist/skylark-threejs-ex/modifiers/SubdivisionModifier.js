/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){"use strict";var t=function(e){this.subdivisions=void 0===e?1:e};return t.prototype.modify=function(t){(t=t.isBufferGeometry?(new e.Geometry).fromBufferGeometry(t):t.clone()).mergeVertices();for(var n=this.subdivisions;n-- >0;)this.smooth(t);return t.computeFaceNormals(),t.computeVertexNormals(),t},function(){var n=["a","b","c"];function a(e,t,n){return n[Math.min(e,t)+"_"+Math.max(e,t)]}function r(e,t,n,a,r,o){var c,s=Math.min(e,t),i=Math.max(e,t),f=s+"_"+i;f in a?c=a[f]:(c={a:n[s],b:n[i],newEdge:null,faces:[]},a[f]=c);c.faces.push(r),o[e].edges.push(c),o[t].edges.push(c)}function o(t,n,a,r,o){t.push(new e.Face3(n,a,r,void 0,void 0,o))}function c(e,t){return Math.abs(t-e)/2+Math.min(e,t)}function s(t,n,a,r){t.push([e.clone(),a.clone(),r.clone()])}t.prototype.smooth=function(t){var i,f,l,u,h,d,m,g,v,p,y,x,b,w=new e.Vector3,V=[];i=t.vertices,f=t.faces;var M,E,I,S,G,k,B,F,N,U,_,j,A,q,z=void 0!==(l=t.faceVertexUvs)[0]&&l[0].length>0;if(z)for(var C=0;C<l.length;C++)V.push([]);for(m in function(e,t,n,a){var o,c,s;for(o=0,c=e.length;o<c;o++)n[o]={edges:[]};for(o=0,c=t.length;o<c;o++)r((s=t[o]).a,s.b,e,a,s,n),r(s.b,s.c,e,a,s,n),r(s.c,s.a,e,a,s,n)}(i,f,p=new Array(i.length),y={}),x=[],y){for(E=y[m],I=new e.Vector3,G=3/8,k=1/8,2!=(B=E.faces.length)&&(G=.5,k=0),I.addVectors(E.a,E.b).multiplyScalar(G),w.set(0,0,0),C=0;C<B;C++){for(S=E.faces[C],v=0;v<3&&((M=i[S[n[v]]])===E.a||M===E.b);v++);w.add(M)}w.multiplyScalar(k),I.add(w),E.newEdge=x.length,x.push(I)}for(b=[],m=0,g=i.length;m<g;m++){for(A=i[m],3==(d=(j=p[m].edges).length)?F=3/16:d>3&&(F=3/(8*d)),N=1-d*F,U=F,d<=2&&2==d&&(N=.75,U=1/8),q=A.clone().multiplyScalar(N),w.set(0,0,0),C=0;C<d;C++)M=(_=j[C]).a!==A?_.a:_.b,w.add(M);w.multiplyScalar(U),q.add(w),b.push(q)}u=b.concat(x);var D,H,J,K,L,O,P,Q=b.length;h=[];var R=new e.Vector2,T=new e.Vector2,W=new e.Vector2;for(m=0,g=f.length;m<g;m++)if(o(h,D=a((S=f[m]).a,S.b,y).newEdge+Q,H=a(S.b,S.c,y).newEdge+Q,J=a(S.c,S.a,y).newEdge+Q,S.materialIndex),o(h,S.a,D,J,S.materialIndex),o(h,S.b,H,D,S.materialIndex),o(h,S.c,J,H,S.materialIndex),z)for(C=0;C<l.length;C++)L=(K=l[C][m])[0],O=K[1],P=K[2],R.set(c(L.x,O.x),c(L.y,O.y)),T.set(c(O.x,P.x),c(O.y,P.y)),W.set(c(L.x,P.x),c(L.y,P.y)),s(V[C],0,T,W),s(V[C],0,R,W),s(V[C],0,T,R),s(V[C],0,W,T);t.vertices=u,t.faces=h,z&&(t.faceVertexUvs=V)}}(),t});
//# sourceMappingURL=../sourcemaps/modifiers/SubdivisionModifier.js.map
