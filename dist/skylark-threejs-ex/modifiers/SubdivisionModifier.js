/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){return e.SubdivisionModifier=function(e){this.subdivisions=void 0===e?1:e},e.SubdivisionModifier.prototype.modify=function(n){(n=n.isBufferGeometry?(new e.Geometry).fromBufferGeometry(n):n.clone()).mergeVertices();for(var t=this.subdivisions;t-- >0;)this.smooth(n);return n.computeFaceNormals(),n.computeVertexNormals(),n},function(){var n=["a","b","c"];function t(e,n,t){return t[Math.min(e,n)+"_"+Math.max(e,n)]}function r(e,n,t,r,a,i){var o,s=Math.min(e,n),c=Math.max(e,n),f=s+"_"+c;f in r?o=r[f]:(o={a:t[s],b:t[c],newEdge:null,faces:[]},r[f]=o);o.faces.push(a),i[e].edges.push(o),i[n].edges.push(o)}function a(n,t,r,a,i){n.push(new e.Face3(t,r,a,void 0,void 0,i))}function i(e,n){return Math.abs(n-e)/2+Math.min(e,n)}function o(e,n,t,r){e.push([n.clone(),t.clone(),r.clone()])}e.SubdivisionModifier.prototype.smooth=function(s){var c,f,d,l,u,h,m,v,g,p,y,b,x,w=new e.Vector3,M=[];c=s.vertices,f=s.faces;var V,S,E,I,G,k,B,F,N,U,_,j,A,q,z=void 0!==(d=s.faceVertexUvs)[0]&&d[0].length>0;if(z)for(var C=0;C<d.length;C++)M.push([]);for(m in function(e,n,t,a){var i,o,s;for(i=0,o=e.length;i<o;i++)t[i]={edges:[]};for(i=0,o=n.length;i<o;i++)r((s=n[i]).a,s.b,e,a,s,t),r(s.b,s.c,e,a,s,t),r(s.c,s.a,e,a,s,t)}(c,f,p=new Array(c.length),y={}),b=[],y){for(S=y[m],E=new e.Vector3,G=3/8,k=1/8,2!=(B=S.faces.length)&&(G=.5,k=0),E.addVectors(S.a,S.b).multiplyScalar(G),w.set(0,0,0),C=0;C<B;C++){for(I=S.faces[C],g=0;g<3&&((V=c[I[n[g]]])===S.a||V===S.b);g++);w.add(V)}w.multiplyScalar(k),E.add(w),S.newEdge=b.length,b.push(E)}for(x=[],m=0,v=c.length;m<v;m++){for(A=c[m],3==(h=(j=p[m].edges).length)?F=3/16:h>3&&(F=3/(8*h)),N=1-h*F,U=F,h<=2&&2==h&&(N=.75,U=1/8),q=A.clone().multiplyScalar(N),w.set(0,0,0),C=0;C<h;C++)V=(_=j[C]).a!==A?_.a:_.b,w.add(V);w.multiplyScalar(U),q.add(w),x.push(q)}l=x.concat(b);var D,H,J,K,L,O,P,Q=x.length;u=[];var R=new e.Vector2,T=new e.Vector2,W=new e.Vector2;for(m=0,v=f.length;m<v;m++)if(a(u,D=t((I=f[m]).a,I.b,y).newEdge+Q,H=t(I.b,I.c,y).newEdge+Q,J=t(I.c,I.a,y).newEdge+Q,I.materialIndex),a(u,I.a,D,J,I.materialIndex),a(u,I.b,H,D,I.materialIndex),a(u,I.c,J,H,I.materialIndex),z)for(C=0;C<d.length;C++)L=(K=d[C][m])[0],O=K[1],P=K[2],R.set(i(L.x,O.x),i(L.y,O.y)),T.set(i(O.x,P.x),i(O.y,P.y)),W.set(i(L.x,P.x),i(L.y,P.y)),o(M[C],R,T,W),o(M[C],L,R,W),o(M[C],O,T,R),o(M[C],P,W,T);s.vertices=l,s.faces=u,z&&(s.faceVertexUvs=M)}}(),e.SubdivisionModifier});
//# sourceMappingURL=../sourcemaps/modifiers/SubdivisionModifier.js.map
