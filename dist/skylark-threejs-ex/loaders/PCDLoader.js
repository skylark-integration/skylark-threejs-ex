/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(t){"use strict";var e=function(e){t.Loader.call(this,e),this.littleEndian=!0};return e.prototype=Object.assign(Object.create(t.Loader.prototype),{constructor:e,load:function(e,i,r,n){var s=this,o=new t.FileLoader(s.manager);o.setPath(s.path),o.setResponseType("arraybuffer"),o.load(e,function(t){try{i(s.parse(t,e))}catch(t){if(!n)throw t;n(t)}},r,n)},parse:function(e,i){var r=t.LoaderUtils.decodeText(new Uint8Array(e)),n=function(t){var e={},i=t.search(/[\r\n]DATA\s(\S*)\s/i),r=/[\r\n]DATA\s(\S*)\s/i.exec(t.substr(i-1));if(e.data=r[1],e.headerLen=r[0].length+i,e.str=t.substr(0,e.headerLen),e.str=e.str.replace(/\#.*/gi,""),e.version=/VERSION (.*)/i.exec(e.str),e.fields=/FIELDS (.*)/i.exec(e.str),e.size=/SIZE (.*)/i.exec(e.str),e.type=/TYPE (.*)/i.exec(e.str),e.count=/COUNT (.*)/i.exec(e.str),e.width=/WIDTH (.*)/i.exec(e.str),e.height=/HEIGHT (.*)/i.exec(e.str),e.viewpoint=/VIEWPOINT (.*)/i.exec(e.str),e.points=/POINTS (.*)/i.exec(e.str),null!==e.version&&(e.version=parseFloat(e.version[1])),null!==e.fields&&(e.fields=e.fields[1].split(" ")),null!==e.type&&(e.type=e.type[1].split(" ")),null!==e.width&&(e.width=parseInt(e.width[1])),null!==e.height&&(e.height=parseInt(e.height[1])),null!==e.viewpoint&&(e.viewpoint=e.viewpoint[1]),null!==e.points&&(e.points=parseInt(e.points[1],10)),null===e.points&&(e.points=e.width*e.height),null!==e.size&&(e.size=e.size[1].split(" ").map(function(t){return parseInt(t,10)})),null!==e.count)e.count=e.count[1].split(" ").map(function(t){return parseInt(t,10)});else{e.count=[];for(var n=0,s=e.fields.length;n<s;n++)e.count.push(1)}e.offset={};var o=0;for(n=0,s=e.fields.length;n<s;n++)"ascii"===e.data?e.offset[e.fields[n]]=n:(e.offset[e.fields[n]]=o,o+=e.size[n]);return e.rowSize=o,e}(r),s=[],o=[],a=[];if("ascii"===n.data)for(var l=n.offset,p=r.substr(n.headerLen).split("\n"),h=0,u=p.length;h<u;h++)if(""!==p[h]){var d=p[h].split(" ");if(void 0!==l.x&&(s.push(parseFloat(d[l.x])),s.push(parseFloat(d[l.y])),s.push(parseFloat(d[l.z]))),void 0!==l.rgb){var f=parseFloat(d[l.rgb]),c=f>>16&255,g=f>>8&255,w=f>>0&255;a.push(c/255,g/255,w/255)}void 0!==l.normal_x&&(o.push(parseFloat(d[l.normal_x])),o.push(parseFloat(d[l.normal_y])),o.push(parseFloat(d[l.normal_z])))}if("binary_compressed"===n.data){var v=new Uint32Array(e.slice(n.headerLen,n.headerLen+8)),b=v[0],m=v[1],x=function(t,e){var i,r,n,s=t.length,o=new Uint8Array(e),a=0,l=0;do{if((i=t[a++])<32){if(l+ ++i>e)throw new Error("Output buffer is not large enough");if(a+i>s)throw new Error("Invalid compressed data");do{o[l++]=t[a++]}while(--i)}else{if(r=i>>5,n=l-((31&i)<<8)-1,a>=s)throw new Error("Invalid compressed data");if(7===r&&(r+=t[a++],a>=s))throw new Error("Invalid compressed data");if(n-=t[a++],l+r+2>e)throw new Error("Output buffer is not large enough");if(n<0)throw new Error("Invalid compressed data");if(n>=l)throw new Error("Invalid compressed data");do{o[l++]=o[n++]}while(2+--r)}}while(a<s);return o}(new Uint8Array(e,n.headerLen+8,b),m),E=new DataView(x.buffer);for(l=n.offset,h=0;h<n.points;h++)void 0!==l.x&&(s.push(E.getFloat32(n.points*l.x+n.size[0]*h,this.littleEndian)),s.push(E.getFloat32(n.points*l.y+n.size[1]*h,this.littleEndian)),s.push(E.getFloat32(n.points*l.z+n.size[2]*h,this.littleEndian))),void 0!==l.rgb&&(a.push(E.getUint8(n.points*l.rgb+n.size[3]*h+0)/255),a.push(E.getUint8(n.points*l.rgb+n.size[3]*h+1)/255),a.push(E.getUint8(n.points*l.rgb+n.size[3]*h+2)/255)),void 0!==l.normal_x&&(o.push(E.getFloat32(n.points*l.normal_x+n.size[4]*h,this.littleEndian)),o.push(E.getFloat32(n.points*l.normal_y+n.size[5]*h,this.littleEndian)),o.push(E.getFloat32(n.points*l.normal_z+n.size[6]*h,this.littleEndian)))}if("binary"===n.data){E=new DataView(e,n.headerLen),l=n.offset,h=0;for(var F=0;h<n.points;h++,F+=n.rowSize)void 0!==l.x&&(s.push(E.getFloat32(F+l.x,this.littleEndian)),s.push(E.getFloat32(F+l.y,this.littleEndian)),s.push(E.getFloat32(F+l.z,this.littleEndian))),void 0!==l.rgb&&(a.push(E.getUint8(F+l.rgb+2)/255),a.push(E.getUint8(F+l.rgb+1)/255),a.push(E.getUint8(F+l.rgb+0)/255)),void 0!==l.normal_x&&(o.push(E.getFloat32(F+l.normal_x,this.littleEndian)),o.push(E.getFloat32(F+l.normal_y,this.littleEndian)),o.push(E.getFloat32(F+l.normal_z,this.littleEndian)))}var y=new t.BufferGeometry;s.length>0&&y.setAttribute("position",new t.Float32BufferAttribute(s,3)),o.length>0&&y.setAttribute("normal",new t.Float32BufferAttribute(o,3)),a.length>0&&y.setAttribute("color",new t.Float32BufferAttribute(a,3)),y.computeBoundingSphere();var z=new t.PointsMaterial({size:.005});a.length>0?z.vertexColors=!0:z.color.setHex(16777215*Math.random());var I=new t.Points(y,z),A=i.split("").reverse().join("");return A=(A=/([^\/]*)/.exec(A))[1].split("").reverse().join(""),I.name=A,I}}),e});
//# sourceMappingURL=../sourcemaps/loaders/PCDLoader.js.map
