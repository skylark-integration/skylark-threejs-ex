/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){"use strict";var t=function(t){e.CompressedTextureLoader.call(this,t)};t.prototype=Object.assign(Object.create(e.CompressedTextureLoader.prototype),{constructor:t,parse:function(e,t){var i=new r(e,1);return{mipmaps:i.mipmaps(t),width:i.pixelWidth,height:i.pixelHeight,format:i.glInternalFormat,isCubemap:6===i.numberOfFaces,mipmapCount:i.numberOfMipmapLevels}}});var r=function(){function e(t,r){this.arrayBuffer=t;var i=new Uint8Array(this.arrayBuffer,0,12);if(171===i[0]&&75===i[1]&&84===i[2]&&88===i[3]&&32===i[4]&&49===i[5]&&49===i[6]&&187===i[7]&&13===i[8]&&10===i[9]&&26===i[10]&&10===i[11]){var a=Uint32Array.BYTES_PER_ELEMENT,n=new DataView(this.arrayBuffer,12,13*a),s=67305985===n.getUint32(0,!0);this.glType=n.getUint32(1*a,s),this.glTypeSize=n.getUint32(2*a,s),this.glFormat=n.getUint32(3*a,s),this.glInternalFormat=n.getUint32(4*a,s),this.glBaseInternalFormat=n.getUint32(5*a,s),this.pixelWidth=n.getUint32(6*a,s),this.pixelHeight=n.getUint32(7*a,s),this.pixelDepth=n.getUint32(8*a,s),this.numberOfArrayElements=n.getUint32(9*a,s),this.numberOfFaces=n.getUint32(10*a,s),this.numberOfMipmapLevels=n.getUint32(11*a,s),this.bytesOfKeyValueData=n.getUint32(12*a,s),0===this.glType?(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels),0!==this.pixelHeight&&0===this.pixelDepth?0===this.numberOfArrayElements?this.numberOfFaces===r?this.loadType=e.COMPRESSED_2D:console.warn("number of faces expected"+r+", but found "+this.numberOfFaces):console.warn("texture arrays not currently supported"):console.warn("only 2D textures currently supported")):console.warn("only compressed formats currently supported")}else console.error("texture missing KTX identifier")}return e.prototype.mipmaps=function(t){for(var r=[],i=e.HEADER_LEN+this.bytesOfKeyValueData,a=this.pixelWidth,n=this.pixelHeight,s=t?this.numberOfMipmapLevels:1,h=0;h<s;h++){var p=new Int32Array(this.arrayBuffer,i,1)[0];i+=4;for(var o=0;o<this.numberOfFaces;o++){var u=new Uint8Array(this.arrayBuffer,i,p);r.push({data:u,width:a,height:n}),i+=p,i+=3-(p+3)%4}a=Math.max(1,.5*a),n=Math.max(1,.5*n)}return r},e.HEADER_LEN=64,e.COMPRESSED_2D=0,e.COMPRESSED_3D=1,e.TEX_2D=2,e.TEX_3D=3,e}();return t});
//# sourceMappingURL=../sourcemaps/loaders/KTXLoader.js.map
