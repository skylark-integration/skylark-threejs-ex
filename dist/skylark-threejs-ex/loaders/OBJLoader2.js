/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","./obj2/OBJLoader2Parser","./obj2/shared/MeshReceiver","./obj2/shared/MaterialHandler"],function(e,t,s,r){"use strict";const a=function(a){e.Loader.call(this,a),this.parser=new t,this.modelName="",this.instanceNo=0,this.baseObject3d=new e.Object3D,this.materialHandler=new r,this.meshReceiver=new s(this.materialHandler);let n=this;this.parser.setCallbackOnAssetAvailable(function(e){n._onAssetAvailable(e)})};return a.OBJLOADER2_VERSION="3.2.0",console.info("Using OBJLoader2 version: "+a.OBJLOADER2_VERSION),a.prototype=Object.assign(Object.create(e.Loader.prototype),{constructor:a,setLogging:function(e,t){return this.parser.setLogging(e,t),this},setMaterialPerSmoothingGroup:function(e){return this.parser.setMaterialPerSmoothingGroup(e),this},setUseOAsMesh:function(e){return this.parser.setUseOAsMesh(e),this},setUseIndices:function(e){return this.parser.setUseIndices(e),this},setDisregardNormals:function(e){return this.parser.setDisregardNormals(e),this},setModelName:function(e){return this.modelName=e||this.modelName,this},setBaseObject3d:function(e){return this.baseObject3d=void 0===e||null===e?this.baseObject3d:e,this},addMaterials:function(e,t){return this.materialHandler.addMaterials(e,t),this},setCallbackOnAssetAvailable:function(e){return this.parser.setCallbackOnAssetAvailable(e),this},setCallbackOnProgress:function(e){return this.parser.setCallbackOnProgress(e),this},setCallbackOnError:function(e){return this.parser.setCallbackOnError(e),this},setCallbackOnLoad:function(e){return this.parser.setCallbackOnLoad(e),this},setCallbackOnMeshAlter:function(e){return this.meshReceiver._setCallbacks(this.parser.callbacks.onProgress,e),this},setCallbackOnLoadMaterials:function(e){return this.materialHandler._setCallbacks(e),this},load:function(t,s,r,a,n){let i=this;if(!(null!==s&&void 0!==s&&s instanceof Function)){let e="onLoad is not a function! Aborting...";throw i.parser.callbacks.onError(e),e}this.parser.setCallbackOnLoad(s),null!==a&&void 0!==a&&a instanceof Function||(a=function(e){let t=e;e.currentTarget&&null!==e.currentTarget.statusText&&(t="Error occurred while downloading!\nurl: "+e.currentTarget.responseURL+"\nstatus: "+e.currentTarget.statusText),i.parser.callbacks.onError(t)}),t||a("An invalid url was provided. Unable to continue!");let o=new URL(t,window.location.href).href,l=o,c=o.split("/");if(c.length>2&&(l=c[c.length-1],this.path=c.slice(0,c.length-1).join("/")+"/"),null===r||void 0===r||!(r instanceof Function)){let e=0,s=0;r=function(r){if(r.lengthComputable&&(s=r.loaded/r.total)>e){e=s;let r='Download of "'+t+'": '+(100*s).toFixed(2)+"%";i.parser.callbacks.onProgress("progressLoad",r,s)}}}this.setCallbackOnMeshAlter(n);let h=new e.FileLoader(this.manager);h.setPath(this.path||this.resourcePath),h.setResponseType("arraybuffer"),h.load(l,function(e){i.parser.callbacks.onLoad(i.parse(e),"OBJLoader2#load: Parsing completed")},r,a)},parse:function(e){if(null===e||void 0===e)throw"Provided content is not a valid ArrayBuffer or String. Unable to continue parsing";return this.parser.logging.enabled&&console.time("OBJLoader parse: "+this.modelName),this.materialHandler.createDefaultMaterials(!1),this.parser.setMaterials(this.materialHandler.getMaterials()),e instanceof ArrayBuffer||e instanceof Uint8Array?(this.parser.logging.enabled&&console.info("Parsing arrayBuffer..."),this.parser.execute(e)):"string"==typeof e||e instanceof String?(this.parser.logging.enabled&&console.info("Parsing text..."),this.parser.executeLegacy(e)):this.parser.callbacks.onError("Provided content was neither of type String nor Uint8Array! Aborting..."),this.parser.logging.enabled&&console.timeEnd("OBJLoader parse: "+this.modelName),this.baseObject3d},_onAssetAvailable:function(e){if("assetAvailable"===e.cmd)if("mesh"===e.type){let t=this.meshReceiver.buildMeshes(e);for(let e of t)this.baseObject3d.add(e)}else"material"===e.type&&this.materialHandler.addPayloadMaterials(e)}}),a});
//# sourceMappingURL=../sourcemaps/loaders/OBJLoader2.js.map
