/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(e){"use strict";const a=function(){this.logging={enabled:!1,debug:!1},this.callbacks={onLoadMaterials:null},this.materials={}};return a.prototype={constructor:a,setLogging:function(e,a){this.logging.enabled=!0===e,this.logging.debug=!0===a},_setCallbacks:function(e){void 0!==e&&null!==e&&e instanceof Function&&(this.callbacks.onLoadMaterials=e)},createDefaultMaterials:function(a){let t=new e.MeshStandardMaterial({color:14479871});t.name="defaultMaterial";let i=new e.MeshStandardMaterial({color:14479871});i.name="defaultVertexColorMaterial",i.vertexColors=e.VertexColors;let l=new e.LineBasicMaterial;l.name="defaultLineMaterial";let n=new e.PointsMaterial({size:.1});n.name="defaultPointMaterial";let s={};s[t.name]=t,s[i.name]=i,s[l.name]=l,s[n.name]=n,this.addMaterials(s,a)},addPayloadMaterials:function(a){let t,i,l=a.materials.materialCloneInstructions,n={};if(void 0!==l&&null!==l){let e=l.materialNameOrg;e=void 0!==e&&null!==e?e:"";let a=this.materials[e];a?(t=a.clone(),i=l.materialName,t.name=i,Object.assign(t,l.materialProperties),this.materials[i]=t,n[i]=t):this.logging.enabled&&console.info('Requested material "'+e+'" is not available!')}let s=a.materials.serializedMaterials;if(void 0!==s&&null!==s&&Object.keys(s).length>0){let a,l=new e.MaterialLoader;for(i in s)void 0!==(a=s[i])&&null!==a&&(t=l.parse(a),this.logging.enabled&&console.info('De-serialized material with name "'+i+'" will be added.'),this.materials[i]=t,n[i]=t)}return s=a.materials.runtimeMaterials,n=this.addMaterials(s,!0,n)},addMaterials:function(e,a,t){if(void 0!==t&&null!==t||(t={}),void 0!==e&&null!==e&&Object.keys(e).length>0){let i,l,n;for(let s in e)i=e[s],(n=!0===a)||(n=null===(l=this.materials[s])||void 0===l),n&&(this.materials[s]=i,t[s]=i),this.logging.enabled&&this.logging.debug&&console.info('Material with name "'+s+'" was added.')}return this.callbacks.onLoadMaterials&&this.callbacks.onLoadMaterials(t),t},getMaterials:function(){return this.materials},getMaterial:function(e){return this.materials[e]},getMaterialsJSON:function(){let e,a={};for(let t in this.materials)e=this.materials[t],a[t]=e.toJSON();return a},clearMaterials:function(){this.materials={}}},a});
//# sourceMappingURL=../../../sourcemaps/loaders/obj2/shared/MaterialHandler.js.map
