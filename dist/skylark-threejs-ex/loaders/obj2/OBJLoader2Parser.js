/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(function(){"use strict";const e=function(){this.logging={enabled:!1,debug:!1};let e=this;this.callbacks={onProgress:function(t){e._onProgress(t)},onAssetAvailable:function(t){e._onAssetAvailable(t)},onError:function(t){e._onError(t)},onLoad:function(t,s){e._onLoad(t,s)}},this.contentRef=null,this.legacyMode=!1,this.materials={},this.materialPerSmoothingGroup=!1,this.useOAsMesh=!1,this.useIndices=!1,this.disregardNormals=!1,this.vertices=[],this.colors=[],this.normals=[],this.uvs=[],this.rawMesh={objectName:"",groupName:"",activeMtlName:"",mtllibName:"",faceType:-1,subGroups:[],subGroupInUse:null,smoothingGroup:{splitMaterials:!1,normalized:-1,real:-1},counts:{doubleIndicesCount:0,faceCount:0,mtlCount:0,smoothingGroupCount:0}},this.inputObjectCount=1,this.outputObjectCount=1,this.globalCounts={vertices:0,faces:0,doubleIndicesCount:0,lineByte:0,currentByte:0,totalBytes:0}};return e.prototype={constructor:e,_resetRawMesh:function(){this.rawMesh.subGroups=[],this.rawMesh.subGroupInUse=null,this.rawMesh.smoothingGroup.normalized=-1,this.rawMesh.smoothingGroup.real=-1,this._pushSmoothingGroup(1),this.rawMesh.counts.doubleIndicesCount=0,this.rawMesh.counts.faceCount=0,this.rawMesh.counts.mtlCount=0,this.rawMesh.counts.smoothingGroupCount=0},setMaterialPerSmoothingGroup:function(e){return this.materialPerSmoothingGroup=!0===e,this},setUseOAsMesh:function(e){return this.useOAsMesh=!0===e,this},setUseIndices:function(e){return this.useIndices=!0===e,this},setDisregardNormals:function(e){return this.disregardNormals=!0===e,this},setMaterials:function(e){this.materials=Object.assign({},e)},setCallbackOnAssetAvailable:function(e){return null!==e&&void 0!==e&&e instanceof Function&&(this.callbacks.onAssetAvailable=e),this},setCallbackOnProgress:function(e){return null!==e&&void 0!==e&&e instanceof Function&&(this.callbacks.onProgress=e),this},setCallbackOnError:function(e){return null!==e&&void 0!==e&&e instanceof Function&&(this.callbacks.onError=e),this},setCallbackOnLoad:function(e){return null!==e&&void 0!==e&&e instanceof Function&&(this.callbacks.onLoad=e),this},_onProgress:function(e){let t=e||"";this.logging.enabled&&this.logging.debug&&console.log(t)},_onError:function(e){this.logging.enabled&&this.logging.debug&&console.error(e)},_onAssetAvailable:function(e){let t="OBJLoader2Parser does not provide implementation for onAssetAvailable. Aborting...";throw this.callbacks.onError(t),t},_onLoad:function(e,t){console.log("You reached parser default onLoad callback: "+t)},setLogging:function(e,t){return this.logging.enabled=!0===e,this.logging.debug=!0===t,this},_configure:function(){if(this._pushSmoothingGroup(1),this.logging.enabled){let e=Object.keys(this.materials),t="OBJLoader.Parser configuration:"+(e.length>0?"\n\tmaterialNames:\n\t\t- "+e.join("\n\t\t- "):"\n\tmaterialNames: None")+"\n\tmaterialPerSmoothingGroup: "+this.materialPerSmoothingGroup+"\n\tuseOAsMesh: "+this.useOAsMesh+"\n\tuseIndices: "+this.useIndices+"\n\tdisregardNormals: "+this.disregardNormals;t+="\n\tcallbacks.onProgress: "+this.callbacks.onProgress.name,t+="\n\tcallbacks.onAssetAvailable: "+this.callbacks.onAssetAvailable.name,t+="\n\tcallbacks.onError: "+this.callbacks.onError.name,console.info(t)}},execute:function(e){this.logging.enabled&&console.time("OBJLoader2Parser.execute"),this._configure();let t=new Uint8Array(e);this.contentRef=t;let s=t.byteLength;this.globalCounts.totalBytes=s;let o=new Array(128);for(let e,n="",i=0,a=0,l=0;l<s;l++)switch(e=t[l]){case 32:n.length>0&&(o[i++]=n),n="";break;case 47:n.length>0&&(o[i++]=n),a++,n="";break;case 10:n.length>0&&(o[i++]=n),n="",this.globalCounts.lineByte=this.globalCounts.currentByte,this.globalCounts.currentByte=l,this._processLine(o,i,a),i=0,a=0;break;case 13:break;default:n+=String.fromCharCode(e)}this._finalizeParsing(),this.logging.enabled&&console.timeEnd("OBJLoader2Parser.execute")},executeLegacy:function(e){this.logging.enabled&&console.time("OBJLoader2Parser.executeLegacy"),this._configure(),this.legacyMode=!0,this.contentRef=e;let t=e.length;this.globalCounts.totalBytes=t;let s=new Array(128);for(let o,n="",i=0,a=0,l=0;l<t;l++)switch(o=e[l]){case" ":n.length>0&&(s[i++]=n),n="";break;case"/":n.length>0&&(s[i++]=n),a++,n="";break;case"\n":n.length>0&&(s[i++]=n),n="",this.globalCounts.lineByte=this.globalCounts.currentByte,this.globalCounts.currentByte=l,this._processLine(s,i,a),i=0,a=0;break;case"\r":break;default:n+=o}this._finalizeParsing(),this.logging.enabled&&console.timeEnd("OBJLoader2Parser.executeLegacy")},_processLine:function(e,t,s){if(t<1)return;let o,n,i,a,l=function(e,t,s,o){let n="";if(o>s){let i;if(t)for(i=s;i<o;i++)n+=e[i];else for(i=s;i<o;i++)n+=String.fromCharCode(e[i]);n=n.trim()}return n};switch(a=e[0]){case"v":this.vertices.push(parseFloat(e[1])),this.vertices.push(parseFloat(e[2])),this.vertices.push(parseFloat(e[3])),t>4&&(this.colors.push(parseFloat(e[4])),this.colors.push(parseFloat(e[5])),this.colors.push(parseFloat(e[6])));break;case"vt":this.uvs.push(parseFloat(e[1])),this.uvs.push(parseFloat(e[2]));break;case"vn":this.normals.push(parseFloat(e[1])),this.normals.push(parseFloat(e[2])),this.normals.push(parseFloat(e[3]));break;case"f":if(o=t-1,0===s)for(this._checkFaceType(0),i=2,n=o;i<n;i++)this._buildFace(e[1]),this._buildFace(e[i]),this._buildFace(e[i+1]);else if(o===2*s)for(this._checkFaceType(1),i=3,n=o-2;i<n;i+=2)this._buildFace(e[1],e[2]),this._buildFace(e[i],e[i+1]),this._buildFace(e[i+2],e[i+3]);else if(2*o==3*s)for(this._checkFaceType(2),i=4,n=o-3;i<n;i+=3)this._buildFace(e[1],e[2],e[3]),this._buildFace(e[i],e[i+1],e[i+2]),this._buildFace(e[i+3],e[i+4],e[i+5]);else for(this._checkFaceType(3),i=3,n=o-2;i<n;i+=2)this._buildFace(e[1],void 0,e[2]),this._buildFace(e[i],void 0,e[i+1]),this._buildFace(e[i+2],void 0,e[i+3]);break;case"l":case"p":if((o=t-1)===2*s)for(this._checkFaceType(4),i=1,n=o+1;i<n;i+=2)this._buildFace(e[i],e[i+1]);else for(this._checkFaceType("l"===a?5:6),i=1,n=o+1;i<n;i++)this._buildFace(e[i]);break;case"s":this._pushSmoothingGroup(e[1]);break;case"g":this._processCompletedMesh(),this.rawMesh.groupName=l(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);break;case"o":this.useOAsMesh&&this._processCompletedMesh(),this.rawMesh.objectName=l(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);break;case"mtllib":this.rawMesh.mtllibName=l(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte);break;case"usemtl":let r=l(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte);""!==r&&this.rawMesh.activeMtlName!==r&&(this.rawMesh.activeMtlName=r,this.rawMesh.counts.mtlCount++,this._checkSubGroup())}},_pushSmoothingGroup:function(e){let t=parseInt(e);isNaN(t)&&(t="off"===e?0:1);let s=this.rawMesh.smoothingGroup.normalized;this.rawMesh.smoothingGroup.normalized=this.rawMesh.smoothingGroup.splitMaterials?t:0===t?0:1,this.rawMesh.smoothingGroup.real=t,s!==t&&(this.rawMesh.counts.smoothingGroupCount++,this._checkSubGroup())},_checkFaceType:function(e){this.rawMesh.faceType!==e&&(this._processCompletedMesh(),this.rawMesh.faceType=e,this._checkSubGroup())},_checkSubGroup:function(){let e=this.rawMesh.activeMtlName+"|"+this.rawMesh.smoothingGroup.normalized;this.rawMesh.subGroupInUse=this.rawMesh.subGroups[e],void 0!==this.rawMesh.subGroupInUse&&null!==this.rawMesh.subGroupInUse||(this.rawMesh.subGroupInUse={index:e,objectName:this.rawMesh.objectName,groupName:this.rawMesh.groupName,materialName:this.rawMesh.activeMtlName,smoothingGroup:this.rawMesh.smoothingGroup.normalized,vertices:[],indexMappingsCount:0,indexMappings:[],indices:[],colors:[],uvs:[],normals:[]},this.rawMesh.subGroups[e]=this.rawMesh.subGroupInUse)},_buildFace:function(e,t,s){let o=this.rawMesh.subGroupInUse,n=this,i=function(){let i=parseInt(e),a=3*(i>0?i-1:i+n.vertices.length/3),l=n.colors.length>0?a:null,r=o.vertices;if(r.push(n.vertices[a++]),r.push(n.vertices[a++]),r.push(n.vertices[a]),null!==l){let e=o.colors;e.push(n.colors[l++]),e.push(n.colors[l++]),e.push(n.colors[l])}if(t){let e=parseInt(t),s=2*(e>0?e-1:e+n.uvs.length/2),i=o.uvs;i.push(n.uvs[s++]),i.push(n.uvs[s])}if(s&&!n.disregardNormals){let e=parseInt(s),t=3*(e>0?e-1:e+n.normals.length/3),i=o.normals;i.push(n.normals[t++]),i.push(n.normals[t++]),i.push(n.normals[t])}};if(this.useIndices){this.disregardNormals&&(s=void 0);let n=e+(t?"_"+t:"_n")+(s?"_"+s:"_n"),a=o.indexMappings[n];void 0===a||null===a?(a=this.rawMesh.subGroupInUse.vertices.length/3,i(),o.indexMappings[n]=a,o.indexMappingsCount++):this.rawMesh.counts.doubleIndicesCount++,o.indices.push(a)}else i();this.rawMesh.counts.faceCount++},_createRawMeshReport:function(e){return"Input Object number: "+e+"\n\tObject name: "+this.rawMesh.objectName+"\n\tGroup name: "+this.rawMesh.groupName+"\n\tMtllib name: "+this.rawMesh.mtllibName+"\n\tVertex count: "+this.vertices.length/3+"\n\tNormal count: "+this.normals.length/3+"\n\tUV count: "+this.uvs.length/2+"\n\tSmoothingGroup count: "+this.rawMesh.counts.smoothingGroupCount+"\n\tMaterial count: "+this.rawMesh.counts.mtlCount+"\n\tReal MeshOutputGroup count: "+this.rawMesh.subGroups.length},_finalizeRawMesh:function(){let e,t,s=[],o=0,n=0,i=0,a=0,l=0,r=0;for(let u in this.rawMesh.subGroups)if((e=this.rawMesh.subGroups[u]).vertices.length>0){if((t=e.indices).length>0&&n>0)for(let e=0;e<t.length;e++)t[e]=t[e]+n;s.push(e),o+=e.vertices.length,n+=e.indexMappingsCount,i+=e.indices.length,a+=e.colors.length,r+=e.uvs.length,l+=e.normals.length}let u=null;return s.length>0&&(u={name:""!==this.rawMesh.groupName?this.rawMesh.groupName:this.rawMesh.objectName,subGroups:s,absoluteVertexCount:o,absoluteIndexCount:i,absoluteColorCount:a,absoluteNormalCount:l,absoluteUvCount:r,faceCount:this.rawMesh.counts.faceCount,doubleIndicesCount:this.rawMesh.counts.doubleIndicesCount}),u},_processCompletedMesh:function(){let e=this._finalizeRawMesh(),t=null!==e;if(t){this.colors.length>0&&this.colors.length!==this.vertices.length&&this.callbacks.onError("Vertex Colors were detected, but vertex count and color count do not match!"),this.logging.enabled&&this.logging.debug&&console.debug(this._createRawMeshReport(this.inputObjectCount)),this.inputObjectCount++,this._buildMesh(e);let t=this.globalCounts.currentByte/this.globalCounts.totalBytes;this._onProgress("Completed [o: "+this.rawMesh.objectName+" g:"+this.rawMesh.groupName+"] Total progress: "+(100*t).toFixed(2)+"%"),this._resetRawMesh()}return t},_buildMesh:function(e){let t=e.subGroups,s=new Float32Array(e.absoluteVertexCount);this.globalCounts.vertices+=e.absoluteVertexCount/3,this.globalCounts.faces+=e.faceCount,this.globalCounts.doubleIndicesCount+=e.doubleIndicesCount;let o,n,i,a,l,r,u,h=e.absoluteIndexCount>0?new Uint32Array(e.absoluteIndexCount):null,c=e.absoluteColorCount>0?new Float32Array(e.absoluteColorCount):null,g=e.absoluteNormalCount>0?new Float32Array(e.absoluteNormalCount):null,b=e.absoluteUvCount>0?new Float32Array(e.absoluteUvCount):null,p=null!==c,d=[],m=t.length>1,f=0,M=[],C=[],v=0,w=0,_=0,y=0,G=0,N=0,k=0;for(let e in t)if(t.hasOwnProperty(e)){if(u=(o=t[e]).materialName,r=this.rawMesh.faceType<4?u+(p?"_vertexColor":"")+(0===o.smoothingGroup?"_flat":""):6===this.rawMesh.faceType?"defaultPointMaterial":"defaultLineMaterial",a=this.materials[u],l=this.materials[r],void 0!==a&&null!==a||void 0!==l&&null!==l||(r=p?"defaultVertexColorMaterial":"defaultMaterial",l=this.materials[r],this.logging.enabled&&console.info('object_group "'+o.objectName+"_"+o.groupName+'" was defined with unresolvable material "'+u+'"! Assigning "'+r+'".')),void 0===l||null===l){let e={materialNameOrg:u,materialName:r,materialProperties:{vertexColors:p?2:0,flatShading:0===o.smoothingGroup}},t={cmd:"assetAvailable",type:"material",materials:{materialCloneInstructions:e}};this.callbacks.onAssetAvailable(t);let s=this.materials[r];void 0!==s&&null!==s||(this.materials[r]=e)}if(m?((n=M[r])||(n=f,M[r]=f,d.push(r),f++),i={start:N,count:k=this.useIndices?o.indices.length:o.vertices.length/3,index:n},C.push(i),N+=k):d.push(r),s.set(o.vertices,v),v+=o.vertices.length,h&&(h.set(o.indices,w),w+=o.indices.length),c&&(c.set(o.colors,_),_+=o.colors.length),g&&(g.set(o.normals,y),y+=o.normals.length),b&&(b.set(o.uvs,G),G+=o.uvs.length),this.logging.enabled&&this.logging.debug){let e=void 0===n||null===n?"":"\n\t\tmaterialIndex: "+n,t="\tOutput Object no.: "+this.outputObjectCount+"\n\t\tgroupName: "+o.groupName+"\n\t\tIndex: "+o.index+"\n\t\tfaceType: "+this.rawMesh.faceType+"\n\t\tmaterialName: "+o.materialName+"\n\t\tsmoothingGroup: "+o.smoothingGroup+e+"\n\t\tobjectName: "+o.objectName+"\n\t\t#vertices: "+o.vertices.length/3+"\n\t\t#indices: "+o.indices.length+"\n\t\t#colors: "+o.colors.length/3+"\n\t\t#uvs: "+o.uvs.length/2+"\n\t\t#normals: "+o.normals.length/3;console.debug(t)}}this.outputObjectCount++,this.callbacks.onAssetAvailable({cmd:"assetAvailable",type:"mesh",progress:{numericalValue:this.globalCounts.currentByte/this.globalCounts.totalBytes},params:{meshName:e.name},materials:{multiMaterial:m,materialNames:d,materialGroups:C},buffers:{vertices:s,indices:h,colors:c,normals:g,uvs:b},geometryType:this.rawMesh.faceType<4?0:6===this.rawMesh.faceType?2:1},[s.buffer],null!==h?[h.buffer]:null,null!==c?[c.buffer]:null,null!==g?[g.buffer]:null,null!==b?[b.buffer]:null)},_finalizeParsing:function(){if(this.logging.enabled&&console.info("Global output object count: "+this.outputObjectCount),this._processCompletedMesh()&&this.logging.enabled){let e="Overall counts: \n\tVertices: "+this.globalCounts.vertices+"\n\tFaces: "+this.globalCounts.faces+"\n\tMultiple definitions: "+this.globalCounts.doubleIndicesCount;console.info(e)}}},e});
//# sourceMappingURL=../../sourcemaps/loaders/obj2/OBJLoader2Parser.js.map
