/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(r){return r.PVRLoader=function(a){r.CompressedTextureLoader.call(this,a)},r.PVRLoader.prototype=Object.assign(Object.create(r.CompressedTextureLoader.prototype),{constructor:r.PVRLoader,parse:function(a,e){var t=new Uint32Array(a,0,13),o={buffer:a,header:t,loadMipmaps:e};return 55727696===t[0]?r.PVRLoader._parseV3(o):559044176===t[11]?r.PVRLoader._parseV2(o):void console.error("THREE.PVRLoader: Unknown PVR format.")}}),r.PVRLoader._parseV3=function(a){var e,t,o=a.header,m=o[12],n=o[2],p=o[6],P=o[7],s=o[10],i=o[11];switch(n){case 0:e=2,t=r.RGB_PVRTC_2BPPV1_Format;break;case 1:e=2,t=r.RGBA_PVRTC_2BPPV1_Format;break;case 2:e=4,t=r.RGB_PVRTC_4BPPV1_Format;break;case 3:e=4,t=r.RGBA_PVRTC_4BPPV1_Format;break;default:console.error("THREE.PVRLoader: Unsupported PVR format:",n)}return a.dataPtr=52+m,a.bpp=e,a.format=t,a.width=P,a.height=p,a.numSurfaces=s,a.numMipmaps=i,a.isCubemap=6===s,r.PVRLoader._extract(a)},r.PVRLoader._parseV2=function(a){var e,t,o=a.header,m=o[0],n=o[1],p=o[2],P=o[3],s=o[4],i=o[10],V=o[12],d=255&s,R=i>0;return 25===d?(t=R?r.RGBA_PVRTC_4BPPV1_Format:r.RGB_PVRTC_4BPPV1_Format,e=4):24===d?(t=R?r.RGBA_PVRTC_2BPPV1_Format:r.RGB_PVRTC_2BPPV1_Format,e=2):console.error("THREE.PVRLoader: Unknown PVR format:",d),a.dataPtr=m,a.bpp=e,a.format=t,a.width=p,a.height=n,a.numSurfaces=V,a.numMipmaps=P+1,a.isCubemap=6===V,r.PVRLoader._extract(a)},r.PVRLoader._extract=function(r){var a,e={mipmaps:[],width:r.width,height:r.height,format:r.format,mipmapCount:r.numMipmaps,isCubemap:r.isCubemap},t=r.buffer,o=r.dataPtr,m=r.bpp,n=r.numSurfaces,p=0,P=0,s=0,i=0,V=0;2===m?(P=8,s=4):(P=4,s=4),a=P*s*m/8,e.mipmaps.length=r.numMipmaps*n;for(var d=0;d<r.numMipmaps;){var R=r.width>>d,u=r.height>>d;V=u/s,(i=R/P)<2&&(i=2),V<2&&(V=2),p=i*V*a;for(var _=0;_<n;_++){var c={data:new Uint8Array(t,o,p),width:R,height:u};e.mipmaps[_*r.numMipmaps+d]=c,o+=p}d++}return e},r.PVRLoader});
//# sourceMappingURL=../sourcemaps/loaders/PVRLoader.js.map
