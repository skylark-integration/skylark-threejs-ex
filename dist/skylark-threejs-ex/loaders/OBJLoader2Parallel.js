/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs","./obj2/worker/main/WorkerExecutionSupport","./obj2/utils/CodeSerializer","./OBJLoader2","./obj2/OBJLoader2Parser","./obj2/worker/parallel/WorkerRunner"],function(e,r,t,a,o,s){"use strict";const i=function(e){a.call(this,e),this.preferJsmWorker=!1,this.jsmWorkerUrl=null,this.executeParallel=!0,this.workerExecutionSupport=new r};return i.OBJLOADER2_PARALLEL_VERSION="3.2.0",console.info("Using OBJLoader2Parallel version: "+i.OBJLOADER2_PARALLEL_VERSION),i.DEFAULT_JSM_WORKER_PATH="./jsm/loaders/obj2/worker/parallel/OBJLoader2JsmWorker",i.prototype=Object.assign(Object.create(a.prototype),{constructor:i,setExecuteParallel:function(e){return this.executeParallel=!0===e,this},setJsmWorker:function(e,r){if(this.preferJsmWorker=!0===e,void 0===r||null===r)throw"The url to the jsm worker is not valid. Aborting...";return this.jsmWorkerUrl=r,this},getWorkerExecutionSupport:function(){return this.workerExecutionSupport},buildWorkerCode:function(){let e=new CodeBuilderInstructions(!0,!0,this.preferJsmWorker);if(e.isSupportsJsmWorker()&&e.setJsmWorkerUrl(this.jsmWorkerUrl),e.isSupportsStandardWorker()){let r=new ObjectManipulator,a=new DefaultWorkerPayloadHandler(this.parser),i=new s({});e.addCodeFragment(t.serializeClass(o,this.parser)),e.addCodeFragment(t.serializeClass(ObjectManipulator,r)),e.addCodeFragment(t.serializeClass(DefaultWorkerPayloadHandler,a)),e.addCodeFragment(t.serializeClass(s,i));let l="new "+i.constructor.name+"( new "+a.constructor.name+"( new "+this.parser.constructor.name+"() ) );";e.addStartCode(l)}return e},load:function(e,r,t,o,s){let i=this;a.prototype.load.call(this,e,function(e,t){"OBJLoader2ParallelDummy"===e.name?i.parser.logging.enabled&&i.parser.logging.debug&&console.debug("Received dummy answer from OBJLoader2Parallel#parse"):r(e,t)},t,o,s)},parse:function(r){if(this.executeParallel){if(this.parser.callbacks.onLoad===this.parser._onLoad)throw"No callback other than the default callback was provided! Aborting!";if(!this.workerExecutionSupport.isWorkerLoaded(this.preferJsmWorker)){this.workerExecutionSupport.buildWorker(this.buildWorkerCode());let e=this,r=function(r){e._onAssetAvailable(r)};this.workerExecutionSupport.updateCallbacks(r,function(r){e.parser.callbacks.onLoad(e.baseObject3d,r)})}this.materialHandler.createDefaultMaterials(!1),this.workerExecutionSupport.executeParallel({params:{modelName:this.modelName,instanceNo:this.instanceNo,useIndices:this.parser.useIndices,disregardNormals:this.parser.disregardNormals,materialPerSmoothingGroup:this.parser.materialPerSmoothingGroup,useOAsMesh:this.parser.useOAsMesh,materials:this.materialHandler.getMaterialsJSON()},data:{input:r,options:null},logging:{enabled:this.parser.logging.enabled,debug:this.parser.logging.debug}});let t=new e.Object3D;return t.name="OBJLoader2ParallelDummy",t}return a.prototype.parse.call(this,r)}}),i});
//# sourceMappingURL=../sourcemaps/loaders/OBJLoader2Parallel.js.map
