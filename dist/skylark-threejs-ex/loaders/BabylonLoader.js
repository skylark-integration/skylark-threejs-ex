/**
 * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threejs-ex/
 * @license MIT
 */
define(["skylark-threejs"],function(r){return r.BabylonLoader=function(e){this.manager=void 0!==e?e:r.DefaultLoadingManager},r.BabylonLoader.prototype={constructor:r.BabylonLoader,load:function(e,t,a,n){var o=this,i=new r.FileLoader(o.manager);i.setPath(o.path),i.load(e,function(r){t(o.parse(JSON.parse(r)))},a,n)},setPath:function(r){return this.path=r,this},parse:function(e){function t(e){var t=new r.BufferGeometry,a=e.indices,n=e.positions,o=e.normals,i=e.uvs;t.setIndex(a);for(var s=2,l=n.length;s<l;s+=3)n[s]=-n[s];if(t.addAttribute("position",new r.Float32BufferAttribute(n,3)),o){for(s=2,l=o.length;s<l;s+=3)o[s]=-o[s];t.addAttribute("normal",new r.Float32BufferAttribute(o,3))}i&&t.addAttribute("uv",new r.Float32BufferAttribute(i,2));var u=e.subMeshes;if(u)for(s=0,l=u.length;s<l;s++){var f=u[s];t.addGroup(f.indexStart,f.indexCount)}return t}return function(e,a){for(var n={},o=new r.Scene,i=e.cameras,s=0,l=i.length;s<l;s++){var u=i[s],f=new r.PerspectiveCamera(u.fov/Math.PI*180,1.33,u.minZ,u.maxZ);f.name=u.name,f.position.fromArray(u.position),u.rotation&&f.rotation.fromArray(u.rotation),n[u.id]=f}var d=e.lights;for(s=0,l=d.length;s<l;s++){var m;switch((u=d[s]).type){case 0:m=new r.PointLight;break;case 1:m=new r.DirectionalLight;break;case 2:m=new r.SpotLight;break;case 3:m=new r.HemisphereLight}m.name=u.name,u.position&&m.position.set(u.position[0],u.position[1],-u.position[2]),m.color.fromArray(u.diffuse),u.groundColor&&m.groundColor.fromArray(u.groundColor),u.intensity&&(m.intensity=u.intensity),n[u.id]=m,o.add(m)}var p=e.meshes;for(s=0,l=p.length;s<l;s++){var h;if((u=p[s]).indices){var c=t(u);h=new r.Mesh(c,a[u.materialId])}else h=new r.Group;h.name=u.name,h.position.set(u.position[0],u.position[1],-u.position[2]),h.rotation.fromArray(u.rotation),u.rotationQuaternion&&h.quaternion.fromArray(u.rotationQuaternion),h.scale.fromArray(u.scaling),u.parentId?n[u.parentId].add(h):o.add(h),n[u.id]=h}return o}(e,function(e){for(var t={},a=0,n=e.materials.length;a<n;a++){var o=e.materials[a],i=new r.MeshPhongMaterial;i.name=o.name,i.color.fromArray(o.diffuse),i.emissive.fromArray(o.emissive),i.specular.fromArray(o.specular),i.shininess=o.specularPower,i.opacity=o.alpha,t[o.id]=i}if(e.multiMaterials)for(a=0,n=e.multiMaterials.length;a<n;a++)o=e.multiMaterials[a],console.warn("THREE.BabylonLoader: Multi materials not yet supported."),t[o.id]=new r.MeshPhongMaterial;return t}(e))}},r.BabylonLoader});
//# sourceMappingURL=../sourcemaps/loaders/BabylonLoader.js.map
