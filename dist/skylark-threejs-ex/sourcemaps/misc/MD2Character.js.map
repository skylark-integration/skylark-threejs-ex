{"version":3,"sources":["misc/MD2Character.js"],"names":["define","THREE","MD2Loader","MD2Character","scope","this","loadTextures","baseUrl","textureUrls","textureLoader","TextureLoader","textures","i","length","load","checkLoadingComplete","mapping","UVMapping","name","encoding","sRGBEncoding","createPart","geometry","skinMap","materialWireframe","MeshLambertMaterial","color","wireframe","morphTargets","morphNormals","materialTexture","map","mesh","Mesh","rotation","y","Math","PI","castShadow","receiveShadow","loadCounter","onLoadComplete","scale","animationFPS","root","Object3D","meshBody","meshWeapon","skinsBody","skinsWeapon","weapons","activeAnimation","mixer","loadParts","config","skins","weaponsTextures","loader","body","geo","boundingBox","Box3","setFromBufferAttribute","attributes","position","min","set","add","clipOffset","activeAnimationClipName","animations","AnimationMixer","generateCallback","index","visible","setPlaybackRate","rate","timeScale","setWireframe","wireframeEnabled","material","setSkin","setWeapon","activeWeapon","syncWeaponAnimation","setAnimation","clipName","activeAction","stop","action","clipAction","play","activeClipName","syncWith","update","delta"],"mappings":"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","file":"../../misc/MD2Character.js","sourcesContent":["define([\n\t\"skylark-threejs\",\n\t\"../loaders/MD2Loader\"\n],function(THREE,MD2Loader){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.MD2Character = function () {\n\n\t\tvar scope = this;\n\n\t\tthis.scale = 1;\n\t\tthis.animationFPS = 6;\n\n\t\tthis.root = new THREE.Object3D();\n\n\t\tthis.meshBody = null;\n\t\tthis.meshWeapon = null;\n\n\t\tthis.skinsBody = [];\n\t\tthis.skinsWeapon = [];\n\n\t\tthis.weapons = [];\n\n\t\tthis.activeAnimation = null;\n\n\t\tthis.mixer = null;\n\n\t\tthis.onLoadComplete = function () {};\n\n\t\tthis.loadCounter = 0;\n\n\t\tthis.loadParts = function ( config ) {\n\n\t\t\tthis.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n\n\t\t\tvar weaponsTextures = [];\n\t\t\tfor ( var i = 0; i < config.weapons.length; i ++ ) weaponsTextures[ i ] = config.weapons[ i ][ 1 ];\n\t\t\t// SKINS\n\n\t\t\tthis.skinsBody = loadTextures( config.baseUrl + \"skins/\", config.skins );\n\t\t\tthis.skinsWeapon = loadTextures( config.baseUrl + \"skins/\", weaponsTextures );\n\n\t\t\t// BODY\n\n\t\t\tvar loader = new THREE.MD2Loader();\n\n\t\t\tloader.load( config.baseUrl + config.body, function ( geo ) {\n\n\t\t\t\tvar boundingBox = new THREE.Box3();\n\t\t\t\tboundingBox.setFromBufferAttribute( geo.attributes.position );\n\n\t\t\t\tscope.root.position.y = - scope.scale * boundingBox.min.y;\n\n\t\t\t\tvar mesh = createPart( geo, scope.skinsBody[ 0 ] );\n\t\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\n\n\t\t\t\tscope.root.add( mesh );\n\n\t\t\t\tscope.meshBody = mesh;\n\n\t\t\t\tscope.meshBody.clipOffset = 0;\n\t\t\t\tscope.activeAnimationClipName = mesh.geometry.animations[ 0 ].name;\n\n\t\t\t\tscope.mixer = new THREE.AnimationMixer( mesh );\n\n\t\t\t\tcheckLoadingComplete();\n\n\t\t\t} );\n\n\t\t\t// WEAPONS\n\n\t\t\tvar generateCallback = function ( index, name ) {\n\n\t\t\t\treturn function ( geo ) {\n\n\t\t\t\t\tvar mesh = createPart( geo, scope.skinsWeapon[ index ] );\n\t\t\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\n\t\t\t\t\tmesh.visible = false;\n\n\t\t\t\t\tmesh.name = name;\n\n\t\t\t\t\tscope.root.add( mesh );\n\n\t\t\t\t\tscope.weapons[ index ] = mesh;\n\t\t\t\t\tscope.meshWeapon = mesh;\n\n\t\t\t\t\tcheckLoadingComplete();\n\n\t\t\t\t};\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < config.weapons.length; i ++ ) {\n\n\t\t\t\tloader.load( config.baseUrl + config.weapons[ i ][ 0 ], generateCallback( i, config.weapons[ i ][ 0 ] ) );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setPlaybackRate = function ( rate ) {\n\n\t\t\tif ( rate !== 0 ) {\n\n\t\t\t\tthis.mixer.timeScale = 1 / rate;\n\n\t\t\t} else {\n\n\t\t\t\tthis.mixer.timeScale = 0;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setWireframe = function ( wireframeEnabled ) {\n\n\t\t\tif ( wireframeEnabled ) {\n\n\t\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialWireframe;\n\t\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialTexture;\n\t\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialTexture;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setSkin = function ( index ) {\n\n\t\t\tif ( this.meshBody && this.meshBody.material.wireframe === false ) {\n\n\t\t\t\tthis.meshBody.material.map = this.skinsBody[ index ];\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setWeapon = function ( index ) {\n\n\t\t\tfor ( var i = 0; i < this.weapons.length; i ++ ) this.weapons[ i ].visible = false;\n\n\t\t\tvar activeWeapon = this.weapons[ index ];\n\n\t\t\tif ( activeWeapon ) {\n\n\t\t\t\tactiveWeapon.visible = true;\n\t\t\t\tthis.meshWeapon = activeWeapon;\n\n\t\t\t\tscope.syncWeaponAnimation();\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setAnimation = function ( clipName ) {\n\n\t\t\tif ( this.meshBody ) {\n\n\t\t\t\tif ( this.meshBody.activeAction ) {\n\n\t\t\t\t\tthis.meshBody.activeAction.stop();\n\t\t\t\t\tthis.meshBody.activeAction = null;\n\n\t\t\t\t}\n\n\t\t\t\tvar action = this.mixer.clipAction( clipName, this.meshBody );\n\n\t\t\t\tif ( action ) {\n\n\t\t\t\t\tthis.meshBody.activeAction = action.play();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.activeClipName = clipName;\n\n\t\t\tscope.syncWeaponAnimation();\n\n\t\t};\n\n\t\tthis.syncWeaponAnimation = function () {\n\n\t\t\tvar clipName = scope.activeClipName;\n\n\t\t\tif ( scope.meshWeapon ) {\n\n\t\t\t\tif ( this.meshWeapon.activeAction ) {\n\n\t\t\t\t\tthis.meshWeapon.activeAction.stop();\n\t\t\t\t\tthis.meshWeapon.activeAction = null;\n\n\t\t\t\t}\n\n\t\t\t\tvar action = this.mixer.clipAction( clipName, this.meshWeapon );\n\n\t\t\t\tif ( action ) {\n\n\t\t\t\t\tthis.meshWeapon.activeAction = action.syncWith( this.meshBody.activeAction ).play();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function ( delta ) {\n\n\t\t\tif ( this.mixer ) this.mixer.update( delta );\n\n\t\t};\n\n\t\tfunction loadTextures( baseUrl, textureUrls ) {\n\n\t\t\tvar textureLoader = new THREE.TextureLoader();\n\t\t\tvar textures = [];\n\n\t\t\tfor ( var i = 0; i < textureUrls.length; i ++ ) {\n\n\t\t\t\ttextures[ i ] = textureLoader.load( baseUrl + textureUrls[ i ], checkLoadingComplete );\n\t\t\t\ttextures[ i ].mapping = THREE.UVMapping;\n\t\t\t\ttextures[ i ].name = textureUrls[ i ];\n\t\t\t\ttextures[ i ].encoding = THREE.sRGBEncoding;\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t}\n\n\t\tfunction createPart( geometry, skinMap ) {\n\n\t\t\tvar materialWireframe = new THREE.MeshLambertMaterial( { color: 0xffaa00, wireframe: true, morphTargets: true, morphNormals: true } );\n\t\t\tvar materialTexture = new THREE.MeshLambertMaterial( { color: 0xffffff, wireframe: false, map: skinMap, morphTargets: true, morphNormals: true } );\n\n\t\t\t//\n\n\t\t\tvar mesh = new THREE.Mesh( geometry, materialTexture );\n\t\t\tmesh.rotation.y = - Math.PI / 2;\n\n\t\t\tmesh.castShadow = true;\n\t\t\tmesh.receiveShadow = true;\n\n\t\t\t//\n\n\t\t\tmesh.materialTexture = materialTexture;\n\t\t\tmesh.materialWireframe = materialWireframe;\n\n\t\t\treturn mesh;\n\n\t\t}\n\n\t\tfunction checkLoadingComplete() {\n\n\t\t\tscope.loadCounter -= 1;\n\n\t\t\tif ( scope.loadCounter === 0 ) scope.onLoadComplete();\n\n\t\t}\n\n\t};\n\t\n\treturn THREE.MD2Character;\n});\n"]}