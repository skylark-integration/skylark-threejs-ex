{"version":3,"sources":["misc/Volume.js"],"names":["define","THREE","threex","VolumeSlice","Volume","xLength","yLength","zLength","type","arrayBuffer","arguments","length","this","Number","data","Uint8Array","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","spacing","offset","matrix","Matrix3","identity","lowerThreshold","Infinity","Object","defineProperty","get","set","value","sliceList","forEach","slice","geometryNeedsUpdate","upperThreshold","prototype","constructor","getData","i","j","k","access","reverseAccess","index","z","Math","floor","y","map","functionToMap","context","call","extractPerpendicularPlane","axis","RASIndex","iLength","jLength","sliceAccess","planeMatrix","Matrix4","volume","planeWidth","planeHeight","firstSpacing","secondSpacing","positionOffset","IJKIndex","axisInIJK","Vector3","firstDirection","secondDirection","dimensions","multiply","makeRotationY","PI","RASDimensions","setPosition","makeRotationX","applyMatrix4","inverseMatrix","normalize","argVar","abs","dot","round","base","iDirection","find","x","jDirection","kDirection","argumentsWithInversion","argArray","direction","n","argString","join","eval","extractSlice","push","repaintAllSlices","repaint","computeMinMax","min","max","datasize","isNaN","misc"],"mappings":"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","file":"../../misc/Volume.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\",\r\n    '../misc/VolumeSlice'\r\n], function (\r\n    THREE, \r\n    threex,\r\n    VolumeSlice\r\n) {\r\n    'use strict';\r\n    var Volume = function (xLength, yLength, zLength, type, arrayBuffer) {\r\n        if (arguments.length > 0) {\r\n            this.xLength = Number(xLength) || 1;\r\n            this.yLength = Number(yLength) || 1;\r\n            this.zLength = Number(zLength) || 1;\r\n            switch (type) {\r\n            case 'Uint8':\r\n            case 'uint8':\r\n            case 'uchar':\r\n            case 'unsigned char':\r\n            case 'uint8_t':\r\n                this.data = new Uint8Array(arrayBuffer);\r\n                break;\r\n            case 'Int8':\r\n            case 'int8':\r\n            case 'signed char':\r\n            case 'int8_t':\r\n                this.data = new Int8Array(arrayBuffer);\r\n                break;\r\n            case 'Int16':\r\n            case 'int16':\r\n            case 'short':\r\n            case 'short int':\r\n            case 'signed short':\r\n            case 'signed short int':\r\n            case 'int16_t':\r\n                this.data = new Int16Array(arrayBuffer);\r\n                break;\r\n            case 'Uint16':\r\n            case 'uint16':\r\n            case 'ushort':\r\n            case 'unsigned short':\r\n            case 'unsigned short int':\r\n            case 'uint16_t':\r\n                this.data = new Uint16Array(arrayBuffer);\r\n                break;\r\n            case 'Int32':\r\n            case 'int32':\r\n            case 'int':\r\n            case 'signed int':\r\n            case 'int32_t':\r\n                this.data = new Int32Array(arrayBuffer);\r\n                break;\r\n            case 'Uint32':\r\n            case 'uint32':\r\n            case 'uint':\r\n            case 'unsigned int':\r\n            case 'uint32_t':\r\n                this.data = new Uint32Array(arrayBuffer);\r\n                break;\r\n            case 'longlong':\r\n            case 'long long':\r\n            case 'long long int':\r\n            case 'signed long long':\r\n            case 'signed long long int':\r\n            case 'int64':\r\n            case 'int64_t':\r\n            case 'ulonglong':\r\n            case 'unsigned long long':\r\n            case 'unsigned long long int':\r\n            case 'uint64':\r\n            case 'uint64_t':\r\n                throw 'Error in Volume constructor : this type is not supported in JavaScript';\r\n                break;\r\n            case 'Float32':\r\n            case 'float32':\r\n            case 'float':\r\n                this.data = new Float32Array(arrayBuffer);\r\n                break;\r\n            case 'Float64':\r\n            case 'float64':\r\n            case 'double':\r\n                this.data = new Float64Array(arrayBuffer);\r\n                break;\r\n            default:\r\n                this.data = new Uint8Array(arrayBuffer);\r\n            }\r\n            if (this.data.length !== this.xLength * this.yLength * this.zLength) {\r\n                throw 'Error in Volume constructor, lengths are not matching arrayBuffer size';\r\n            }\r\n        }\r\n        this.spacing = [\r\n            1,\r\n            1,\r\n            1\r\n        ];\r\n        this.offset = [\r\n            0,\r\n            0,\r\n            0\r\n        ];\r\n        this.matrix = new THREE.Matrix3();\r\n        this.matrix.identity();\r\n        var lowerThreshold = -Infinity;\r\n        Object.defineProperty(this, 'lowerThreshold', {\r\n            get: function () {\r\n                return lowerThreshold;\r\n            },\r\n            set: function (value) {\r\n                lowerThreshold = value;\r\n                this.sliceList.forEach(function (slice) {\r\n                    slice.geometryNeedsUpdate = true;\r\n                });\r\n            }\r\n        });\r\n        var upperThreshold = Infinity;\r\n        Object.defineProperty(this, 'upperThreshold', {\r\n            get: function () {\r\n                return upperThreshold;\r\n            },\r\n            set: function (value) {\r\n                upperThreshold = value;\r\n                this.sliceList.forEach(function (slice) {\r\n                    slice.geometryNeedsUpdate = true;\r\n                });\r\n            }\r\n        });\r\n        this.sliceList = [];\r\n    };\r\n    Volume.prototype = {\r\n        constructor: Volume,\r\n        getData: function (i, j, k) {\r\n            return this.data[k * this.xLength * this.yLength + j * this.xLength + i];\r\n        },\r\n        access: function (i, j, k) {\r\n            return k * this.xLength * this.yLength + j * this.xLength + i;\r\n        },\r\n        reverseAccess: function (index) {\r\n            var z = Math.floor(index / (this.yLength * this.xLength));\r\n            var y = Math.floor((index - z * this.yLength * this.xLength) / this.xLength);\r\n            var x = index - z * this.yLength * this.xLength - y * this.xLength;\r\n            return [\r\n                x,\r\n                y,\r\n                z\r\n            ];\r\n        },\r\n        map: function (functionToMap, context) {\r\n            var length = this.data.length;\r\n            context = context || this;\r\n            for (var i = 0; i < length; i++) {\r\n                this.data[i] = functionToMap.call(context, this.data[i], i, this.data);\r\n            }\r\n            return this;\r\n        },\r\n        extractPerpendicularPlane: function (axis, RASIndex) {\r\n            var iLength, jLength, sliceAccess, planeMatrix = new THREE.Matrix4().identity(), volume = this, planeWidth, planeHeight, firstSpacing, secondSpacing, positionOffset, IJKIndex;\r\n            var axisInIJK = new THREE.Vector3(), firstDirection = new THREE.Vector3(), secondDirection = new THREE.Vector3();\r\n            var dimensions = new THREE.Vector3(this.xLength, this.yLength, this.zLength);\r\n            switch (axis) {\r\n            case 'x':\r\n                axisInIJK.set(1, 0, 0);\r\n                firstDirection.set(0, 0, -1);\r\n                secondDirection.set(0, -1, 0);\r\n                firstSpacing = this.spacing[2];\r\n                secondSpacing = this.spacing[1];\r\n                IJKIndex = new THREE.Vector3(RASIndex, 0, 0);\r\n                planeMatrix.multiply(new THREE.Matrix4().makeRotationY(Math.PI / 2));\r\n                positionOffset = (volume.RASDimensions[0] - 1) / 2;\r\n                planeMatrix.setPosition(new THREE.Vector3(RASIndex - positionOffset, 0, 0));\r\n                break;\r\n            case 'y':\r\n                axisInIJK.set(0, 1, 0);\r\n                firstDirection.set(1, 0, 0);\r\n                secondDirection.set(0, 0, 1);\r\n                firstSpacing = this.spacing[0];\r\n                secondSpacing = this.spacing[2];\r\n                IJKIndex = new THREE.Vector3(0, RASIndex, 0);\r\n                planeMatrix.multiply(new THREE.Matrix4().makeRotationX(-Math.PI / 2));\r\n                positionOffset = (volume.RASDimensions[1] - 1) / 2;\r\n                planeMatrix.setPosition(new THREE.Vector3(0, RASIndex - positionOffset, 0));\r\n                break;\r\n            case 'z':\r\n            default:\r\n                axisInIJK.set(0, 0, 1);\r\n                firstDirection.set(1, 0, 0);\r\n                secondDirection.set(0, -1, 0);\r\n                firstSpacing = this.spacing[0];\r\n                secondSpacing = this.spacing[1];\r\n                IJKIndex = new THREE.Vector3(0, 0, RASIndex);\r\n                positionOffset = (volume.RASDimensions[2] - 1) / 2;\r\n                planeMatrix.setPosition(new THREE.Vector3(0, 0, RASIndex - positionOffset));\r\n                break;\r\n            }\r\n            firstDirection.applyMatrix4(volume.inverseMatrix).normalize();\r\n            firstDirection.argVar = 'i';\r\n            secondDirection.applyMatrix4(volume.inverseMatrix).normalize();\r\n            secondDirection.argVar = 'j';\r\n            axisInIJK.applyMatrix4(volume.inverseMatrix).normalize();\r\n            iLength = Math.floor(Math.abs(firstDirection.dot(dimensions)));\r\n            jLength = Math.floor(Math.abs(secondDirection.dot(dimensions)));\r\n            planeWidth = Math.abs(iLength * firstSpacing);\r\n            planeHeight = Math.abs(jLength * secondSpacing);\r\n            IJKIndex = Math.abs(Math.round(IJKIndex.applyMatrix4(volume.inverseMatrix).dot(axisInIJK)));\r\n            var base = [\r\n                new THREE.Vector3(1, 0, 0),\r\n                new THREE.Vector3(0, 1, 0),\r\n                new THREE.Vector3(0, 0, 1)\r\n            ];\r\n            var iDirection = [\r\n                firstDirection,\r\n                secondDirection,\r\n                axisInIJK\r\n            ].find(function (x) {\r\n                return Math.abs(x.dot(base[0])) > 0.9;\r\n            });\r\n            var jDirection = [\r\n                firstDirection,\r\n                secondDirection,\r\n                axisInIJK\r\n            ].find(function (x) {\r\n                return Math.abs(x.dot(base[1])) > 0.9;\r\n            });\r\n            var kDirection = [\r\n                firstDirection,\r\n                secondDirection,\r\n                axisInIJK\r\n            ].find(function (x) {\r\n                return Math.abs(x.dot(base[2])) > 0.9;\r\n            });\r\n            var argumentsWithInversion = [\r\n                'volume.xLength-1-',\r\n                'volume.yLength-1-',\r\n                'volume.zLength-1-'\r\n            ];\r\n            var argArray = [\r\n                iDirection,\r\n                jDirection,\r\n                kDirection\r\n            ].map(function (direction, n) {\r\n                return (direction.dot(base[n]) > 0 ? '' : argumentsWithInversion[n]) + (direction === axisInIJK ? 'IJKIndex' : direction.argVar);\r\n            });\r\n            var argString = argArray.join(',');\r\n            sliceAccess = eval('(function sliceAccess (i,j) {return volume.access( ' + argString + ');})');\r\n            return {\r\n                iLength: iLength,\r\n                jLength: jLength,\r\n                sliceAccess: sliceAccess,\r\n                matrix: planeMatrix,\r\n                planeWidth: planeWidth,\r\n                planeHeight: planeHeight\r\n            };\r\n        },\r\n        extractSlice: function (axis, index) {\r\n            var slice = new VolumeSlice(this, index, axis);\r\n            this.sliceList.push(slice);\r\n            return slice;\r\n        },\r\n        repaintAllSlices: function () {\r\n            this.sliceList.forEach(function (slice) {\r\n                slice.repaint();\r\n            });\r\n            return this;\r\n        },\r\n        computeMinMax: function () {\r\n            var min = Infinity;\r\n            var max = -Infinity;\r\n            var datasize = this.data.length;\r\n            var i = 0;\r\n            for (i = 0; i < datasize; i++) {\r\n                if (!isNaN(this.data[i])) {\r\n                    var value = this.data[i];\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n            this.min = min;\r\n            this.max = max;\r\n            return [\r\n                min,\r\n                max\r\n            ];\r\n        }\r\n    };\r\n    return threex.misc.Volume = Volume;\r\n});"]}