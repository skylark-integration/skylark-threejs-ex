{"version":3,"sources":["misc/MorphAnimMesh.js"],"names":["define","THREE","threex","MorphAnimMesh","geometry","material","Mesh","call","this","type","mixer","AnimationMixer","activeAction","prototype","Object","create","constructor","setDirectionForward","timeScale","setDirectionBackward","playAnimation","label","fps","stop","clip","AnimationClip","findByName","Error","action","clipAction","tracks","length","duration","play","updateAnimation","delta","update","copy","source","misc"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aACA,IAAIC,EAAgB,SAAUC,EAAUC,GACpCJ,EAAMK,KAAKC,KAAKC,KAAMJ,EAAUC,GAChCG,KAAKC,KAAO,gBACZD,KAAKE,MAAQ,IAAIT,EAAMU,eAAeH,MACtCA,KAAKI,aAAe,MAgCxB,OA9BAT,EAAcU,UAAYC,OAAOC,OAAOd,EAAMK,KAAKO,YAC3BG,YAAcb,EACtCA,EAAcU,UAAUI,oBAAsB,WAC1CT,KAAKE,MAAMQ,UAAY,GAE3Bf,EAAcU,UAAUM,qBAAuB,WAC3CX,KAAKE,MAAMQ,WAAa,GAE5Bf,EAAcU,UAAUO,cAAgB,SAAUC,EAAOC,GACjDd,KAAKI,eACLJ,KAAKI,aAAaW,OAClBf,KAAKI,aAAe,MAExB,IAAIY,EAAOvB,EAAMwB,cAAcC,WAAWlB,KAAMa,GAChD,IAAIG,EAKA,MAAM,IAAIG,MAAM,mCAAqCN,EAAQ,mCAJ7D,IAAIO,EAASpB,KAAKE,MAAMmB,WAAWL,GACnCI,EAAOV,UAAYM,EAAKM,OAAOC,OAAST,EAAME,EAAKQ,SACnDxB,KAAKI,aAAegB,EAAOK,QAKnC9B,EAAcU,UAAUqB,gBAAkB,SAAUC,GAChD3B,KAAKE,MAAM0B,OAAOD,IAEtBhC,EAAcU,UAAUwB,KAAO,SAAUC,GAGrC,OAFArC,EAAMK,KAAKO,UAAUwB,KAAK9B,KAAKC,KAAM8B,GACrC9B,KAAKE,MAAQ,IAAIT,EAAMU,eAAeH,MAC/BA,MAEJN,EAAOqC,KAAKpC,cAAgBA","file":"../../misc/MorphAnimMesh.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    var MorphAnimMesh = function (geometry, material) {\r\n        THREE.Mesh.call(this, geometry, material);\r\n        this.type = 'MorphAnimMesh';\r\n        this.mixer = new THREE.AnimationMixer(this);\r\n        this.activeAction = null;\r\n    };\r\n    MorphAnimMesh.prototype = Object.create(THREE.Mesh.prototype);\r\n    MorphAnimMesh.prototype.constructor = MorphAnimMesh;\r\n    MorphAnimMesh.prototype.setDirectionForward = function () {\r\n        this.mixer.timeScale = 1;\r\n    };\r\n    MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n        this.mixer.timeScale = -1;\r\n    };\r\n    MorphAnimMesh.prototype.playAnimation = function (label, fps) {\r\n        if (this.activeAction) {\r\n            this.activeAction.stop();\r\n            this.activeAction = null;\r\n        }\r\n        var clip = THREE.AnimationClip.findByName(this, label);\r\n        if (clip) {\r\n            var action = this.mixer.clipAction(clip);\r\n            action.timeScale = clip.tracks.length * fps / clip.duration;\r\n            this.activeAction = action.play();\r\n        } else {\r\n            throw new Error('THREE.MorphAnimMesh: animations[' + label + '] undefined in .playAnimation()');\r\n        }\r\n    };\r\n    MorphAnimMesh.prototype.updateAnimation = function (delta) {\r\n        this.mixer.update(delta);\r\n    };\r\n    MorphAnimMesh.prototype.copy = function (source) {\r\n        THREE.Mesh.prototype.copy.call(this, source);\r\n        this.mixer = new THREE.AnimationMixer(this);\r\n        return this;\r\n    };\r\n    return threex.misc.MorphAnimMesh = MorphAnimMesh;\r\n});"]}