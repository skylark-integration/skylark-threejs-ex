{"version":3,"sources":["misc/MorphAnimMesh.js"],"names":["define","THREE","MorphAnimMesh","geometry","material","Mesh","call","this","type","mixer","AnimationMixer","activeAction","prototype","Object","create","constructor","setDirectionForward","timeScale","setDirectionBackward","playAnimation","label","fps","stop","clip","AnimationClip","findByName","Error","action","clipAction","tracks","length","duration","play","updateAnimation","delta","update","copy","source"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GAwEV,OAnEAA,EAAMC,cAAgB,SAAWC,EAAUC,GAE1CH,EAAMI,KAAKC,KAAMC,KAAMJ,EAAUC,GAEjCG,KAAKC,KAAO,gBAEZD,KAAKE,MAAQ,IAAIR,EAAMS,eAAgBH,MACvCA,KAAKI,aAAe,MAIrBV,EAAMC,cAAcU,UAAYC,OAAOC,OAAQb,EAAMI,KAAKO,WAC1DX,EAAMC,cAAcU,UAAUG,YAAcd,EAAMC,cAElDD,EAAMC,cAAcU,UAAUI,oBAAsB,WAEnDT,KAAKE,MAAMQ,UAAY,GAIxBhB,EAAMC,cAAcU,UAAUM,qBAAuB,WAEpDX,KAAKE,MAAMQ,WAAc,GAI1BhB,EAAMC,cAAcU,UAAUO,cAAgB,SAAWC,EAAOC,GAE1Dd,KAAKI,eAETJ,KAAKI,aAAaW,OAClBf,KAAKI,aAAe,MAIrB,IAAIY,EAAOtB,EAAMuB,cAAcC,WAAYlB,KAAMa,GAEjD,IAAKG,EAQJ,MAAM,IAAIG,MAAO,mCAAqCN,EAAQ,mCAN9D,IAAIO,EAASpB,KAAKE,MAAMmB,WAAYL,GACpCI,EAAOV,UAAcM,EAAKM,OAAOC,OAAST,EAAQE,EAAKQ,SACvDxB,KAAKI,aAAegB,EAAOK,QAU7B/B,EAAMC,cAAcU,UAAUqB,gBAAkB,SAAWC,GAE1D3B,KAAKE,MAAM0B,OAAQD,IAIpBjC,EAAMC,cAAcU,UAAUwB,KAAO,SAAWC,GAM/C,OAJApC,EAAMI,KAAKO,UAAUwB,KAAK9B,KAAMC,KAAM8B,GAEtC9B,KAAKE,MAAQ,IAAIR,EAAMS,eAAgBH,MAEhCA,MAIDN,EAAMC","file":"../../misc/MorphAnimMesh.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.MorphAnimMesh = function ( geometry, material ) {\n\n\t\tTHREE.Mesh.call( this, geometry, material );\n\n\t\tthis.type = 'MorphAnimMesh';\n\n\t\tthis.mixer = new THREE.AnimationMixer( this );\n\t\tthis.activeAction = null;\n\n\t};\n\n\tTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\n\tTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\n\n\tTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\n\n\t\tthis.mixer.timeScale = 1.0;\n\n\t};\n\n\tTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\n\n\t\tthis.mixer.timeScale = - 1.0;\n\n\t};\n\n\tTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\n\n\t\tif ( this.activeAction ) {\n\n\t\t\tthis.activeAction.stop();\n\t\t\tthis.activeAction = null;\n\n\t\t}\n\n\t\tvar clip = THREE.AnimationClip.findByName( this, label );\n\n\t\tif ( clip ) {\n\n\t\t\tvar action = this.mixer.clipAction( clip );\n\t\t\taction.timeScale = ( clip.tracks.length * fps ) / clip.duration;\n\t\t\tthis.activeAction = action.play();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.MorphAnimMesh: animations[' + label + '] undefined in .playAnimation()' );\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\n\n\t\tthis.mixer.update( delta );\n\n\t};\n\n\tTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\n\n\t\tTHREE.Mesh.prototype.copy.call( this, source );\n\n\t\tthis.mixer = new THREE.AnimationMixer( this );\n\n\t\treturn this;\n\n\t};\n\t\n\treturn THREE.MorphAnimMesh;\n});\n"]}