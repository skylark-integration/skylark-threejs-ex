{"version":3,"sources":["misc/MD2CharacterComplex.js"],"names":["define","THREE","MD2Loade","MorphBlendMesh","MD2CharacterComplex","scope","this","loadTextures","baseUrl","textureUrls","textureLoader","TextureLoader","textures","i","length","load","checkLoadingComplete","mapping","UVMapping","name","encoding","sRGBEncoding","createPart","geometry","skinMap","materialWireframe","MeshLambertMaterial","color","wireframe","morphTargets","morphNormals","materialTexture","map","mesh","rotation","y","Math","PI","autoCreateAnimations","animationFPS","loadCounter","onLoadComplete","exponentialEaseOut","k","pow","scale","transitionFrames","maxSpeed","maxReverseSpeed","frontAcceleration","backAcceleration","frontDecceleration","angularSpeed","root","Object3D","meshBody","meshWeapon","controls","skinsBody","skinsWeapon","weapons","currentSkin","undefined","meshes","animations","speed","bodyOrientation","walkSpeed","crouchSpeed","activeAnimation","oldAnimation","enableShadows","enable","castShadow","receiveShadow","setVisible","visible","shareParts","original","set","position","add","push","loadParts","config","skins","weaponsTextures","loader","MD2Loader","body","geo","boundingBox","Box3","setFromBufferAttribute","attributes","min","generateCallback","index","setPlaybackRate","rate","duration","baseDuration","setWireframe","wireframeEnabled","material","setSkin","setWeapon","activeWeapon","playAnimation","setAnimationTime","getAnimationTime","setAnimation","animationName","setAnimationWeight","blendCounter","update","delta","updateMovementModel","updateBehaviors","updateAnimations","mix","moveAnimation","idleAnimation","crouch","jump","attack","moveForward","moveBackward","moveLeft","moveRight","abs","setAnimationDirectionForward","setAnimationDirectionBackward","MathUtils","clamp","forwardDelta","x","sin","z","cos"],"mappings":"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","file":"../../misc/MD2CharacterComplex.js","sourcesContent":["define([\n\t\"skylark-threejs\",\n\t\"../loaders/MD2Loader\",\n\t\"./MorphBlendMesh\"\n],function(THREE,MD2Loade,MorphBlendMesh){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.MD2CharacterComplex = function () {\n\n\t\tvar scope = this;\n\n\t\tthis.scale = 1;\n\n\t\t// animation parameters\n\n\t\tthis.animationFPS = 6;\n\t\tthis.transitionFrames = 15;\n\n\t\t// movement model parameters\n\n\t\tthis.maxSpeed = 275;\n\t\tthis.maxReverseSpeed = - 275;\n\n\t\tthis.frontAcceleration = 600;\n\t\tthis.backAcceleration = 600;\n\n\t\tthis.frontDecceleration = 600;\n\n\t\tthis.angularSpeed = 2.5;\n\n\t\t// rig\n\n\t\tthis.root = new THREE.Object3D();\n\n\t\tthis.meshBody = null;\n\t\tthis.meshWeapon = null;\n\n\t\tthis.controls = null;\n\n\t\t// skins\n\n\t\tthis.skinsBody = [];\n\t\tthis.skinsWeapon = [];\n\n\t\tthis.weapons = [];\n\n\t\tthis.currentSkin = undefined;\n\n\t\t//\n\n\t\tthis.onLoadComplete = function () {};\n\n\t\t// internals\n\n\t\tthis.meshes = [];\n\t\tthis.animations = {};\n\n\t\tthis.loadCounter = 0;\n\n\t\t// internal movement control variables\n\n\t\tthis.speed = 0;\n\t\tthis.bodyOrientation = 0;\n\n\t\tthis.walkSpeed = this.maxSpeed;\n\t\tthis.crouchSpeed = this.maxSpeed * 0.5;\n\n\t\t// internal animation parameters\n\n\t\tthis.activeAnimation = null;\n\t\tthis.oldAnimation = null;\n\n\t\t// API\n\n\t\tthis.enableShadows = function ( enable ) {\n\n\t\t\tfor ( var i = 0; i < this.meshes.length; i ++ ) {\n\n\t\t\t\tthis.meshes[ i ].castShadow = enable;\n\t\t\t\tthis.meshes[ i ].receiveShadow = enable;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setVisible = function ( enable ) {\n\n\t\t\tfor ( var i = 0; i < this.meshes.length; i ++ ) {\n\n\t\t\t\tthis.meshes[ i ].visible = enable;\n\t\t\t\tthis.meshes[ i ].visible = enable;\n\n\t\t\t}\n\n\t\t};\n\n\n\t\tthis.shareParts = function ( original ) {\n\n\t\t\tthis.animations = original.animations;\n\t\t\tthis.walkSpeed = original.walkSpeed;\n\t\t\tthis.crouchSpeed = original.crouchSpeed;\n\n\t\t\tthis.skinsBody = original.skinsBody;\n\t\t\tthis.skinsWeapon = original.skinsWeapon;\n\n\t\t\t// BODY\n\n\t\t\tvar mesh = createPart( original.meshBody.geometry, this.skinsBody[ 0 ] );\n\t\t\tmesh.scale.set( this.scale, this.scale, this.scale );\n\n\t\t\tthis.root.position.y = original.root.position.y;\n\t\t\tthis.root.add( mesh );\n\n\t\t\tthis.meshBody = mesh;\n\n\t\t\tthis.meshes.push( mesh );\n\n\t\t\t// WEAPONS\n\n\t\t\tfor ( var i = 0; i < original.weapons.length; i ++ ) {\n\n\t\t\t\tvar meshWeapon = createPart( original.weapons[ i ].geometry, this.skinsWeapon[ i ] );\n\t\t\t\tmeshWeapon.scale.set( this.scale, this.scale, this.scale );\n\t\t\t\tmeshWeapon.visible = false;\n\n\t\t\t\tmeshWeapon.name = original.weapons[ i ].name;\n\n\t\t\t\tthis.root.add( meshWeapon );\n\n\t\t\t\tthis.weapons[ i ] = meshWeapon;\n\t\t\t\tthis.meshWeapon = meshWeapon;\n\n\t\t\t\tthis.meshes.push( meshWeapon );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.loadParts = function ( config ) {\n\n\t\t\tthis.animations = config.animations;\n\t\t\tthis.walkSpeed = config.walkSpeed;\n\t\t\tthis.crouchSpeed = config.crouchSpeed;\n\n\t\t\tthis.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n\n\t\t\tvar weaponsTextures = [];\n\t\t\tfor ( var i = 0; i < config.weapons.length; i ++ ) weaponsTextures[ i ] = config.weapons[ i ][ 1 ];\n\n\t\t\t// SKINS\n\n\t\t\tthis.skinsBody = loadTextures( config.baseUrl + \"skins/\", config.skins );\n\t\t\tthis.skinsWeapon = loadTextures( config.baseUrl + \"skins/\", weaponsTextures );\n\n\t\t\t// BODY\n\n\t\t\tvar loader = new THREE.MD2Loader();\n\n\t\t\tloader.load( config.baseUrl + config.body, function ( geo ) {\n\n\t\t\t\tvar boundingBox = new THREE.Box3();\n\t\t\t\tboundingBox.setFromBufferAttribute( geo.attributes.position );\n\n\t\t\t\tscope.root.position.y = - scope.scale * boundingBox.min.y;\n\n\t\t\t\tvar mesh = createPart( geo, scope.skinsBody[ 0 ] );\n\t\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\n\n\t\t\t\tscope.root.add( mesh );\n\n\t\t\t\tscope.meshBody = mesh;\n\t\t\t\tscope.meshes.push( mesh );\n\n\t\t\t\tcheckLoadingComplete();\n\n\t\t\t} );\n\n\t\t\t// WEAPONS\n\n\t\t\tvar generateCallback = function ( index, name ) {\n\n\t\t\t\treturn function ( geo ) {\n\n\t\t\t\t\tvar mesh = createPart( geo, scope.skinsWeapon[ index ] );\n\t\t\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\n\t\t\t\t\tmesh.visible = false;\n\n\t\t\t\t\tmesh.name = name;\n\n\t\t\t\t\tscope.root.add( mesh );\n\n\t\t\t\t\tscope.weapons[ index ] = mesh;\n\t\t\t\t\tscope.meshWeapon = mesh;\n\t\t\t\t\tscope.meshes.push( mesh );\n\n\t\t\t\t\tcheckLoadingComplete();\n\n\t\t\t\t};\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < config.weapons.length; i ++ ) {\n\n\t\t\t\tloader.load( config.baseUrl + config.weapons[ i ][ 0 ], generateCallback( i, config.weapons[ i ][ 0 ] ) );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setPlaybackRate = function ( rate ) {\n\n\t\t\tif ( this.meshBody ) this.meshBody.duration = this.meshBody.baseDuration / rate;\n\t\t\tif ( this.meshWeapon ) this.meshWeapon.duration = this.meshWeapon.baseDuration / rate;\n\n\t\t};\n\n\t\tthis.setWireframe = function ( wireframeEnabled ) {\n\n\t\t\tif ( wireframeEnabled ) {\n\n\t\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialWireframe;\n\t\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialTexture;\n\t\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialTexture;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setSkin = function ( index ) {\n\n\t\t\tif ( this.meshBody && this.meshBody.material.wireframe === false ) {\n\n\t\t\t\tthis.meshBody.material.map = this.skinsBody[ index ];\n\t\t\t\tthis.currentSkin = index;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setWeapon = function ( index ) {\n\n\t\t\tfor ( var i = 0; i < this.weapons.length; i ++ ) this.weapons[ i ].visible = false;\n\n\t\t\tvar activeWeapon = this.weapons[ index ];\n\n\t\t\tif ( activeWeapon ) {\n\n\t\t\t\tactiveWeapon.visible = true;\n\t\t\t\tthis.meshWeapon = activeWeapon;\n\n\t\t\t\tif ( this.activeAnimation ) {\n\n\t\t\t\t\tactiveWeapon.playAnimation( this.activeAnimation );\n\t\t\t\t\tthis.meshWeapon.setAnimationTime( this.activeAnimation, this.meshBody.getAnimationTime( this.activeAnimation ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setAnimation = function ( animationName ) {\n\n\t\t\tif ( animationName === this.activeAnimation || ! animationName ) return;\n\n\t\t\tif ( this.meshBody ) {\n\n\t\t\t\tthis.meshBody.setAnimationWeight( animationName, 0 );\n\t\t\t\tthis.meshBody.playAnimation( animationName );\n\n\t\t\t\tthis.oldAnimation = this.activeAnimation;\n\t\t\t\tthis.activeAnimation = animationName;\n\n\t\t\t\tthis.blendCounter = this.transitionFrames;\n\n\t\t\t}\n\n\t\t\tif ( this.meshWeapon ) {\n\n\t\t\t\tthis.meshWeapon.setAnimationWeight( animationName, 0 );\n\t\t\t\tthis.meshWeapon.playAnimation( animationName );\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tthis.update = function ( delta ) {\n\n\t\t\tif ( this.controls ) this.updateMovementModel( delta );\n\n\t\t\tif ( this.animations ) {\n\n\t\t\t\tthis.updateBehaviors();\n\t\t\t\tthis.updateAnimations( delta );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.updateAnimations = function ( delta ) {\n\n\t\t\tvar mix = 1;\n\n\t\t\tif ( this.blendCounter > 0 ) {\n\n\t\t\t\tmix = ( this.transitionFrames - this.blendCounter ) / this.transitionFrames;\n\t\t\t\tthis.blendCounter -= 1;\n\n\t\t\t}\n\n\t\t\tif ( this.meshBody ) {\n\n\t\t\t\tthis.meshBody.update( delta );\n\n\t\t\t\tthis.meshBody.setAnimationWeight( this.activeAnimation, mix );\n\t\t\t\tthis.meshBody.setAnimationWeight( this.oldAnimation, 1 - mix );\n\n\t\t\t}\n\n\t\t\tif ( this.meshWeapon ) {\n\n\t\t\t\tthis.meshWeapon.update( delta );\n\n\t\t\t\tthis.meshWeapon.setAnimationWeight( this.activeAnimation, mix );\n\t\t\t\tthis.meshWeapon.setAnimationWeight( this.oldAnimation, 1 - mix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.updateBehaviors = function () {\n\n\t\t\tvar controls = this.controls;\n\t\t\tvar animations = this.animations;\n\n\t\t\tvar moveAnimation, idleAnimation;\n\n\t\t\t// crouch vs stand\n\n\t\t\tif ( controls.crouch ) {\n\n\t\t\t\tmoveAnimation = animations[ \"crouchMove\" ];\n\t\t\t\tidleAnimation = animations[ \"crouchIdle\" ];\n\n\t\t\t} else {\n\n\t\t\t\tmoveAnimation = animations[ \"move\" ];\n\t\t\t\tidleAnimation = animations[ \"idle\" ];\n\n\t\t\t}\n\n\t\t\t// actions\n\n\t\t\tif ( controls.jump ) {\n\n\t\t\t\tmoveAnimation = animations[ \"jump\" ];\n\t\t\t\tidleAnimation = animations[ \"jump\" ];\n\n\t\t\t}\n\n\t\t\tif ( controls.attack ) {\n\n\t\t\t\tif ( controls.crouch ) {\n\n\t\t\t\t\tmoveAnimation = animations[ \"crouchAttack\" ];\n\t\t\t\t\tidleAnimation = animations[ \"crouchAttack\" ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmoveAnimation = animations[ \"attack\" ];\n\t\t\t\t\tidleAnimation = animations[ \"attack\" ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// set animations\n\n\t\t\tif ( controls.moveForward || controls.moveBackward || controls.moveLeft || controls.moveRight ) {\n\n\t\t\t\tif ( this.activeAnimation !== moveAnimation ) {\n\n\t\t\t\t\tthis.setAnimation( moveAnimation );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif ( Math.abs( this.speed ) < 0.2 * this.maxSpeed && ! ( controls.moveLeft || controls.moveRight || controls.moveForward || controls.moveBackward ) ) {\n\n\t\t\t\tif ( this.activeAnimation !== idleAnimation ) {\n\n\t\t\t\t\tthis.setAnimation( idleAnimation );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// set animation direction\n\n\t\t\tif ( controls.moveForward ) {\n\n\t\t\t\tif ( this.meshBody ) {\n\n\t\t\t\t\tthis.meshBody.setAnimationDirectionForward( this.activeAnimation );\n\t\t\t\t\tthis.meshBody.setAnimationDirectionForward( this.oldAnimation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.meshWeapon ) {\n\n\t\t\t\t\tthis.meshWeapon.setAnimationDirectionForward( this.activeAnimation );\n\t\t\t\t\tthis.meshWeapon.setAnimationDirectionForward( this.oldAnimation );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( controls.moveBackward ) {\n\n\t\t\t\tif ( this.meshBody ) {\n\n\t\t\t\t\tthis.meshBody.setAnimationDirectionBackward( this.activeAnimation );\n\t\t\t\t\tthis.meshBody.setAnimationDirectionBackward( this.oldAnimation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.meshWeapon ) {\n\n\t\t\t\t\tthis.meshWeapon.setAnimationDirectionBackward( this.activeAnimation );\n\t\t\t\t\tthis.meshWeapon.setAnimationDirectionBackward( this.oldAnimation );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.updateMovementModel = function ( delta ) {\n\n\t\t\tvar controls = this.controls;\n\n\t\t\t// speed based on controls\n\n\t\t\tif ( controls.crouch ) \tthis.maxSpeed = this.crouchSpeed;\n\t\t\telse this.maxSpeed = this.walkSpeed;\n\n\t\t\tthis.maxReverseSpeed = - this.maxSpeed;\n\n\t\t\tif ( controls.moveForward ) this.speed = THREE.MathUtils.clamp( this.speed + delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed );\n\t\t\tif ( controls.moveBackward ) this.speed = THREE.MathUtils.clamp( this.speed - delta * this.backAcceleration, this.maxReverseSpeed, this.maxSpeed );\n\n\t\t\t// orientation based on controls\n\t\t\t// (don't just stand while turning)\n\n\t\t\tvar dir = 1;\n\n\t\t\tif ( controls.moveLeft ) {\n\n\t\t\t\tthis.bodyOrientation += delta * this.angularSpeed;\n\t\t\t\tthis.speed = THREE.MathUtils.clamp( this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed );\n\n\t\t\t}\n\n\t\t\tif ( controls.moveRight ) {\n\n\t\t\t\tthis.bodyOrientation -= delta * this.angularSpeed;\n\t\t\t\tthis.speed = THREE.MathUtils.clamp( this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed );\n\n\t\t\t}\n\n\t\t\t// speed decay\n\n\t\t\tif ( ! ( controls.moveForward || controls.moveBackward ) ) {\n\n\t\t\t\tif ( this.speed > 0 ) {\n\n\t\t\t\t\tvar k = exponentialEaseOut( this.speed / this.maxSpeed );\n\t\t\t\t\tthis.speed = THREE.MathUtils.clamp( this.speed - k * delta * this.frontDecceleration, 0, this.maxSpeed );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar k = exponentialEaseOut( this.speed / this.maxReverseSpeed );\n\t\t\t\t\tthis.speed = THREE.MathUtils.clamp( this.speed + k * delta * this.backAcceleration, this.maxReverseSpeed, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// displacement\n\n\t\t\tvar forwardDelta = this.speed * delta;\n\n\t\t\tthis.root.position.x += Math.sin( this.bodyOrientation ) * forwardDelta;\n\t\t\tthis.root.position.z += Math.cos( this.bodyOrientation ) * forwardDelta;\n\n\t\t\t// steering\n\n\t\t\tthis.root.rotation.y = this.bodyOrientation;\n\n\t\t};\n\n\t\t// internal helpers\n\n\t\tfunction loadTextures( baseUrl, textureUrls ) {\n\n\t\t\tvar textureLoader = new THREE.TextureLoader();\n\t\t\tvar textures = [];\n\n\t\t\tfor ( var i = 0; i < textureUrls.length; i ++ ) {\n\n\t\t\t\ttextures[ i ] = textureLoader.load( baseUrl + textureUrls[ i ], checkLoadingComplete );\n\t\t\t\ttextures[ i ].mapping = THREE.UVMapping;\n\t\t\t\ttextures[ i ].name = textureUrls[ i ];\n\t\t\t\ttextures[ i ].encoding = THREE.sRGBEncoding;\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t}\n\n\t\tfunction createPart( geometry, skinMap ) {\n\n\t\t\tvar materialWireframe = new THREE.MeshLambertMaterial( { color: 0xffaa00, wireframe: true, morphTargets: true, morphNormals: true } );\n\t\t\tvar materialTexture = new THREE.MeshLambertMaterial( { color: 0xffffff, wireframe: false, map: skinMap, morphTargets: true, morphNormals: true } );\n\n\t\t\t//\n\n\t\t\tvar mesh = new THREE.MorphBlendMesh( geometry, materialTexture );\n\t\t\tmesh.rotation.y = - Math.PI / 2;\n\n\t\t\t//\n\n\t\t\tmesh.materialTexture = materialTexture;\n\t\t\tmesh.materialWireframe = materialWireframe;\n\n\t\t\t//\n\n\t\t\tmesh.autoCreateAnimations( scope.animationFPS );\n\n\t\t\treturn mesh;\n\n\t\t}\n\n\t\tfunction checkLoadingComplete() {\n\n\t\t\tscope.loadCounter -= 1;\n\t\t\tif ( scope.loadCounter === 0 ) \tscope.onLoadComplete();\n\n\t\t}\n\n\t\tfunction exponentialEaseOut( k ) {\n\n\t\t\treturn k === 1 ? 1 : - Math.pow( 2, - 10 * k ) + 1;\n\n\t\t}\n\n\t};\n\t\n\treturn THREE.MD2CharacterComplex;\n});\n"]}