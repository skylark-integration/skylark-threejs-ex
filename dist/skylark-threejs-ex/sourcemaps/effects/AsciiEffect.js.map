{"version":3,"sources":["effects/AsciiEffect.js"],"names":["define","THREE","AsciiEffect","renderer","charSet","options","undefined","width","height","bResolution","iScale","bColor","bAlpha","bBlock","bInvert","domElement","document","createElement","style","cursor","iWidth","iHeight","oImg","oAscii","appendChild","this","setSize","w","h","Math","round","fResolution","oCanvas","backgroundColor","rows","cells","color","cellSpacing","cellPadding","oStyle","display","whiteSpace","margin","padding","letterSpacing","fLetterSpacing","fontFamily","strFont","fontSize","fFontSize","lineHeight","fLineHeight","textAlign","textDecoration","initAsciiSize","render","scene","camera","canvasRenderer","oCtx","clearRect","drawImage","oCanvasImg","oImgData","getImageData","data","strChars","y","x","iCharIdx","fBrightness","iOffset","iRed","iGreen","iBlue","iAlpha","floor","aCharList","length","strThisChar","innerHTML","asciifyImage","aDefaultCharList","split","aDefaultColorCharList","getContext","strResolution"],"mappings":"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","file":"../../effects/AsciiEffect.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t *\n\t * Ascii generation is based on http://www.nihilogic.dk/labs/jsascii/\n\t * Maybe more about this later with a blog post at http://lab4games.net/zz85/blog\n\t *\n\t * 16 April 2012 - @blurspline\n\t */\n\n\tTHREE.AsciiEffect = function ( renderer, charSet, options ) {\n\n\t\t// its fun to create one your own!\n\n\t\tcharSet = ( charSet === undefined ) ? ' .:-=+*#%@' : charSet;\n\n\t\t// ' .,:;=|iI+hHOE#`$';\n\t\t// darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n\t\t// ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n\t\tif ( ! options ) options = {};\n\n\t\t// Some ASCII settings\n\n\t\tvar bResolution = ! options[ 'resolution' ] ? 0.15 : options[ 'resolution' ]; // Higher for more details\n\t\tvar iScale = ! options[ 'scale' ] ? 1 : options[ 'scale' ];\n\t\tvar bColor = ! options[ 'color' ] ? false : options[ 'color' ]; // nice but slows down rendering!\n\t\tvar bAlpha = ! options[ 'alpha' ] ? false : options[ 'alpha' ]; // Transparency\n\t\tvar bBlock = ! options[ 'block' ] ? false : options[ 'block' ]; // blocked characters. like good O dos\n\t\tvar bInvert = ! options[ 'invert' ] ? false : options[ 'invert' ]; // black is white, white is black\n\n\t\tvar strResolution = 'low';\n\n\t\tvar width, height;\n\n\t\tvar domElement = document.createElement( 'div' );\n\t\tdomElement.style.cursor = 'default';\n\n\t\tvar oAscii = document.createElement( \"table\" );\n\t\tdomElement.appendChild( oAscii );\n\n\t\tvar iWidth, iHeight;\n\t\tvar oImg;\n\n\t\tthis.setSize = function ( w, h ) {\n\n\t\t\twidth = w;\n\t\t\theight = h;\n\n\t\t\trenderer.setSize( w, h );\n\n\t\t\tinitAsciiSize();\n\n\t\t};\n\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\trenderer.render( scene, camera );\n\t\t\tasciifyImage( renderer, oAscii );\n\n\t\t};\n\n\t\tthis.domElement = domElement;\n\n\n\t\t// Throw in ascii library from http://www.nihilogic.dk/labs/jsascii/jsascii.js\n\n\t\t/*\n\t\t* jsAscii 0.1\n\t\t* Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n\t\t* MIT License [http://www.nihilogic.dk/licenses/mit-license.txt]\n\t\t*/\n\n\t\tfunction initAsciiSize() {\n\n\t\t\tiWidth = Math.round( width * fResolution );\n\t\t\tiHeight = Math.round( height * fResolution );\n\n\t\t\toCanvas.width = iWidth;\n\t\t\toCanvas.height = iHeight;\n\t\t\t// oCanvas.style.display = \"none\";\n\t\t\t// oCanvas.style.width = iWidth;\n\t\t\t// oCanvas.style.height = iHeight;\n\n\t\t\toImg = renderer.domElement;\n\n\t\t\tif ( oImg.style.backgroundColor ) {\n\n\t\t\t\toAscii.rows[ 0 ].cells[ 0 ].style.backgroundColor = oImg.style.backgroundColor;\n\t\t\t\toAscii.rows[ 0 ].cells[ 0 ].style.color = oImg.style.color;\n\n\t\t\t}\n\n\t\t\toAscii.cellSpacing = 0;\n\t\t\toAscii.cellPadding = 0;\n\n\t\t\tvar oStyle = oAscii.style;\n\t\t\toStyle.display = \"inline\";\n\t\t\toStyle.width = Math.round( iWidth / fResolution * iScale ) + \"px\";\n\t\t\toStyle.height = Math.round( iHeight / fResolution * iScale ) + \"px\";\n\t\t\toStyle.whiteSpace = \"pre\";\n\t\t\toStyle.margin = \"0px\";\n\t\t\toStyle.padding = \"0px\";\n\t\t\toStyle.letterSpacing = fLetterSpacing + \"px\";\n\t\t\toStyle.fontFamily = strFont;\n\t\t\toStyle.fontSize = fFontSize + \"px\";\n\t\t\toStyle.lineHeight = fLineHeight + \"px\";\n\t\t\toStyle.textAlign = \"left\";\n\t\t\toStyle.textDecoration = \"none\";\n\n\t\t}\n\n\n\t\tvar aDefaultCharList = ( \" .,:;i1tfLCG08@\" ).split( \"\" );\n\t\tvar aDefaultColorCharList = ( \" CGO08@\" ).split( \"\" );\n\t\tvar strFont = \"courier new, monospace\";\n\n\t\tvar oCanvasImg = renderer.domElement;\n\n\t\tvar oCanvas = document.createElement( \"canvas\" );\n\t\tif ( ! oCanvas.getContext ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar oCtx = oCanvas.getContext( \"2d\" );\n\t\tif ( ! oCtx.getImageData ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar aCharList = ( bColor ? aDefaultColorCharList : aDefaultCharList );\n\n\t\tif ( charSet ) aCharList = charSet;\n\n\t\tvar fResolution = 0.5;\n\n\t\tswitch ( strResolution ) {\n\n\t\t\tcase \"low\" : \tfResolution = 0.25; break;\n\t\t\tcase \"medium\" : fResolution = 0.5; break;\n\t\t\tcase \"high\" : \tfResolution = 1; break;\n\n\t\t}\n\n\t\tif ( bResolution ) fResolution = bResolution;\n\n\t\t// Setup dom\n\n\t\tvar fFontSize = ( 2 / fResolution ) * iScale;\n\t\tvar fLineHeight = ( 2 / fResolution ) * iScale;\n\n\t\t// adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n\t\tvar fLetterSpacing = 0;\n\n\t\tif ( strResolution == \"low\" ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 : fLetterSpacing = - 1; break;\n\t\t\t\tcase 2 :\n\t\t\t\tcase 3 : fLetterSpacing = - 2.1; break;\n\t\t\t\tcase 4 : fLetterSpacing = - 3.1; break;\n\t\t\t\tcase 5 : fLetterSpacing = - 4.15; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( strResolution == \"medium\" ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 : fLetterSpacing = 0; break;\n\t\t\t\tcase 2 : fLetterSpacing = - 1; break;\n\t\t\t\tcase 3 : fLetterSpacing = - 1.04; break;\n\t\t\t\tcase 4 :\n\t\t\t\tcase 5 : fLetterSpacing = - 2.1; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( strResolution == \"high\" ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 :\n\t\t\t\tcase 2 : fLetterSpacing = 0; break;\n\t\t\t\tcase 3 :\n\t\t\t\tcase 4 :\n\t\t\t\tcase 5 : fLetterSpacing = - 1; break;\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// can't get a span or div to flow like an img element, but a table works?\n\n\n\t\t// convert img element to ascii\n\n\t\tfunction asciifyImage( canvasRenderer, oAscii ) {\n\n\t\t\toCtx.clearRect( 0, 0, iWidth, iHeight );\n\t\t\toCtx.drawImage( oCanvasImg, 0, 0, iWidth, iHeight );\n\t\t\tvar oImgData = oCtx.getImageData( 0, 0, iWidth, iHeight ).data;\n\n\t\t\t// Coloring loop starts now\n\t\t\tvar strChars = \"\";\n\n\t\t\t// console.time('rendering');\n\n\t\t\tfor ( var y = 0; y < iHeight; y += 2 ) {\n\n\t\t\t\tfor ( var x = 0; x < iWidth; x ++ ) {\n\n\t\t\t\t\tvar iOffset = ( y * iWidth + x ) * 4;\n\n\t\t\t\t\tvar iRed = oImgData[ iOffset ];\n\t\t\t\t\tvar iGreen = oImgData[ iOffset + 1 ];\n\t\t\t\t\tvar iBlue = oImgData[ iOffset + 2 ];\n\t\t\t\t\tvar iAlpha = oImgData[ iOffset + 3 ];\n\t\t\t\t\tvar iCharIdx;\n\n\t\t\t\t\tvar fBrightness;\n\n\t\t\t\t\tfBrightness = ( 0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue ) / 255;\n\t\t\t\t\t// fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n\t\t\t\t\tif ( iAlpha == 0 ) {\n\n\t\t\t\t\t\t// should calculate alpha instead, but quick hack :)\n\t\t\t\t\t\t//fBrightness *= (iAlpha / 255);\n\t\t\t\t\t\tfBrightness = 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tiCharIdx = Math.floor( ( 1 - fBrightness ) * ( aCharList.length - 1 ) );\n\n\t\t\t\t\tif ( bInvert ) {\n\n\t\t\t\t\t\tiCharIdx = aCharList.length - iCharIdx - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// good for debugging\n\t\t\t\t\t//fBrightness = Math.floor(fBrightness * 10);\n\t\t\t\t\t//strThisChar = fBrightness;\n\n\t\t\t\t\tvar strThisChar = aCharList[ iCharIdx ];\n\n\t\t\t\t\tif ( strThisChar === undefined || strThisChar == \" \" )\n\t\t\t\t\t\tstrThisChar = \"&nbsp;\";\n\n\t\t\t\t\tif ( bColor ) {\n\n\t\t\t\t\t\tstrChars += \"<span style='\"\n\t\t\t\t\t\t\t+ \"color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\"\n\t\t\t\t\t\t\t+ ( bBlock ? \"background-color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" : \"\" )\n\t\t\t\t\t\t\t+ ( bAlpha ? \"opacity:\" + ( iAlpha / 255 ) + \";\" : \"\" )\n\t\t\t\t\t\t\t+ \"'>\" + strThisChar + \"</span>\";\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstrChars += strThisChar;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tstrChars += \"<br/>\";\n\n\t\t\t}\n\n\t\t\toAscii.innerHTML = \"<tr><td>\" + strChars + \"</td></tr>\";\n\n\t\t\t// console.timeEnd('rendering');\n\n\t\t\t// return oAscii;\n\n\t\t}\n\n\t\t// end modified asciifyImage block\n\n\t};\n\t\n\treturn THREE.AsciiEffect;\n});\n"]}