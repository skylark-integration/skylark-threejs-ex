{"version":3,"sources":["helpers/PositionalAudioHelper.js"],"names":["define","THREE","threex","PositionalAudioHelper","audio","range","divisionsInnerAngle","divisionsOuterAngle","this","geometry","BufferGeometry","divisions","positions","Float32Array","setAttribute","BufferAttribute","materialInnerAngle","LineBasicMaterial","color","materialOuterAngle","Line","call","update","prototype","Object","create","constructor","i","stride","coneInnerAngle","MathUtils","degToRad","panner","coneOuterAngle","halfConeInnerAngle","halfConeOuterAngle","start","count","positionAttribute","attributes","position","generateSegment","from","to","materialIndex","step","setXYZ","Math","sin","cos","min","addGroup","clearGroups","needsUpdate","material","visible","dispose","helpers"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aACA,SAASC,EAAsBC,EAAOC,EAAOC,EAAqBC,GAC9DC,KAAKJ,MAAQA,EACbI,KAAKH,MAAQA,GAAS,EACtBG,KAAKF,oBAAsBA,GAAuB,GAClDE,KAAKD,oBAAsBA,GAAuB,EAClD,IAAIE,EAAW,IAAIR,EAAMS,eACrBC,EAAYH,KAAKF,oBAAiD,EAA3BE,KAAKD,oBAC5CK,EAAY,IAAIC,aAAmC,GAAT,EAAZF,EAAgB,IAClDF,EAASK,aAAa,WAAY,IAAIb,EAAMc,gBAAgBH,EAAW,IACvE,IAAII,EAAqB,IAAIf,EAAMgB,mBAAoBC,MAAO,QAC1DC,EAAqB,IAAIlB,EAAMgB,mBAAoBC,MAAO,WAC9DjB,EAAMmB,KAAKC,KAAKb,KAAMC,GAClBU,EACAH,IAEJR,KAAKc,SA+CT,OA7CAnB,EAAsBoB,UAAYC,OAAOC,OAAOxB,EAAMmB,KAAKG,WAC3DpB,EAAsBoB,UAAUG,YAAcvB,EAC9CA,EAAsBoB,UAAUD,OAAS,WACrC,IAUIK,EAAGC,EAVHxB,EAAQI,KAAKJ,MACbC,EAAQG,KAAKH,MACbC,EAAsBE,KAAKF,oBAC3BC,EAAsBC,KAAKD,oBAC3BsB,EAAiB5B,EAAM6B,UAAUC,SAAS3B,EAAM4B,OAAOH,gBACvDI,EAAiBhC,EAAM6B,UAAUC,SAAS3B,EAAM4B,OAAOC,gBACvDC,EAAqBL,EAAiB,EACtCM,EAAqBF,EAAiB,EACtCG,EAAQ,EACRC,EAAQ,EAER5B,EAAWD,KAAKC,SAChB6B,EAAoB7B,EAAS8B,WAAWC,SAE5C,SAASC,EAAgBC,EAAMC,EAAIhC,EAAWiC,GAC1C,IAAIC,GAAQF,EAAKD,GAAQ/B,EAGzB,IAFA2B,EAAkBQ,OAAOV,EAAO,EAAG,EAAG,GACtCC,IACKV,EAAIe,EAAMf,EAAIgB,EAAIhB,GAAKkB,EACxBjB,EAASQ,EAAQC,EACjBC,EAAkBQ,OAAOlB,EAAQmB,KAAKC,IAAIrB,GAAKtB,EAAO,EAAG0C,KAAKE,IAAItB,GAAKtB,GACvEiC,EAAkBQ,OAAOlB,EAAS,EAAGmB,KAAKC,IAAID,KAAKG,IAAIvB,EAAIkB,EAAMF,IAAOtC,EAAO,EAAG0C,KAAKE,IAAIF,KAAKG,IAAIvB,EAAIkB,EAAMF,IAAOtC,GACrHiC,EAAkBQ,OAAOlB,EAAS,EAAG,EAAG,EAAG,GAC3CS,GAAS,EAEb5B,EAAS0C,SAASf,EAAOC,EAAOO,GAChCR,GAASC,EACTA,EAAQ,EAdZ5B,EAAS2C,cAgBTX,GAAiBN,GAAqBD,EAAoB3B,EAAqB,GAC/EkC,GAAiBP,EAAoBA,EAAoB5B,EAAqB,GAC9EmC,EAAgBP,EAAoBC,EAAoB5B,EAAqB,GAC7E+B,EAAkBe,aAAc,EAC5BxB,IAAmBI,IACnBzB,KAAK8C,SAAS,GAAGC,SAAU,IAEnCpD,EAAsBoB,UAAUiC,QAAU,WACtChD,KAAKC,SAAS+C,UACdhD,KAAK8C,SAAS,GAAGE,UACjBhD,KAAK8C,SAAS,GAAGE,WAGdtD,EAAOuD,QAAQtD,sBAAwBA","file":"../../helpers/PositionalAudioHelper.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    function PositionalAudioHelper(audio, range, divisionsInnerAngle, divisionsOuterAngle) {\r\n        this.audio = audio;\r\n        this.range = range || 1;\r\n        this.divisionsInnerAngle = divisionsInnerAngle || 16;\r\n        this.divisionsOuterAngle = divisionsOuterAngle || 2;\r\n        var geometry = new THREE.BufferGeometry();\r\n        var divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\r\n        var positions = new Float32Array((divisions * 3 + 3) * 3);\r\n        geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n        var materialInnerAngle = new THREE.LineBasicMaterial({ color: 65280 });\r\n        var materialOuterAngle = new THREE.LineBasicMaterial({ color: 16776960 });\r\n        THREE.Line.call(this, geometry, [\r\n            materialOuterAngle,\r\n            materialInnerAngle\r\n        ]);\r\n        this.update();\r\n    }\r\n    PositionalAudioHelper.prototype = Object.create(THREE.Line.prototype);\r\n    PositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\r\n    PositionalAudioHelper.prototype.update = function () {\r\n        var audio = this.audio;\r\n        var range = this.range;\r\n        var divisionsInnerAngle = this.divisionsInnerAngle;\r\n        var divisionsOuterAngle = this.divisionsOuterAngle;\r\n        var coneInnerAngle = THREE.MathUtils.degToRad(audio.panner.coneInnerAngle);\r\n        var coneOuterAngle = THREE.MathUtils.degToRad(audio.panner.coneOuterAngle);\r\n        var halfConeInnerAngle = coneInnerAngle / 2;\r\n        var halfConeOuterAngle = coneOuterAngle / 2;\r\n        var start = 0;\r\n        var count = 0;\r\n        var i, stride;\r\n        var geometry = this.geometry;\r\n        var positionAttribute = geometry.attributes.position;\r\n        geometry.clearGroups();\r\n        function generateSegment(from, to, divisions, materialIndex) {\r\n            var step = (to - from) / divisions;\r\n            positionAttribute.setXYZ(start, 0, 0, 0);\r\n            count++;\r\n            for (i = from; i < to; i += step) {\r\n                stride = start + count;\r\n                positionAttribute.setXYZ(stride, Math.sin(i) * range, 0, Math.cos(i) * range);\r\n                positionAttribute.setXYZ(stride + 1, Math.sin(Math.min(i + step, to)) * range, 0, Math.cos(Math.min(i + step, to)) * range);\r\n                positionAttribute.setXYZ(stride + 2, 0, 0, 0);\r\n                count += 3;\r\n            }\r\n            geometry.addGroup(start, count, materialIndex);\r\n            start += count;\r\n            count = 0;\r\n        }\r\n        generateSegment(-halfConeOuterAngle, -halfConeInnerAngle, divisionsOuterAngle, 0);\r\n        generateSegment(-halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1);\r\n        generateSegment(halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0);\r\n        positionAttribute.needsUpdate = true;\r\n        if (coneInnerAngle === coneOuterAngle)\r\n            this.material[0].visible = false;\r\n    };\r\n    PositionalAudioHelper.prototype.dispose = function () {\r\n        this.geometry.dispose();\r\n        this.material[0].dispose();\r\n        this.material[1].dispose();\r\n    };\r\n\r\n    return threex.helpers.PositionalAudioHelper = PositionalAudioHelper;\r\n});"]}