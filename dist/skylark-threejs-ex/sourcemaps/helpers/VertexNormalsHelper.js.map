{"version":3,"sources":["helpers/VertexNormalsHelper.js"],"names":["define","THREE","threex","_v1","Vector3","_v2","_normalMatrix","Matrix3","_keys","VertexNormalsHelper","object","size","hex","linewidth","this","undefined","color","width","nNormals","objGeometry","geometry","isGeometry","faces","length","isBufferGeometry","attributes","normal","count","BufferGeometry","positions","Float32BufferAttribute","setAttribute","LineSegments","call","LineBasicMaterial","matrixAutoUpdate","update","prototype","Object","create","constructor","updateMatrixWorld","getNormalMatrix","matrixWorld","position","vertices","idx","i","l","face","j","jl","vertexNormals","vertex","copy","applyMatrix4","applyMatrix3","normalize","multiplyScalar","add","setXYZ","x","y","z","objPos","objNorm","set","getX","getY","getZ","needsUpdate","helpers"],"mappings":"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","file":"../../helpers/VertexNormalsHelper.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    var _v1 = new THREE.Vector3();\r\n    var _v2 = new THREE.Vector3();\r\n    var _normalMatrix = new THREE.Matrix3();\r\n    var _keys = [\r\n        'a',\r\n        'b',\r\n        'c'\r\n    ];\r\n    function VertexNormalsHelper(object, size, hex, linewidth) {\r\n        this.object = object;\r\n        this.size = size !== undefined ? size : 1;\r\n        var color = hex !== undefined ? hex : 16711680;\r\n        var width = linewidth !== undefined ? linewidth : 1;\r\n        var nNormals = 0;\r\n        var objGeometry = this.object.geometry;\r\n        if (objGeometry && objGeometry.isGeometry) {\r\n            nNormals = objGeometry.faces.length * 3;\r\n        } else if (objGeometry && objGeometry.isBufferGeometry) {\r\n            nNormals = objGeometry.attributes.normal.count;\r\n        }\r\n        var geometry = new THREE.BufferGeometry();\r\n        var positions = new THREE.Float32BufferAttribute(nNormals * 2 * 3, 3);\r\n        geometry.setAttribute('position', positions);\r\n        THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\r\n            color: color,\r\n            linewidth: width\r\n        }));\r\n        this.matrixAutoUpdate = false;\r\n        this.update();\r\n    }\r\n    VertexNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\r\n    VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\r\n    VertexNormalsHelper.prototype.update = function () {\r\n        this.object.updateMatrixWorld(true);\r\n        _normalMatrix.getNormalMatrix(this.object.matrixWorld);\r\n        var matrixWorld = this.object.matrixWorld;\r\n        var position = this.geometry.attributes.position;\r\n        var objGeometry = this.object.geometry;\r\n        if (objGeometry && objGeometry.isGeometry) {\r\n            var vertices = objGeometry.vertices;\r\n            var faces = objGeometry.faces;\r\n            var idx = 0;\r\n            for (var i = 0, l = faces.length; i < l; i++) {\r\n                var face = faces[i];\r\n                for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\r\n                    var vertex = vertices[face[_keys[j]]];\r\n                    var normal = face.vertexNormals[j];\r\n                    _v1.copy(vertex).applyMatrix4(matrixWorld);\r\n                    _v2.copy(normal).applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\r\n                    position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\r\n                    idx = idx + 1;\r\n                    position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\r\n                    idx = idx + 1;\r\n                }\r\n            }\r\n        } else if (objGeometry && objGeometry.isBufferGeometry) {\r\n            var objPos = objGeometry.attributes.position;\r\n            var objNorm = objGeometry.attributes.normal;\r\n            var idx = 0;\r\n            for (var j = 0, jl = objPos.count; j < jl; j++) {\r\n                _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\r\n                _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\r\n                _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\r\n                position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\r\n                idx = idx + 1;\r\n                position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\r\n                idx = idx + 1;\r\n            }\r\n        }\r\n        position.needsUpdate = true;\r\n    };\r\n    \r\n    return threex.helpers.VertexNormalsHelper = VertexNormalsHelper;\r\n});"]}