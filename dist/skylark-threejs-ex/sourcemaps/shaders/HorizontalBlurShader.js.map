{"version":3,"sources":["shaders/HorizontalBlurShader.js"],"names":["define","threex","HorizontalBlurShader","uniforms","tDiffuse","value","h","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,GAAOD,MAAO,EAAI,MAEtBE,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,8BACA,mBACA,oBACA,gBACA,4BACA,0EACA,2EACA,4EACA,2EACA,iEACA,2EACA,4EACA,2EACA,0EACA,wBACA,KACFD,KAAK,OAEX,OAAQP,EAAOS,QAAQR,qBAAuBA","file":"../../shaders/HorizontalBlurShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var HorizontalBlurShader = {\r\n        uniforms: {\r\n            'tDiffuse': { value: null },\r\n            'h': { value: 1 / 512 }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform sampler2D tDiffuse;',\r\n            'uniform float h;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec4 sum = vec4( 0.0 );',\r\n            '\\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;',\r\n            '\\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;',\r\n            '\\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;',\r\n            '\\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;',\r\n            '\\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n            '\\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;',\r\n            '\\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;',\r\n            '\\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;',\r\n            '\\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;',\r\n            '\\tgl_FragColor = sum;',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return  threex.shaders.HorizontalBlurShader = HorizontalBlurShader;\r\n});"]}