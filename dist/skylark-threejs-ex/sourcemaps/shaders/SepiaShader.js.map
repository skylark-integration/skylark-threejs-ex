{"version":3,"sources":["shaders/SepiaShader.js"],"names":["define","uniforms","tDiffuse","value","amount","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aA2BA,OAzBIC,UACIC,UAAcC,MAAO,MACrBC,QAAYD,MAAO,IAEvBE,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,wBACA,8BACA,oBACA,gBACA,6CACA,wBACA,sFACA,sFACA,sFACA,mEACA,KACFD,KAAK","file":"../../shaders/SepiaShader.js","sourcesContent":["define(function () {\n    'use strict';\n    var SepiaShader = {\n        uniforms: {\n            'tDiffuse': { value: null },\n            'amount': { value: 1 }\n        },\n        vertexShader: [\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvUv = uv;',\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform float amount;',\n            'uniform sampler2D tDiffuse;',\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvec4 color = texture2D( tDiffuse, vUv );',\n            '\\tvec3 c = color.rgb;',\n            '\\tcolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );',\n            '\\tcolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );',\n            '\\tcolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );',\n            '\\tgl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );',\n            '}'\n        ].join('\\n')\n    };\n    return SepiaShader;\n});"]}