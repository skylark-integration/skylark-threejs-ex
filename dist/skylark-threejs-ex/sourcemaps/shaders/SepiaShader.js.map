{"version":3,"sources":["shaders/SepiaShader.js"],"names":["define","threex","SepiaShader","uniforms","tDiffuse","value","amount","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,QAAYD,MAAO,IAEvBE,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,wBACA,8BACA,oBACA,gBACA,6CACA,wBACA,sFACA,sFACA,sFACA,mEACA,KACFD,KAAK,OAEX,OAAOP,EAAOS,QAAQR,YAAcA","file":"../../shaders/SepiaShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var SepiaShader = {\r\n        uniforms: {\r\n            'tDiffuse': { value: null },\r\n            'amount': { value: 1 }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform float amount;',\r\n            'uniform sampler2D tDiffuse;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec4 color = texture2D( tDiffuse, vUv );',\r\n            '\\tvec3 c = color.rgb;',\r\n            '\\tcolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );',\r\n            '\\tcolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );',\r\n            '\\tcolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );',\r\n            '\\tgl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.SepiaShader = SepiaShader;\r\n});"]}