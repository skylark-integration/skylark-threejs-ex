{"version":3,"sources":["shaders/AfterimageShader.js"],"names":["define","threex","AfterimageShader","uniforms","damp","value","tOld","tNew","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,MAAUC,MAAO,KACjBC,MAAUD,MAAO,MACjBE,MAAUF,MAAO,OAErBG,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,sBACA,0BACA,0BACA,oBACA,oCACA,sCACA,IACA,gBACA,4CACA,4CACA,iDACA,4CACA,KACFD,KAAK,OAEX,OAAOR,EAAOU,QAAQT,iBAAmBA","file":"../../shaders/AfterimageShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var AfterimageShader = {\r\n        uniforms: {\r\n            'damp': { value: 0.96 },\r\n            'tOld': { value: null },\r\n            'tNew': { value: null }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform float damp;',\r\n            'uniform sampler2D tOld;',\r\n            'uniform sampler2D tNew;',\r\n            'varying vec2 vUv;',\r\n            'vec4 when_gt( vec4 x, float y ) {',\r\n            '\\treturn max( sign( x - y ), 0.0 );',\r\n            '}',\r\n            'void main() {',\r\n            '\\tvec4 texelOld = texture2D( tOld, vUv );',\r\n            '\\tvec4 texelNew = texture2D( tNew, vUv );',\r\n            '\\ttexelOld *= damp * when_gt( texelOld, 0.1 );',\r\n            '\\tgl_FragColor = max(texelNew, texelOld);',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.AfterimageShader = AfterimageShader;\r\n});"]}