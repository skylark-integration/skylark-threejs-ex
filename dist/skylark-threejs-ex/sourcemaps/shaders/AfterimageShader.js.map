{"version":3,"sources":["shaders/AfterimageShader.js"],"names":["define","uniforms","damp","value","tOld","tNew","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aA8BA,OA5BIC,UACIC,MAAUC,MAAO,KACjBC,MAAUD,MAAO,MACjBE,MAAUF,MAAO,OAErBG,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,sBACA,0BACA,0BACA,oBACA,oCACA,sCACA,IACA,gBACA,4CACA,4CACA,iDACA,4CACA,KACFD,KAAK","file":"../../shaders/AfterimageShader.js","sourcesContent":["define(function () {\n    'use strict';\n    var AfterimageShader = {\n        uniforms: {\n            'damp': { value: 0.96 },\n            'tOld': { value: null },\n            'tNew': { value: null }\n        },\n        vertexShader: [\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvUv = uv;',\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform float damp;',\n            'uniform sampler2D tOld;',\n            'uniform sampler2D tNew;',\n            'varying vec2 vUv;',\n            'vec4 when_gt( vec4 x, float y ) {',\n            '\\treturn max( sign( x - y ), 0.0 );',\n            '}',\n            'void main() {',\n            '\\tvec4 texelOld = texture2D( tOld, vUv );',\n            '\\tvec4 texelNew = texture2D( tNew, vUv );',\n            '\\ttexelOld *= damp * when_gt( texelOld, 0.1 );',\n            '\\tgl_FragColor = max(texelNew, texelOld);',\n            '}'\n        ].join('\\n')\n    };\n    return AfterimageShader;\n});"]}