{"version":3,"sources":["shaders/VignetteShader.js"],"names":["define","threex","VignetteShader","uniforms","tDiffuse","value","offset","darkness","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,QAAYD,MAAO,GACnBE,UAAcF,MAAO,IAEzBG,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,wBACA,0BACA,8BACA,oBACA,gBACA,6CACA,sDACA,6FACA,KACFD,KAAK,OAEX,OAAOR,EAAOU,QAAQT,eAAiBA","file":"../../shaders/VignetteShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var VignetteShader = {\r\n        uniforms: {\r\n            'tDiffuse': { value: null },\r\n            'offset': { value: 1 },\r\n            'darkness': { value: 1 }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform float offset;',\r\n            'uniform float darkness;',\r\n            'uniform sampler2D tDiffuse;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec4 texel = texture2D( tDiffuse, vUv );',\r\n            '\\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );',\r\n            '\\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.VignetteShader = VignetteShader;\r\n});"]}