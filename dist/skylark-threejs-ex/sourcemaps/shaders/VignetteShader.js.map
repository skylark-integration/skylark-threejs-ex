{"version":3,"sources":["shaders/VignetteShader.js"],"names":["define","uniforms","tDiffuse","value","offset","darkness","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aA0BA,OAxBIC,UACIC,UAAcC,MAAO,MACrBC,QAAYD,MAAO,GACnBE,UAAcF,MAAO,IAEzBG,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,wBACA,0BACA,8BACA,oBACA,gBACA,6CACA,sDACA,6FACA,KACFD,KAAK","file":"../../shaders/VignetteShader.js","sourcesContent":["define(function () {\n    'use strict';\n    var VignetteShader = {\n        uniforms: {\n            'tDiffuse': { value: null },\n            'offset': { value: 1 },\n            'darkness': { value: 1 }\n        },\n        vertexShader: [\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvUv = uv;',\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform float offset;',\n            'uniform float darkness;',\n            'uniform sampler2D tDiffuse;',\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvec4 texel = texture2D( tDiffuse, vUv );',\n            '\\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );',\n            '\\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );',\n            '}'\n        ].join('\\n')\n    };\n    return VignetteShader;\n});"]}