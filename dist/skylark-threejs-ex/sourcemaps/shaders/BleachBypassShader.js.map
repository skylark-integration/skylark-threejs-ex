{"version":3,"sources":["shaders/BleachBypassShader.js"],"names":["define","threex","BleachBypassShader","uniforms","tDiffuse","value","opacity","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,SAAaD,MAAO,IAExBE,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,yBACA,8BACA,oBACA,gBACA,4CACA,6CACA,2CACA,8BACA,6DACA,2CACA,qEACA,gDACA,iCACA,qCACA,2CACA,2CACA,KACFD,KAAK,OAEX,OAAOP,EAAOS,QAAQR,mBAAqBA","file":"../../shaders/BleachBypassShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var BleachBypassShader = {\r\n        uniforms: {\r\n            'tDiffuse': { value: null },\r\n            'opacity': { value: 1 }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform float opacity;',\r\n            'uniform sampler2D tDiffuse;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec4 base = texture2D( tDiffuse, vUv );',\r\n            '\\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );',\r\n            '\\tfloat lum = dot( lumCoeff, base.rgb );',\r\n            '\\tvec3 blend = vec3( lum );',\r\n            '\\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );',\r\n            '\\tvec3 result1 = 2.0 * base.rgb * blend;',\r\n            '\\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );',\r\n            '\\tvec3 newColor = mix( result1, result2, L );',\r\n            '\\tfloat A2 = opacity * base.a;',\r\n            '\\tvec3 mixRGB = A2 * newColor.rgb;',\r\n            '\\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );',\r\n            '\\tgl_FragColor = vec4( mixRGB, base.a );',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.BleachBypassShader = BleachBypassShader;\r\n});"]}