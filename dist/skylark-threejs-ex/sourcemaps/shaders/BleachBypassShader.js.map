{"version":3,"sources":["shaders/BleachBypassShader.js"],"names":["define","threex","BleachBypassShader","uniforms","tDiffuse","value","opacity","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,SAAaD,MAAO,IAExBE,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,yBACA,8BACA,oBACA,gBACA,4CACA,6CACA,2CACA,8BACA,6DACA,2CACA,qEACA,gDACA,iCACA,qCACA,2CACA,2CACA,KACFD,KAAK,OAEX,OAAOP,EAAOS,QAAQR,mBAAqBA","file":"../../shaders/BleachBypassShader.js","sourcesContent":["define([\n    \"../threex\"\n],function (threex) {\n    'use strict';\n    var BleachBypassShader = {\n        uniforms: {\n            'tDiffuse': { value: null },\n            'opacity': { value: 1 }\n        },\n        vertexShader: [\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvUv = uv;',\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform float opacity;',\n            'uniform sampler2D tDiffuse;',\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvec4 base = texture2D( tDiffuse, vUv );',\n            '\\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );',\n            '\\tfloat lum = dot( lumCoeff, base.rgb );',\n            '\\tvec3 blend = vec3( lum );',\n            '\\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );',\n            '\\tvec3 result1 = 2.0 * base.rgb * blend;',\n            '\\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );',\n            '\\tvec3 newColor = mix( result1, result2, L );',\n            '\\tfloat A2 = opacity * base.a;',\n            '\\tvec3 mixRGB = A2 * newColor.rgb;',\n            '\\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );',\n            '\\tgl_FragColor = vec4( mixRGB, base.a );',\n            '}'\n        ].join('\\n')\n    };\n    return threex.shaders.BleachBypassShader = BleachBypassShader;\n});"]}