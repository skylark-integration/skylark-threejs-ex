{"version":3,"sources":["shaders/VerticalBlurShader.js"],"names":["define","THREE","VerticalBlurShader","uniforms","tDiffuse","value","v","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GAgEV,OAnDAA,EAAMC,oBAELC,UAECC,UAAcC,MAAO,MACrBC,GAAOD,MAAO,EAAM,MAIrBE,cAEC,oBAEA,gBAEA,cACA,8EAEA,KAECC,KAAM,MAERC,gBAEC,8BACA,mBAEA,oBAEA,gBAEA,4BAEA,0EACA,2EACA,4EACA,2EACA,iEACA,2EACA,4EACA,2EACA,0EAEA,wBAEA,KAECD,KAAM,OAIFP,EAAMC","file":"../../shaders/VerticalBlurShader.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n\t * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n\t *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n\t *\n\t * - 9 samples per pass\n\t * - standard deviation 2.7\n\t * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n\t */\n\n\tTHREE.VerticalBlurShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { value: null },\n\t\t\t\"v\": { value: 1.0 / 512.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvUv = uv;\",\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float v;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvec4 sum = vec4( 0.0 );\",\n\n\t\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\",\n\t\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\",\n\t\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\",\n\t\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\",\n\t\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\",\n\t\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\",\n\t\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\",\n\t\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\",\n\n\t\t\t\"\tgl_FragColor = sum;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\t\n\treturn THREE.VerticalBlurShader;\n});\n"]}