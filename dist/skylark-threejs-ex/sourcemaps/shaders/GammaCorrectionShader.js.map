{"version":3,"sources":["shaders/GammaCorrectionShader.js"],"names":["define","THREE","GammaCorrectionShader","uniforms","tDiffuse","value","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GA+CV,OAvCAA,EAAMC,uBAELC,UAECC,UAAcC,MAAO,OAItBC,cAEC,oBAEA,gBAEA,cACA,8EAEA,KAECC,KAAM,MAERC,gBAEC,8BAEA,oBAEA,gBAEA,2CAEA,wCAEA,KAECD,KAAM,OAIFN,EAAMC","file":"../../shaders/GammaCorrectionShader.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Gamma Correction Shader\n\t * http://en.wikipedia.org/wiki/gamma_correction\n\t */\n\n\tTHREE.GammaCorrectionShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { value: null }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvUv = uv;\",\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvec4 tex = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"\tgl_FragColor = LinearTosRGB( tex );\", // optional: LinearToGamma( tex, float( GAMMA_FACTOR ) );\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\t\n\treturn THREE.GammaCorrectionShader;\n});\n"]}