{"version":3,"sources":["shaders/GammaCorrectionShader.js"],"names":["define","threex","GammaCorrectionShader","uniforms","tDiffuse","value","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UAAYC,UAAcC,MAAO,OACjCC,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,8BACA,oBACA,gBACA,2CACA,wCACA,KACFD,KAAK,OAEX,OAAON,EAAOQ,QAAQP,sBAAwBA","file":"../../shaders/GammaCorrectionShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var GammaCorrectionShader = {\r\n        uniforms: { 'tDiffuse': { value: null } },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform sampler2D tDiffuse;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec4 tex = texture2D( tDiffuse, vUv );',\r\n            '\\tgl_FragColor = LinearTosRGB( tex );',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.GammaCorrectionShader = GammaCorrectionShader;\r\n});"]}