{"version":3,"sources":["shaders/BrightnessContrastShader.js"],"names":["define","uniforms","tDiffuse","value","brightness","contrast","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aA8BA,OA5BIC,UACIC,UAAcC,MAAO,MACrBC,YAAgBD,MAAO,GACvBE,UAAcF,MAAO,IAEzBG,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,8BACA,4BACA,0BACA,oBACA,gBACA,+CACA,oCACA,0BACA,4EACA,aACA,4EACA,MACA,KACFD,KAAK","file":"../../shaders/BrightnessContrastShader.js","sourcesContent":["define(function () {\n    'use strict';\n    var BrightnessContrastShader = {\n        uniforms: {\n            'tDiffuse': { value: null },\n            'brightness': { value: 0 },\n            'contrast': { value: 0 }\n        },\n        vertexShader: [\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvUv = uv;',\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform sampler2D tDiffuse;',\n            'uniform float brightness;',\n            'uniform float contrast;',\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tgl_FragColor = texture2D( tDiffuse, vUv );',\n            '\\tgl_FragColor.rgb += brightness;',\n            '\\tif (contrast > 0.0) {',\n            '\\t\\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;',\n            '\\t} else {',\n            '\\t\\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;',\n            '\\t}',\n            '}'\n        ].join('\\n')\n    };\n    return BrightnessContrastShader;\n});"]}