{"version":3,"sources":["shaders/FocusShader.js"],"names":["define","uniforms","tDiffuse","value","screenWidth","screenHeight","sampleDistance","waveFactor","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aAqDA,OAnDIC,UACIC,UAAcC,MAAO,MACrBC,aAAiBD,MAAO,MACxBE,cAAkBF,MAAO,MACzBG,gBAAoBH,MAAO,KAC3BI,YAAgBJ,MAAO,SAE3BK,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,6BACA,8BACA,gCACA,4BACA,8BACA,oBACA,gBACA,+BACA,0BACA,cACA,mBACA,mDACA,8CACA,yCACA,qEACA,kFACA,sFACA,uCACA,sFACA,uCACA,uFACA,uCACA,uFACA,uCACA,wFACA,uCACA,wFACA,uCACA,uFACA,uCACA,yDACA,iGACA,kFACA,KACFD,KAAK","file":"../../shaders/FocusShader.js","sourcesContent":["define(function () {\n    'use strict';\n    var FocusShader = {\n        uniforms: {\n            'tDiffuse': { value: null },\n            'screenWidth': { value: 1024 },\n            'screenHeight': { value: 1024 },\n            'sampleDistance': { value: 0.94 },\n            'waveFactor': { value: 0.00125 }\n        },\n        vertexShader: [\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvUv = uv;',\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform float screenWidth;',\n            'uniform float screenHeight;',\n            'uniform float sampleDistance;',\n            'uniform float waveFactor;',\n            'uniform sampler2D tDiffuse;',\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvec4 color, org, tmp, add;',\n            '\\tfloat sample_dist, f;',\n            '\\tvec2 vin;',\n            '\\tvec2 uv = vUv;',\n            '\\tadd = color = org = texture2D( tDiffuse, uv );',\n            '\\tvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );',\n            '\\tsample_dist = dot( vin, vin ) * 2.0;',\n            '\\tf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;',\n            '\\tvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );',\n            '\\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );',\n            '\\tif( tmp.b < color.b ) color = tmp;',\n            '\\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );',\n            '\\tif( tmp.b < color.b ) color = tmp;',\n            '\\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );',\n            '\\tif( tmp.b < color.b ) color = tmp;',\n            '\\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );',\n            '\\tif( tmp.b < color.b ) color = tmp;',\n            '\\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );',\n            '\\tif( tmp.b < color.b ) color = tmp;',\n            '\\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );',\n            '\\tif( tmp.b < color.b ) color = tmp;',\n            '\\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );',\n            '\\tif( tmp.b < color.b ) color = tmp;',\n            '\\tcolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );',\n            '\\tcolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );',\n            '\\tgl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );',\n            '}'\n        ].join('\\n')\n    };\n    return FocusShader ;\n});"]}