{"version":3,"sources":["shaders/FocusShader.js"],"names":["define","THREE","FocusShader","uniforms","tDiffuse","value","screenWidth","screenHeight","sampleDistance","waveFactor","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GA6FV,OApFAA,EAAMC,aAELC,UAECC,UAAcC,MAAO,MACrBC,aAAiBD,MAAO,MACxBE,cAAkBF,MAAO,MACzBG,gBAAoBH,MAAO,KAC3BI,YAAgBJ,MAAO,SAIxBK,cAEC,oBAEA,gBAEA,cACA,8EAEA,KAECC,KAAM,MAERC,gBAEC,6BACA,8BACA,gCACA,4BAEA,8BAEA,oBAEA,gBAEA,+BACA,0BACA,cACA,mBAEA,mDAEA,8CACA,yCAEA,qEAEA,kFAEA,sFACA,uCAEA,sFACA,uCAEA,uFACA,uCAEA,uFACA,uCAEA,wFACA,uCAEA,wFACA,uCAEA,uFACA,uCAEA,yDACA,iGAEA,kFAEA,KAGCD,KAAM,OAGFV,EAAMC","file":"../../shaders/FocusShader.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Focus shader\n\t * based on PaintEffect postprocess from ro.me\n\t * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n\t */\n\n\tTHREE.FocusShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { value: null },\n\t\t\t\"screenWidth\": { value: 1024 },\n\t\t\t\"screenHeight\": { value: 1024 },\n\t\t\t\"sampleDistance\": { value: 0.94 },\n\t\t\t\"waveFactor\": { value: 0.00125 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvUv = uv;\",\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float screenWidth;\",\n\t\t\t\"uniform float screenHeight;\",\n\t\t\t\"uniform float sampleDistance;\",\n\t\t\t\"uniform float waveFactor;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvec4 color, org, tmp, add;\",\n\t\t\t\"\tfloat sample_dist, f;\",\n\t\t\t\"\tvec2 vin;\",\n\t\t\t\"\tvec2 uv = vUv;\",\n\n\t\t\t\"\tadd = color = org = texture2D( tDiffuse, uv );\",\n\n\t\t\t\"\tvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\",\n\t\t\t\"\tsample_dist = dot( vin, vin ) * 2.0;\",\n\n\t\t\t\"\tf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\",\n\n\t\t\t\"\tvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\",\n\n\t\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\",\n\t\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\",\n\t\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\",\n\t\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\",\n\t\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\",\n\t\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\",\n\t\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\",\n\t\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\"\tcolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\",\n\t\t\t\"\tcolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\",\n\n\t\t\t\"\tgl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\",\n\n\t\t\t\"}\"\n\n\n\t\t].join( \"\\n\" )\n\t};\n\t\n\treturn THREE.FocusShader;\n});\n"]}