{"version":3,"sources":["shaders/UnpackDepthRGBAShader.js"],"names":["define","threex","UnpackDepthRGBAShader","uniforms","tDiffuse","value","opacity","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,SAAaD,MAAO,IAExBE,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,yBACA,8BACA,oBACA,qBACA,gBACA,yEACA,mDACA,KACFD,KAAK,OAEX,OAAQP,EAAOS,QAAQR,sBAAwBA","file":"../../shaders/UnpackDepthRGBAShader.js","sourcesContent":["define([\n    \"../threex\"\n],function (threex) {\n    'use strict';\n    var UnpackDepthRGBAShader = {\n        uniforms: {\n            'tDiffuse': { value: null },\n            'opacity': { value: 1 }\n        },\n        vertexShader: [\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvUv = uv;',\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform float opacity;',\n            'uniform sampler2D tDiffuse;',\n            'varying vec2 vUv;',\n            '#include <packing>',\n            'void main() {',\n            '\\tfloat depth = 1.0 - unpackRGBAToDepth( texture2D( tDiffuse, vUv ) );',\n            '\\tgl_FragColor = vec4( vec3( depth ), opacity );',\n            '}'\n        ].join('\\n')\n    };\n    return  threex.shaders.UnpackDepthRGBAShader = UnpackDepthRGBAShader;\n});"]}