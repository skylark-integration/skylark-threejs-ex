{"version":3,"sources":["shaders/ColorCorrectionShader.js"],"names":["define","THREE","threex","ColorCorrectionShader","uniforms","tDiffuse","value","powRGB","Vector3","mulRGB","addRGB","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,QAAYD,MAAO,IAAIL,EAAMO,QAAQ,EAAG,EAAG,IAC3CC,QAAYH,MAAO,IAAIL,EAAMO,QAAQ,EAAG,EAAG,IAC3CE,QAAYJ,MAAO,IAAIL,EAAMO,QAAQ,EAAG,EAAG,KAE/CG,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,8BACA,uBACA,uBACA,uBACA,oBACA,gBACA,+CACA,8EACA,KACFD,KAAK,OAEX,OAAOV,EAAOY,QAAQX,sBAAwBA","file":"../../shaders/ColorCorrectionShader.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    var ColorCorrectionShader = {\r\n        uniforms: {\r\n            'tDiffuse': { value: null },\r\n            'powRGB': { value: new THREE.Vector3(2, 2, 2) },\r\n            'mulRGB': { value: new THREE.Vector3(1, 1, 1) },\r\n            'addRGB': { value: new THREE.Vector3(0, 0, 0) }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform sampler2D tDiffuse;',\r\n            'uniform vec3 powRGB;',\r\n            'uniform vec3 mulRGB;',\r\n            'uniform vec3 addRGB;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tgl_FragColor = texture2D( tDiffuse, vUv );',\r\n            '\\tgl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.ColorCorrectionShader = ColorCorrectionShader;\r\n});"]}