{"version":3,"sources":["shaders/BlendShader.js"],"names":["define","uniforms","tDiffuse1","value","tDiffuse2","mixRatio","opacity","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aA4BA,OA1BIC,UACIC,WAAeC,MAAO,MACtBC,WAAeD,MAAO,MACtBE,UAAcF,MAAO,IACrBG,SAAaH,MAAO,IAExBI,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,yBACA,0BACA,+BACA,+BACA,oBACA,gBACA,+CACA,+CACA,8DACA,KACFD,KAAK","file":"../../shaders/BlendShader.js","sourcesContent":["define(function () {\n    'use strict';\n    var BlendShader = {\n        uniforms: {\n            'tDiffuse1': { value: null },\n            'tDiffuse2': { value: null },\n            'mixRatio': { value: 0.5 },\n            'opacity': { value: 1 }\n        },\n        vertexShader: [\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvUv = uv;',\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform float opacity;',\n            'uniform float mixRatio;',\n            'uniform sampler2D tDiffuse1;',\n            'uniform sampler2D tDiffuse2;',\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvec4 texel1 = texture2D( tDiffuse1, vUv );',\n            '\\tvec4 texel2 = texture2D( tDiffuse2, vUv );',\n            '\\tgl_FragColor = opacity * mix( texel1, texel2, mixRatio );',\n            '}'\n        ].join('\\n')\n    };\n    return BlendShader;\n});"]}