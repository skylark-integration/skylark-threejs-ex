{"version":3,"sources":["shaders/BlendShader.js"],"names":["define","threex","BlendShader","uniforms","tDiffuse1","value","tDiffuse2","mixRatio","opacity","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,WAAeC,MAAO,MACtBC,WAAeD,MAAO,MACtBE,UAAcF,MAAO,IACrBG,SAAaH,MAAO,IAExBI,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,yBACA,0BACA,+BACA,+BACA,oBACA,gBACA,+CACA,+CACA,8DACA,KACFD,KAAK,OAEX,OAAOT,EAAOW,QAAQV,YAAcA","file":"../../shaders/BlendShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var BlendShader = {\r\n        uniforms: {\r\n            'tDiffuse1': { value: null },\r\n            'tDiffuse2': { value: null },\r\n            'mixRatio': { value: 0.5 },\r\n            'opacity': { value: 1 }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform float opacity;',\r\n            'uniform float mixRatio;',\r\n            'uniform sampler2D tDiffuse1;',\r\n            'uniform sampler2D tDiffuse2;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec4 texel1 = texture2D( tDiffuse1, vUv );',\r\n            '\\tvec4 texel2 = texture2D( tDiffuse2, vUv );',\r\n            '\\tgl_FragColor = opacity * mix( texel1, texel2, mixRatio );',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.BlendShader = BlendShader;\r\n});"]}