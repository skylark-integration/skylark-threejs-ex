{"version":3,"sources":["shaders/CopyShader.js"],"names":["define","threex","CopyShader","uniforms","tDiffuse","value","opacity","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,SAAaD,MAAO,IAExBE,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,yBACA,8BACA,oBACA,gBACA,6CACA,oCACA,KACFD,KAAK,OAEX,OAAOP,EAAOS,QAAQR,WAAaA","file":"../../shaders/CopyShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var CopyShader = {\r\n        uniforms: {\r\n            'tDiffuse': { value: null },\r\n            'opacity': { value: 1 }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform float opacity;',\r\n            'uniform sampler2D tDiffuse;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec4 texel = texture2D( tDiffuse, vUv );',\r\n            '\\tgl_FragColor = opacity * texel;',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.CopyShader = CopyShader;\r\n});"]}