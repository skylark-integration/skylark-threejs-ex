{"version":3,"sources":["shaders/MirrorShader.js"],"names":["define","THREE","MirrorShader","uniforms","tDiffuse","value","side","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GA4DV,OAlDAA,EAAMC,cAELC,UAECC,UAAcC,MAAO,MACrBC,MAAUD,MAAO,IAIlBE,cAEC,oBAEA,gBAEA,cACA,8EAEA,KAECC,KAAM,MAERC,gBAEC,8BACA,oBAEA,oBAEA,gBAEA,kBACA,oBACA,sCACA,0BACA,sCACA,0BACA,sCACA,0BACA,sCACA,OACA,yCACA,0BAEA,KAECD,KAAM,OAIFP,EAAMC","file":"../../shaders/MirrorShader.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author felixturner / http://airtight.cc/\n\t *\n\t * Mirror Shader\n\t * Copies half the input to the other half\n\t *\n\t * side: side of input to mirror (0 = left, 1 = right, 2 = top, 3 = bottom)\n\t */\n\n\tTHREE.MirrorShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { value: null },\n\t\t\t\"side\": { value: 1 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvUv = uv;\",\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform int side;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvec2 p = vUv;\",\n\t\t\t\"\tif (side == 0){\",\n\t\t\t\"\t\tif (p.x > 0.5) p.x = 1.0 - p.x;\",\n\t\t\t\"\t}else if (side == 1){\",\n\t\t\t\"\t\tif (p.x < 0.5) p.x = 1.0 - p.x;\",\n\t\t\t\"\t}else if (side == 2){\",\n\t\t\t\"\t\tif (p.y < 0.5) p.y = 1.0 - p.y;\",\n\t\t\t\"\t}else if (side == 3){\",\n\t\t\t\"\t\tif (p.y > 0.5) p.y = 1.0 - p.y;\",\n\t\t\t\"\t} \",\n\t\t\t\"\tvec4 color = texture2D(tDiffuse, p);\",\n\t\t\t\"\tgl_FragColor = color;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\t\n\treturn THREE.MirrorShader;\n});\n"]}