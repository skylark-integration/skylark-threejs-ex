{"version":3,"sources":["shaders/MirrorShader.js"],"names":["define","threex","MirrorShader","uniforms","tDiffuse","value","side","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,MAAUD,MAAO,IAErBE,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,8BACA,oBACA,oBACA,gBACA,kBACA,oBACA,sCACA,0BACA,sCACA,0BACA,sCACA,0BACA,sCACA,OACA,yCACA,0BACA,KACFD,KAAK,OAEX,OAAQP,EAAOS,QAAQR,aAAeA","file":"../../shaders/MirrorShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var MirrorShader = {\r\n        uniforms: {\r\n            'tDiffuse': { value: null },\r\n            'side': { value: 1 }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform sampler2D tDiffuse;',\r\n            'uniform int side;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec2 p = vUv;',\r\n            '\\tif (side == 0){',\r\n            '\\t\\tif (p.x > 0.5) p.x = 1.0 - p.x;',\r\n            '\\t}else if (side == 1){',\r\n            '\\t\\tif (p.x < 0.5) p.x = 1.0 - p.x;',\r\n            '\\t}else if (side == 2){',\r\n            '\\t\\tif (p.y < 0.5) p.y = 1.0 - p.y;',\r\n            '\\t}else if (side == 3){',\r\n            '\\t\\tif (p.y > 0.5) p.y = 1.0 - p.y;',\r\n            '\\t} ',\r\n            '\\tvec4 color = texture2D(tDiffuse, p);',\r\n            '\\tgl_FragColor = color;',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return  threex.shaders.MirrorShader = MirrorShader;\r\n});"]}