{"version":3,"sources":["shaders/MirrorShader.js"],"names":["define","uniforms","tDiffuse","value","side","vertexShader","join","fragmentShader"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aAiCA,OA/BIC,UACIC,UAAcC,MAAO,MACrBC,MAAUD,MAAO,IAErBE,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,8BACA,oBACA,oBACA,gBACA,kBACA,oBACA,sCACA,0BACA,sCACA,0BACA,sCACA,0BACA,sCACA,OACA,yCACA,0BACA,KACFD,KAAK","file":"../../shaders/MirrorShader.js","sourcesContent":["define(function () {\n    'use strict';\n    var MirrorShader = {\n        uniforms: {\n            'tDiffuse': { value: null },\n            'side': { value: 1 }\n        },\n        vertexShader: [\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvUv = uv;',\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform sampler2D tDiffuse;',\n            'uniform int side;',\n            'varying vec2 vUv;',\n            'void main() {',\n            '\\tvec2 p = vUv;',\n            '\\tif (side == 0){',\n            '\\t\\tif (p.x > 0.5) p.x = 1.0 - p.x;',\n            '\\t}else if (side == 1){',\n            '\\t\\tif (p.x < 0.5) p.x = 1.0 - p.x;',\n            '\\t}else if (side == 2){',\n            '\\t\\tif (p.y < 0.5) p.y = 1.0 - p.y;',\n            '\\t}else if (side == 3){',\n            '\\t\\tif (p.y > 0.5) p.y = 1.0 - p.y;',\n            '\\t} ',\n            '\\tvec4 color = texture2D(tDiffuse, p);',\n            '\\tgl_FragColor = color;',\n            '}'\n        ].join('\\n')\n    };\n    return  MirrorShader ;\n});"]}