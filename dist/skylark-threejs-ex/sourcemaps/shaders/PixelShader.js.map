{"version":3,"sources":["shaders/PixelShader.js"],"names":["define","threex","PixelShader","uniforms","tDiffuse","value","resolution","pixelSize","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,YAAgBD,MAAO,MACvBE,WAAeF,MAAO,IAE1BG,cACI,0BACA,gBACA,YACA,4EACA,KACFC,KAAK,MACPC,gBACI,8BACA,2BACA,2BACA,0BACA,eACA,qCACA,yCACA,6CACA,KACFD,KAAK,OAEX,OAAOR,EAAOU,QAAQT,YAAcA","file":"../../shaders/PixelShader.js","sourcesContent":["define([\r\n    \"../threex\"\r\n],function (threex) {\r\n    'use strict';\r\n    var PixelShader = {\r\n        uniforms: {\r\n            'tDiffuse': { value: null },\r\n            'resolution': { value: null },\r\n            'pixelSize': { value: 1 }\r\n        },\r\n        vertexShader: [\r\n            'varying highp vec2 vUv;',\r\n            'void main() {',\r\n            'vUv = uv;',\r\n            'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform sampler2D tDiffuse;',\r\n            'uniform float pixelSize;',\r\n            'uniform vec2 resolution;',\r\n            'varying highp vec2 vUv;',\r\n            'void main(){',\r\n            'vec2 dxy = pixelSize / resolution;',\r\n            'vec2 coord = dxy * floor( vUv / dxy );',\r\n            'gl_FragColor = texture2D(tDiffuse, coord);',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.PixelShader = PixelShader;\r\n});"]}