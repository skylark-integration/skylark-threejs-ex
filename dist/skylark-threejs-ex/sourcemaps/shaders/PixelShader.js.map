{"version":3,"sources":["shaders/PixelShader.js"],"names":["define","threex","PixelShader","uniforms","tDiffuse","value","resolution","pixelSize","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,aACF,SAAUC,GACR,aACA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,YAAgBD,MAAO,MACvBE,WAAeF,MAAO,IAE1BG,cACI,0BACA,gBACA,YACA,4EACA,KACFC,KAAK,MACPC,gBACI,8BACA,2BACA,2BACA,0BACA,eACA,qCACA,yCACA,6CACA,KACFD,KAAK,OAEX,OAAOR,EAAOU,QAAQT,YAAcA","file":"../../shaders/PixelShader.js","sourcesContent":["define([\n    \"../threex\"\n],function (threex) {\n    'use strict';\n    var PixelShader = {\n        uniforms: {\n            'tDiffuse': { value: null },\n            'resolution': { value: null },\n            'pixelSize': { value: 1 }\n        },\n        vertexShader: [\n            'varying highp vec2 vUv;',\n            'void main() {',\n            'vUv = uv;',\n            'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n            '}'\n        ].join('\\n'),\n        fragmentShader: [\n            'uniform sampler2D tDiffuse;',\n            'uniform float pixelSize;',\n            'uniform vec2 resolution;',\n            'varying highp vec2 vUv;',\n            'void main(){',\n            'vec2 dxy = pixelSize / resolution;',\n            'vec2 coord = dxy * floor( vUv / dxy );',\n            'gl_FragColor = texture2D(tDiffuse, coord);',\n            '}'\n        ].join('\\n')\n    };\n    return threex.shaders.PixelShader = PixelShader;\n});"]}