{"version":3,"sources":["shaders/SSAOBlurShader.js"],"names":["define","THREE","threex","SSAOBlurShader","uniforms","tDiffuse","value","resolution","Vector2","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aAEA,IAAIC,GACAC,UACIC,UAAcC,MAAO,MACrBC,YAAgBD,MAAO,IAAIL,EAAMO,UAErCC,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,8BACA,2BACA,oBACA,gBACA,2CACA,wBACA,wCACA,0CACA,sEACA,yDACA,QACA,MACA,gEACA,KACFD,KAAK,OAEX,OAAOR,EAAOU,QAAQT,eAAiBA","file":"../../shaders/SSAOBlurShader.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n\r\n    var SSAOBlurShader = {\r\n        uniforms: {\r\n            'tDiffuse': { value: null },\r\n            'resolution': { value: new THREE.Vector2() }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            'uniform sampler2D tDiffuse;',\r\n            'uniform vec2 resolution;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec2 texelSize = ( 1.0 / resolution );',\r\n            '\\tfloat result = 0.0;',\r\n            '\\tfor ( int i = - 2; i <= 2; i ++ ) {',\r\n            '\\t\\tfor ( int j = - 2; j <= 2; j ++ ) {',\r\n            '\\t\\t\\tvec2 offset = ( vec2( float( i ), float( j ) ) ) * texelSize;',\r\n            '\\t\\t\\tresult += texture2D( tDiffuse, vUv + offset ).r;',\r\n            '\\t\\t}',\r\n            '\\t}',\r\n            '\\tgl_FragColor = vec4( vec3( result / ( 5.0 * 5.0 ) ), 1.0 );',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.SSAOBlurShader = SSAOBlurShader;\r\n});"]}