{"version":3,"sources":["shaders/TriangleBlurShader.js"],"names":["define","THREE","threex","TriangleBlurShader","uniforms","texture","value","delta","Vector2","vertexShader","join","fragmentShader","shaders"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aACA,IAAIC,GACAC,UACIC,SAAaC,MAAO,MACpBC,OAAWD,MAAO,IAAIL,EAAMO,QAAQ,EAAG,KAE3CC,cACI,oBACA,gBACA,cACA,8EACA,KACFC,KAAK,MACPC,gBACI,oBACA,0BACA,6BACA,sBACA,oBACA,gBACA,8BACA,uBACA,gCACA,2DACA,yDACA,2CACA,qEACA,uBACA,MACA,kCACA,KACFD,KAAK,OAEX,OAAOR,EAAOU,QAAQT,mBAAqBA","file":"../../shaders/TriangleBlurShader.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    var TriangleBlurShader = {\r\n        uniforms: {\r\n            'texture': { value: null },\r\n            'delta': { value: new THREE.Vector2(1, 1) }\r\n        },\r\n        vertexShader: [\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvUv = uv;',\r\n            '\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n            '}'\r\n        ].join('\\n'),\r\n        fragmentShader: [\r\n            '#include <common>',\r\n            '#define ITERATIONS 10.0',\r\n            'uniform sampler2D texture;',\r\n            'uniform vec2 delta;',\r\n            'varying vec2 vUv;',\r\n            'void main() {',\r\n            '\\tvec4 color = vec4( 0.0 );',\r\n            '\\tfloat total = 0.0;',\r\n            '\\tfloat offset = rand( vUv );',\r\n            '\\tfor ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {',\r\n            '\\t\\tfloat percent = ( t + offset - 0.5 ) / ITERATIONS;',\r\n            '\\t\\tfloat weight = 1.0 - abs( percent );',\r\n            '\\t\\tcolor += texture2D( texture, vUv + delta * percent ) * weight;',\r\n            '\\t\\ttotal += weight;',\r\n            '\\t}',\r\n            '\\tgl_FragColor = color / total;',\r\n            '}'\r\n        ].join('\\n')\r\n    };\r\n    return threex.shaders.TriangleBlurShader = TriangleBlurShader;\r\n});"]}