{"version":3,"sources":["math/ColorConverter.js"],"names":["define","THREE","hsl","ColorConverter","setHSV","color","h","s","v","MathUtils","euclideanModulo","clamp","setHSL","getHSV","target","undefined","console","warn","l","getHSL","setCMYK","c","m","y","k","r","g","b","setRGB","getCMYK","Math","max"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GAoBD,IAEHC,EAoEN,OApFAD,EAAME,gBAELC,OAAQ,SAAWC,EAAOC,EAAGC,EAAGC,GAQ/B,OAJAF,EAAIL,EAAMQ,UAAUC,gBAAiBJ,EAAG,GACxCC,EAAIN,EAAMQ,UAAUE,MAAOJ,EAAG,EAAG,GACjCC,EAAIP,EAAMQ,UAAUE,MAAOH,EAAG,EAAG,GAE1BH,EAAMO,OAAQN,EAAKC,EAAIC,IAAUF,GAAM,EAAIC,GAAMC,GAAM,EAAIF,EAAM,EAAIA,GAAW,GAAJA,IAIpFO,QAEKX,KAEG,SAAiBG,EAAOS,GAkB9B,YAhBgBC,IAAXD,IAEJE,QAAQC,KAAM,0DACdH,GAAWR,EAAG,EAAGC,EAAG,EAAGW,EAAG,IAI3Bb,EAAMc,OAAQjB,GAGdA,EAAIK,GAAOL,EAAIgB,EAAI,GAAQhB,EAAIgB,EAAM,EAAIhB,EAAIgB,EAE7CJ,EAAOR,EAAIJ,EAAII,EACfQ,EAAOP,EAAI,EAAIL,EAAIK,GAAML,EAAIgB,EAAIhB,EAAIK,GACrCO,EAAON,EAAIN,EAAIgB,EAAIhB,EAAIK,EAEhBO,IAQTM,QAAS,SAAWf,EAAOgB,EAAGC,EAAGC,EAAGC,GAEnC,IAAIC,GAAM,EAAIJ,IAAQ,EAAIG,GACtBE,GAAM,EAAIJ,IAAQ,EAAIE,GACtBG,GAAM,EAAIJ,IAAQ,EAAIC,GAE1B,OAAOnB,EAAMuB,OAAQH,EAAGC,EAAGC,IAI5BE,QAAS,SAAWxB,EAAOS,QAEVC,IAAXD,IAEJE,QAAQC,KAAM,2DACdH,GAAWO,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAIjC,IAAIC,EAAIpB,EAAMoB,EACVC,EAAIrB,EAAMqB,EACVC,EAAItB,EAAMsB,EAEVH,EAAI,EAAIM,KAAKC,IAAKN,EAAGC,EAAGC,GACxBN,GAAM,EAAII,EAAID,IAAQ,EAAIA,GAC1BF,GAAM,EAAII,EAAIF,IAAQ,EAAIA,GAC1BD,GAAM,EAAII,EAAIH,IAAQ,EAAIA,GAO9B,OALAV,EAAOO,EAAIA,EACXP,EAAOQ,EAAIA,EACXR,EAAOS,EAAIA,EACXT,EAAOU,EAAIA,EAEJV,IAOFb,EAAME","file":"../../math/ColorConverter.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author bhouston / http://exocortex.com/\n\t * @author zz85 / http://github.com/zz85\n\t */\n\n\tTHREE.ColorConverter = {\n\n\t\tsetHSV: function ( color, h, s, v ) {\n\n\t\t\t// https://gist.github.com/xpansive/1337890#file-index-js\n\n\t\t\th = THREE.MathUtils.euclideanModulo( h, 1 );\n\t\t\ts = THREE.MathUtils.clamp( s, 0, 1 );\n\t\t\tv = THREE.MathUtils.clamp( v, 0, 1 );\n\n\t\t\treturn color.setHSL( h, ( s * v ) / ( ( h = ( 2 - s ) * v ) < 1 ? h : ( 2 - h ) ), h * 0.5 );\n\n\t\t},\n\n\t\tgetHSV: function () {\n\n\t\t\tvar hsl = {};\n\n\t\t\treturn function getHSV( color, target ) {\n\n\t\t\t\tif ( target === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColorConverter: .getHSV() target is now required' );\n\t\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t\t\t}\n\n\t\t\t\tcolor.getHSL( hsl );\n\n\t\t\t\t// based on https://gist.github.com/xpansive/1337890#file-index-js\n\t\t\t\thsl.s *= ( hsl.l < 0.5 ) ? hsl.l : ( 1 - hsl.l );\n\n\t\t\t\ttarget.h = hsl.h;\n\t\t\t\ttarget.s = 2 * hsl.s / ( hsl.l + hsl.s );\n\t\t\t\ttarget.v = hsl.l + hsl.s;\n\n\t\t\t\treturn target;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// where c, m, y, k is between 0 and 1\n\n\t\tsetCMYK: function ( color, c, m, y, k ) {\n\n\t\t\tvar r = ( 1 - c ) * ( 1 - k );\n\t\t\tvar g = ( 1 - m ) * ( 1 - k );\n\t\t\tvar b = ( 1 - y ) * ( 1 - k );\n\n\t\t\treturn color.setRGB( r, g, b );\n\n\t\t},\n\n\t\tgetCMYK: function ( color, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ColorConverter: .getCMYK() target is now required' );\n\t\t\t\ttarget = { c: 0, m: 0, y: 0, k: 0 };\n\n\t\t\t}\n\n\t\t\tvar r = color.r;\n\t\t\tvar g = color.g;\n\t\t\tvar b = color.b;\n\n\t\t\tvar k = 1 - Math.max( r, g, b );\n\t\t\tvar c = ( 1 - r - k ) / ( 1 - k );\n\t\t\tvar m = ( 1 - g - k ) / ( 1 - k );\n\t\t\tvar y = ( 1 - b - k ) / ( 1 - k );\n\n\t\t\ttarget.c = c;\n\t\t\ttarget.m = m;\n\t\t\ttarget.y = y;\n\t\t\ttarget.k = k;\n\n\t\t\treturn target;\n\n\t\t}\n\n\n\t};\n\t\n\treturn THREE.ColorConverter;\n});\n"]}