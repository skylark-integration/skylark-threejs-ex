{"version":3,"sources":["nodes/misc/BumpMapNode.js"],"names":["define","TempNode","FloatNode","FunctionNode","NormalNode","PositionNode","BumpMapNode","value","scale","call","this","toNormalMap","dHdxy_fwd","Nodes","join","derivatives","perturbNormalArb","bumpToNormal","prototype","Object","create","constructor","nodeType","generate","builder","output","isShader","include","format","build","uv","getType","derivativeHeight","normal","position","VIEW","derivativeHeightCode","console","warn","shader","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,mBACA,sBACA,uBACA,0BACA,6BACD,SACCC,EACAC,EACAC,EACAC,EACAC,GAEA,aACA,SAASC,EAAYC,EAAOC,GACxBP,EAASQ,KAAKC,KAAM,MACpBA,KAAKH,MAAQA,EACbG,KAAKF,MAAQA,GAAS,IAAIN,EAAU,GACpCQ,KAAKC,aAAc,EAEH,IACZC,EA0ER,OA3EAN,EAAYO,OAmCJD,UAlCAA,EAAY,IAAIT,GAChB,mEACA,8BACA,8BACA,yDACA,uEACA,uEACA,6BACA,KACFW,KAAK,MAAO,MAAQC,aAAa,IA0B/BC,iBAzBmB,IAAIb,GACvB,uEACA,uFACA,uFACA,yBACA,oCACA,oCACA,qCACA,qDACA,iEACA,yDACA,KACFW,KAAK,OAAQF,IAAcG,aAAa,IActCE,aAbe,IAAId,GACnB,iEACA,6BACA,6BACA,4CACA,0DACA,0DACA,oEACA,KACFW,KAAK,MAAO,MAAQC,aAAa,KAOvCT,EAAYY,UAAYC,OAAOC,OAAOnB,EAASiB,WAC/CZ,EAAYY,UAAUG,YAAcf,EACpCA,EAAYY,UAAUI,SAAW,UACjChB,EAAYY,UAAUK,SAAW,SAAUC,EAASC,GAChD,GAAID,EAAQE,SAAS,YAAa,CAC9B,GAAIhB,KAAKC,YAAa,CAClB,IAAIM,EAAeO,EAAQG,QAAQrB,EAAYO,MAAMI,cACrD,OAAOO,EAAQI,OAAOX,EAAe,KAAOP,KAAKH,MAAMsB,MAAML,EAAS,aAAe,KAAOd,KAAKH,MAAMuB,GAAGD,MAAML,EAAS,MAAQ,KAAOd,KAAKF,MAAMqB,MAAML,EAAS,KAAO,KAAMd,KAAKqB,QAAQP,GAAUC,GAEtM,IAAIO,EAAmBR,EAAQG,QAAQrB,EAAYO,MAAMD,WAAYI,EAAmBQ,EAAQG,QAAQrB,EAAYO,MAAMG,kBAC1HN,KAAKuB,OAASvB,KAAKuB,QAAU,IAAI7B,EACjCM,KAAKwB,SAAWxB,KAAKwB,UAAY,IAAI7B,EAAaA,EAAa8B,MAC/D,IAAIC,EAAuBJ,EAAmB,KAAOtB,KAAKH,MAAMsB,MAAML,EAAS,aAAe,KAAOd,KAAKH,MAAMuB,GAAGD,MAAML,EAAS,MAAQ,KAAOd,KAAKF,MAAMqB,MAAML,EAAS,KAAO,KAClL,OAAOA,EAAQI,OAAOZ,EAAmB,MAAQN,KAAKwB,SAASL,MAAML,EAAS,MAAQ,KAAOd,KAAKuB,OAAOJ,MAAML,EAAS,MAAQ,KAAOY,EAAuB,KAAM1B,KAAKqB,QAAQP,GAAUC,GAI/L,OADAY,QAAQC,KAAK,4CAA8Cd,EAAQe,OAAS,YACrEf,EAAQI,OAAO,cAAelB,KAAKqB,QAAQP,GAAUC,IAGpEnB,EAAYY,UAAUsB,KAAO,SAAUC,GAInC,OAHAxC,EAASiB,UAAUsB,KAAK/B,KAAKC,KAAM+B,GACnC/B,KAAKH,MAAQkC,EAAOlC,MACpBG,KAAKF,MAAQiC,EAAOjC,MACbE,MAEXJ,EAAYY,UAAUwB,OAAS,SAAUC,GACrC,IAAIC,EAAOlC,KAAKmC,YAAYF,GAM5B,OALKC,KACDA,EAAOlC,KAAKoC,eAAeH,IACtBpC,MAAQG,KAAKH,MAAMmC,OAAOC,GAAMI,KACrCH,EAAKpC,MAAQE,KAAKF,MAAMkC,OAAOC,GAAMI,MAElCH,GAEJtC","file":"../../../nodes/misc/BumpMapNode.js","sourcesContent":["define([\r\n    '../core/TempNode',\r\n    '../inputs/FloatNode',\r\n    '../core/FunctionNode',\r\n    '../accessors/NormalNode',\r\n    '../accessors/PositionNode'\r\n], function (\r\n    TempNode, \r\n    FloatNode, \r\n    FunctionNode, \r\n    NormalNode, \r\n    PositionNode\r\n) {\r\n    'use strict';\r\n    function BumpMapNode(value, scale) {\r\n        TempNode.call(this, 'v3');\r\n        this.value = value;\r\n        this.scale = scale || new FloatNode(1);\r\n        this.toNormalMap = false;\r\n    }\r\n    BumpMapNode.Nodes = function () {\r\n        var dHdxy_fwd = new FunctionNode([\r\n            'vec2 dHdxy_fwd( sampler2D bumpMap, vec2 vUv, float bumpScale ) {',\r\n            '\\tvec2 dSTdx = dFdx( vUv );',\r\n            '\\tvec2 dSTdy = dFdy( vUv );',\r\n            '\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;',\r\n            '\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;',\r\n            '\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;',\r\n            '\\treturn vec2( dBx, dBy );',\r\n            '}'\r\n        ].join('\\n'), null, { derivatives: true });\r\n        var perturbNormalArb = new FunctionNode([\r\n            'vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {',\r\n            '\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );',\r\n            '\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );',\r\n            '\\tvec3 vN = surf_norm;',\r\n            '\\tvec3 R1 = cross( vSigmaY, vN );',\r\n            '\\tvec3 R2 = cross( vN, vSigmaX );',\r\n            '\\tfloat fDet = dot( vSigmaX, R1 );',\r\n            '\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );',\r\n            '\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );',\r\n            '\\treturn normalize( abs( fDet ) * surf_norm - vGrad );',\r\n            '}'\r\n        ].join('\\n'), [dHdxy_fwd], { derivatives: true });\r\n        var bumpToNormal = new FunctionNode([\r\n            'vec3 bumpToNormal( sampler2D bumpMap, vec2 uv, float scale ) {',\r\n            '\\tvec2 dSTdx = dFdx( uv );',\r\n            '\\tvec2 dSTdy = dFdy( uv );',\r\n            '\\tfloat Hll = texture2D( bumpMap, uv ).x;',\r\n            '\\tfloat dBx = texture2D( bumpMap, uv + dSTdx ).x - Hll;',\r\n            '\\tfloat dBy = texture2D( bumpMap, uv + dSTdy ).x - Hll;',\r\n            '\\treturn vec3( .5 - ( dBx * scale ), .5 - ( dBy * scale ), 1.0 );',\r\n            '}'\r\n        ].join('\\n'), null, { derivatives: true });\r\n        return {\r\n            dHdxy_fwd: dHdxy_fwd,\r\n            perturbNormalArb: perturbNormalArb,\r\n            bumpToNormal: bumpToNormal\r\n        };\r\n    }();\r\n    BumpMapNode.prototype = Object.create(TempNode.prototype);\r\n    BumpMapNode.prototype.constructor = BumpMapNode;\r\n    BumpMapNode.prototype.nodeType = 'BumpMap';\r\n    BumpMapNode.prototype.generate = function (builder, output) {\r\n        if (builder.isShader('fragment')) {\r\n            if (this.toNormalMap) {\r\n                var bumpToNormal = builder.include(BumpMapNode.Nodes.bumpToNormal);\r\n                return builder.format(bumpToNormal + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.value.uv.build(builder, 'v2') + ', ' + this.scale.build(builder, 'f') + ' )', this.getType(builder), output);\r\n            } else {\r\n                var derivativeHeight = builder.include(BumpMapNode.Nodes.dHdxy_fwd), perturbNormalArb = builder.include(BumpMapNode.Nodes.perturbNormalArb);\r\n                this.normal = this.normal || new NormalNode();\r\n                this.position = this.position || new PositionNode(PositionNode.VIEW);\r\n                var derivativeHeightCode = derivativeHeight + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.value.uv.build(builder, 'v2') + ', ' + this.scale.build(builder, 'f') + ' )';\r\n                return builder.format(perturbNormalArb + '( -' + this.position.build(builder, 'v3') + ', ' + this.normal.build(builder, 'v3') + ', ' + derivativeHeightCode + ' )', this.getType(builder), output);\r\n            }\r\n        } else {\r\n            console.warn('THREE.BumpMapNode is not compatible with ' + builder.shader + ' shader.');\r\n            return builder.format('vec3( 0.0 )', this.getType(builder), output);\r\n        }\r\n    };\r\n    BumpMapNode.prototype.copy = function (source) {\r\n        TempNode.prototype.copy.call(this, source);\r\n        this.value = source.value;\r\n        this.scale = source.scale;\r\n        return this;\r\n    };\r\n    BumpMapNode.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.value = this.value.toJSON(meta).uuid;\r\n            data.scale = this.scale.toJSON(meta).uuid;\r\n        }\r\n        return data;\r\n    };\r\n    return BumpMapNode;\r\n});"]}