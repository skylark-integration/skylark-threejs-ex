{"version":3,"sources":["nodes/math/MathNode.js"],"names":["define","TempNode","MathNode","a","bOrMethod","cOrMethod","method","call","this","b","c","RAD","DEG","EXP","EXP2","LOG","LOG2","SQRT","INV_SQRT","FLOOR","CEIL","NORMALIZE","FRACT","SATURATE","SIN","COS","TAN","ASIN","ACOS","ARCTAN","ABS","SIGN","LENGTH","NEGATE","INVERT","MIN","MAX","MOD","STEP","REFLECT","DISTANCE","DOT","CROSS","POW","MIX","CLAMP","REFRACT","SMOOTHSTEP","FACEFORWARD","prototype","Object","create","constructor","nodeType","getNumInputs","getInputType","builder","getTypeLength","getType","generate","output","al","bl","cl","inputType","format","build","params","push","numInputs","length","Error","join","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,oBACD,SACCC,GAEA,aACA,SAASC,EAASC,EAAGC,EAAWC,EAAWC,GACvCL,EAASM,KAAKC,MACdA,KAAKL,EAAIA,EACY,iBAAdC,EAAyBI,KAAKC,EAAIL,EAAYE,EAASF,EACzC,iBAAdC,EAAyBG,KAAKE,EAAIL,EAAYC,EAASD,EAC9DG,KAAKF,OAASA,EA+JlB,OA7JAJ,EAASS,IAAM,UACfT,EAASU,IAAM,UACfV,EAASW,IAAM,MACfX,EAASY,KAAO,OAChBZ,EAASa,IAAM,MACfb,EAASc,KAAO,OAChBd,EAASe,KAAO,OAChBf,EAASgB,SAAW,cACpBhB,EAASiB,MAAQ,QACjBjB,EAASkB,KAAO,OAChBlB,EAASmB,UAAY,YACrBnB,EAASoB,MAAQ,QACjBpB,EAASqB,SAAW,WACpBrB,EAASsB,IAAM,MACftB,EAASuB,IAAM,MACfvB,EAASwB,IAAM,MACfxB,EAASyB,KAAO,OAChBzB,EAAS0B,KAAO,OAChB1B,EAAS2B,OAAS,OAClB3B,EAAS4B,IAAM,MACf5B,EAAS6B,KAAO,OAChB7B,EAAS8B,OAAS,SAClB9B,EAAS+B,OAAS,SAClB/B,EAASgC,OAAS,SAClBhC,EAASiC,IAAM,MACfjC,EAASkC,IAAM,MACflC,EAASmC,IAAM,MACfnC,EAASoC,KAAO,OAChBpC,EAASqC,QAAU,UACnBrC,EAASsC,SAAW,WACpBtC,EAASuC,IAAM,MACfvC,EAASwC,MAAQ,QACjBxC,EAASyC,IAAM,MACfzC,EAAS0C,IAAM,MACf1C,EAAS2C,MAAQ,QACjB3C,EAAS4C,QAAU,UACnB5C,EAAS6C,WAAa,aACtB7C,EAAS8C,YAAc,cACvB9C,EAAS+C,UAAYC,OAAOC,OAAOlD,EAASgD,WAC5C/C,EAAS+C,UAAUG,YAAclD,EACjCA,EAAS+C,UAAUI,SAAW,OAC9BnD,EAAS+C,UAAUK,aAAe,WAC9B,OAAQ9C,KAAKF,QACb,KAAKJ,EAAS0C,IACd,KAAK1C,EAAS2C,MACd,KAAK3C,EAAS4C,QACd,KAAK5C,EAAS6C,WACd,KAAK7C,EAAS8C,YACV,OAAO,EACX,KAAK9C,EAASiC,IACd,KAAKjC,EAASkC,IACd,KAAKlC,EAASmC,IACd,KAAKnC,EAASoC,KACd,KAAKpC,EAASqC,QACd,KAAKrC,EAASsC,SACd,KAAKtC,EAASuC,IACd,KAAKvC,EAASwC,MACd,KAAKxC,EAASyC,IACV,OAAO,EACX,QACI,OAAO,IAGfzC,EAAS+C,UAAUM,aAAe,SAAUC,GACxC,IAAIrD,EAAIqD,EAAQC,cAAcjD,KAAKL,EAAEuD,QAAQF,IACzC/C,EAAID,KAAKC,EAAI+C,EAAQC,cAAcjD,KAAKC,EAAEiD,QAAQF,IAAY,EAC9D9C,EAAIF,KAAKE,EAAI8C,EAAQC,cAAcjD,KAAKE,EAAEgD,QAAQF,IAAY,EAClE,OAAIrD,EAAIM,GAAKN,EAAIO,EACNF,KAAKL,EAAEuD,QAAQF,GACf/C,EAAIC,EACJF,KAAKC,EAAEiD,QAAQF,GAEnBhD,KAAKE,EAAEgD,QAAQF,IAE1BtD,EAAS+C,UAAUS,QAAU,SAAUF,GACnC,OAAQhD,KAAKF,QACb,KAAKJ,EAAS8B,OACd,KAAK9B,EAASsC,SACd,KAAKtC,EAASuC,IACV,MAAO,IACX,KAAKvC,EAASwC,MACV,MAAO,KAEX,OAAOlC,KAAK+C,aAAaC,IAE7BtD,EAAS+C,UAAUU,SAAW,SAAUH,EAASI,GAC7C,IAAIzD,EAAGM,EAAGC,EAAGmD,EAAKrD,KAAKL,EAAIqD,EAAQC,cAAcjD,KAAKL,EAAEuD,QAAQF,IAAY,EAAGM,EAAKtD,KAAKC,EAAI+C,EAAQC,cAAcjD,KAAKC,EAAEiD,QAAQF,IAAY,EAAGO,EAAKvD,KAAKE,EAAI8C,EAAQC,cAAcjD,KAAKE,EAAEgD,QAAQF,IAAY,EAAGQ,EAAYxD,KAAK+C,aAAaC,GAAUH,EAAW7C,KAAKkD,QAAQF,GACnR,OAAQhD,KAAKF,QACb,KAAKJ,EAAS+B,OACV,OAAOuB,EAAQS,OAAO,MAAQzD,KAAKL,EAAE+D,MAAMV,EAASQ,GAAa,KAAMA,EAAWJ,GACtF,KAAK1D,EAASgC,OACV,OAAOsB,EAAQS,OAAO,WAAazD,KAAKL,EAAE+D,MAAMV,EAASQ,GAAa,KAAMA,EAAWJ,GAC3F,KAAK1D,EAASwC,MACVvC,EAAIK,KAAKL,EAAE+D,MAAMV,EAAS,MAC1B/C,EAAID,KAAKC,EAAEyD,MAAMV,EAAS,MAC1B,MACJ,KAAKtD,EAASoC,KACVnC,EAAIK,KAAKL,EAAE+D,MAAMV,EAAgB,IAAPK,EAAW,IAAMG,GAC3CvD,EAAID,KAAKC,EAAEyD,MAAMV,EAASQ,GAC1B,MACJ,KAAK9D,EAASiC,IACd,KAAKjC,EAASkC,IACd,KAAKlC,EAASmC,IACVlC,EAAIK,KAAKL,EAAE+D,MAAMV,EAASQ,GAC1BvD,EAAID,KAAKC,EAAEyD,MAAMV,EAAgB,IAAPM,EAAW,IAAME,GAC3C,MACJ,KAAK9D,EAAS4C,QACV3C,EAAIK,KAAKL,EAAE+D,MAAMV,EAASQ,GAC1BvD,EAAID,KAAKC,EAAEyD,MAAMV,EAASQ,GAC1BtD,EAAIF,KAAKE,EAAEwD,MAAMV,EAAS,KAC1B,MACJ,KAAKtD,EAAS0C,IACVzC,EAAIK,KAAKL,EAAE+D,MAAMV,EAASQ,GAC1BvD,EAAID,KAAKC,EAAEyD,MAAMV,EAASQ,GAC1BtD,EAAIF,KAAKE,EAAEwD,MAAMV,EAAgB,IAAPO,EAAW,IAAMC,GAC3C,MACJ,QACI7D,EAAIK,KAAKL,EAAE+D,MAAMV,EAASQ,GACtBxD,KAAKC,IACLA,EAAID,KAAKC,EAAEyD,MAAMV,EAASQ,IAC1BxD,KAAKE,IACLA,EAAIF,KAAKE,EAAEwD,MAAMV,EAASQ,IAGlC,IAAIG,KACJA,EAAOC,KAAKjE,GACRM,GACA0D,EAAOC,KAAK3D,GACZC,GACAyD,EAAOC,KAAK1D,GAChB,IAAI2D,EAAY7D,KAAK8C,aAAaE,GAClC,GAAIW,EAAOG,SAAWD,EAClB,MAAME,sCAAuC/D,KAAKF,oBAAsB+D,gBAA0BF,EAAOG,WAE7G,OAAOd,EAAQS,OAAOzD,KAAKF,OAAS,KAAO6D,EAAOK,KAAK,MAAQ,KAAMnB,EAAUO,IAEnF1D,EAAS+C,UAAUwB,KAAO,SAAUC,GAMhC,OALAzE,EAASgD,UAAUwB,KAAKlE,KAAKC,KAAMkE,GACnClE,KAAKL,EAAIuE,EAAOvE,EAChBK,KAAKC,EAAIiE,EAAOjE,EAChBD,KAAKE,EAAIgE,EAAOhE,EAChBF,KAAKF,OAASoE,EAAOpE,OACdE,MAEXN,EAAS+C,UAAU0B,OAAS,SAAUC,GAClC,IAAIC,EAAOrE,KAAKsE,YAAYF,GAU5B,OATKC,KACDA,EAAOrE,KAAKuE,eAAeH,IACtBzE,EAAIK,KAAKL,EAAEwE,OAAOC,GAAMI,KACzBxE,KAAKC,IACLoE,EAAKpE,EAAID,KAAKC,EAAEkE,OAAOC,GAAMI,MAC7BxE,KAAKE,IACLmE,EAAKnE,EAAIF,KAAKE,EAAEiE,OAAOC,GAAMI,MACjCH,EAAKvE,OAASE,KAAKF,QAEhBuE,GAEJ3E","file":"../../../nodes/math/MathNode.js","sourcesContent":["define([\r\n    '../core/TempNode'\r\n], function (\r\n    TempNode\r\n) {\r\n    'use strict';\r\n    function MathNode(a, bOrMethod, cOrMethod, method) {\r\n        TempNode.call(this);\r\n        this.a = a;\r\n        typeof bOrMethod !== 'string' ? this.b = bOrMethod : method = bOrMethod;\r\n        typeof cOrMethod !== 'string' ? this.c = cOrMethod : method = cOrMethod;\r\n        this.method = method;\r\n    }\r\n    MathNode.RAD = 'radians';\r\n    MathNode.DEG = 'degrees';\r\n    MathNode.EXP = 'exp';\r\n    MathNode.EXP2 = 'exp2';\r\n    MathNode.LOG = 'log';\r\n    MathNode.LOG2 = 'log2';\r\n    MathNode.SQRT = 'sqrt';\r\n    MathNode.INV_SQRT = 'inversesqrt';\r\n    MathNode.FLOOR = 'floor';\r\n    MathNode.CEIL = 'ceil';\r\n    MathNode.NORMALIZE = 'normalize';\r\n    MathNode.FRACT = 'fract';\r\n    MathNode.SATURATE = 'saturate';\r\n    MathNode.SIN = 'sin';\r\n    MathNode.COS = 'cos';\r\n    MathNode.TAN = 'tan';\r\n    MathNode.ASIN = 'asin';\r\n    MathNode.ACOS = 'acos';\r\n    MathNode.ARCTAN = 'atan';\r\n    MathNode.ABS = 'abs';\r\n    MathNode.SIGN = 'sign';\r\n    MathNode.LENGTH = 'length';\r\n    MathNode.NEGATE = 'negate';\r\n    MathNode.INVERT = 'invert';\r\n    MathNode.MIN = 'min';\r\n    MathNode.MAX = 'max';\r\n    MathNode.MOD = 'mod';\r\n    MathNode.STEP = 'step';\r\n    MathNode.REFLECT = 'reflect';\r\n    MathNode.DISTANCE = 'distance';\r\n    MathNode.DOT = 'dot';\r\n    MathNode.CROSS = 'cross';\r\n    MathNode.POW = 'pow';\r\n    MathNode.MIX = 'mix';\r\n    MathNode.CLAMP = 'clamp';\r\n    MathNode.REFRACT = 'refract';\r\n    MathNode.SMOOTHSTEP = 'smoothstep';\r\n    MathNode.FACEFORWARD = 'faceforward';\r\n    MathNode.prototype = Object.create(TempNode.prototype);\r\n    MathNode.prototype.constructor = MathNode;\r\n    MathNode.prototype.nodeType = 'Math';\r\n    MathNode.prototype.getNumInputs = function () {\r\n        switch (this.method) {\r\n        case MathNode.MIX:\r\n        case MathNode.CLAMP:\r\n        case MathNode.REFRACT:\r\n        case MathNode.SMOOTHSTEP:\r\n        case MathNode.FACEFORWARD:\r\n            return 3;\r\n        case MathNode.MIN:\r\n        case MathNode.MAX:\r\n        case MathNode.MOD:\r\n        case MathNode.STEP:\r\n        case MathNode.REFLECT:\r\n        case MathNode.DISTANCE:\r\n        case MathNode.DOT:\r\n        case MathNode.CROSS:\r\n        case MathNode.POW:\r\n            return 2;\r\n        default:\r\n            return 1;\r\n        }\r\n    };\r\n    MathNode.prototype.getInputType = function (builder) {\r\n        var a = builder.getTypeLength(this.a.getType(builder));\r\n        var b = this.b ? builder.getTypeLength(this.b.getType(builder)) : 0;\r\n        var c = this.c ? builder.getTypeLength(this.c.getType(builder)) : 0;\r\n        if (a > b && a > c) {\r\n            return this.a.getType(builder);\r\n        } else if (b > c) {\r\n            return this.b.getType(builder);\r\n        }\r\n        return this.c.getType(builder);\r\n    };\r\n    MathNode.prototype.getType = function (builder) {\r\n        switch (this.method) {\r\n        case MathNode.LENGTH:\r\n        case MathNode.DISTANCE:\r\n        case MathNode.DOT:\r\n            return 'f';\r\n        case MathNode.CROSS:\r\n            return 'v3';\r\n        }\r\n        return this.getInputType(builder);\r\n    };\r\n    MathNode.prototype.generate = function (builder, output) {\r\n        var a, b, c, al = this.a ? builder.getTypeLength(this.a.getType(builder)) : 0, bl = this.b ? builder.getTypeLength(this.b.getType(builder)) : 0, cl = this.c ? builder.getTypeLength(this.c.getType(builder)) : 0, inputType = this.getInputType(builder), nodeType = this.getType(builder);\r\n        switch (this.method) {\r\n        case MathNode.NEGATE:\r\n            return builder.format('( -' + this.a.build(builder, inputType) + ' )', inputType, output);\r\n        case MathNode.INVERT:\r\n            return builder.format('( 1.0 - ' + this.a.build(builder, inputType) + ' )', inputType, output);\r\n        case MathNode.CROSS:\r\n            a = this.a.build(builder, 'v3');\r\n            b = this.b.build(builder, 'v3');\r\n            break;\r\n        case MathNode.STEP:\r\n            a = this.a.build(builder, al === 1 ? 'f' : inputType);\r\n            b = this.b.build(builder, inputType);\r\n            break;\r\n        case MathNode.MIN:\r\n        case MathNode.MAX:\r\n        case MathNode.MOD:\r\n            a = this.a.build(builder, inputType);\r\n            b = this.b.build(builder, bl === 1 ? 'f' : inputType);\r\n            break;\r\n        case MathNode.REFRACT:\r\n            a = this.a.build(builder, inputType);\r\n            b = this.b.build(builder, inputType);\r\n            c = this.c.build(builder, 'f');\r\n            break;\r\n        case MathNode.MIX:\r\n            a = this.a.build(builder, inputType);\r\n            b = this.b.build(builder, inputType);\r\n            c = this.c.build(builder, cl === 1 ? 'f' : inputType);\r\n            break;\r\n        default:\r\n            a = this.a.build(builder, inputType);\r\n            if (this.b)\r\n                b = this.b.build(builder, inputType);\r\n            if (this.c)\r\n                c = this.c.build(builder, inputType);\r\n            break;\r\n        }\r\n        var params = [];\r\n        params.push(a);\r\n        if (b)\r\n            params.push(b);\r\n        if (c)\r\n            params.push(c);\r\n        var numInputs = this.getNumInputs(builder);\r\n        if (params.length !== numInputs) {\r\n            throw Error(`Arguments not match used in \"${ this.method }\". Require ${ numInputs }, currently ${ params.length }.`);\r\n        }\r\n        return builder.format(this.method + '( ' + params.join(', ') + ' )', nodeType, output);\r\n    };\r\n    MathNode.prototype.copy = function (source) {\r\n        TempNode.prototype.copy.call(this, source);\r\n        this.a = source.a;\r\n        this.b = source.b;\r\n        this.c = source.c;\r\n        this.method = source.method;\r\n        return this;\r\n    };\r\n    MathNode.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.a = this.a.toJSON(meta).uuid;\r\n            if (this.b)\r\n                data.b = this.b.toJSON(meta).uuid;\r\n            if (this.c)\r\n                data.c = this.c.toJSON(meta).uuid;\r\n            data.method = this.method;\r\n        }\r\n        return data;\r\n    };\r\n    return MathNode;\r\n});"]}