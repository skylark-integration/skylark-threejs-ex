{"version":3,"sources":["nodes/effects/BlurNode.js"],"names":["define","THREE","TempNode","FunctionNode","FloatNode","Vector2Node","UVNode","BlurNode","value","uv","radius","size","call","this","blurX","blurY","horizontal","vertical","Nodes","join","prototype","Object","create","constructor","nodeType","updateFrame","x","y","image","width","height","generate","builder","output","isShader","code","blurCode","include","push","build","length","format","getType","console","warn","shader","copy","source","undefined","Vector2","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":"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","file":"../../../nodes/effects/BlurNode.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    '../core/TempNode',\r\n    '../core/FunctionNode',\r\n    '../inputs/FloatNode',\r\n    '../inputs/Vector2Node',\r\n    '../accessors/UVNode'\r\n], function (\r\n    THREE, \r\n    TempNode, \r\n    FunctionNode, \r\n    FloatNode, \r\n    Vector2Node, \r\n    UVNode\r\n) {\r\n    'use strict';\r\n    function BlurNode(value, uv, radius, size) {\r\n        TempNode.call(this, 'v4');\r\n        this.value = value;\r\n        this.uv = uv || new UVNode();\r\n        this.radius = radius || new Vector2Node(1, 1);\r\n        this.size = size;\r\n        this.blurX = true;\r\n        this.blurY = true;\r\n        this.horizontal = new FloatNode(1 / 64);\r\n        this.vertical = new FloatNode(1 / 64);\r\n    }\r\n    BlurNode.Nodes = function () {\r\n        var blurX = new FunctionNode([\r\n            'vec4 blurX( sampler2D texture, vec2 uv, float s ) {',\r\n            '\\tvec4 sum = vec4( 0.0 );',\r\n            '\\tsum += texture2D( texture, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y ) ) * 0.1633;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;',\r\n            '\\treturn sum * .667;',\r\n            '}'\r\n        ].join('\\n'));\r\n        var blurY = new FunctionNode([\r\n            'vec4 blurY( sampler2D texture, vec2 uv, float s ) {',\r\n            '\\tvec4 sum = vec4( 0.0 );',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y ) ) * 0.1633;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;',\r\n            '\\tsum += texture2D( texture, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;',\r\n            '\\treturn sum * .667;',\r\n            '}'\r\n        ].join('\\n'));\r\n        return {\r\n            blurX: blurX,\r\n            blurY: blurY\r\n        };\r\n    }();\r\n    BlurNode.prototype = Object.create(TempNode.prototype);\r\n    BlurNode.prototype.constructor = BlurNode;\r\n    BlurNode.prototype.nodeType = 'Blur';\r\n    BlurNode.prototype.updateFrame = function () {\r\n        if (this.size) {\r\n            this.horizontal.value = this.radius.x / this.size.x;\r\n            this.vertical.value = this.radius.y / this.size.y;\r\n        } else if (this.value.value && this.value.value.image) {\r\n            var image = this.value.value.image;\r\n            this.horizontal.value = this.radius.x / image.width;\r\n            this.vertical.value = this.radius.y / image.height;\r\n        }\r\n    };\r\n    BlurNode.prototype.generate = function (builder, output) {\r\n        if (builder.isShader('fragment')) {\r\n            var blurCode = [], code;\r\n            var blurX = builder.include(BlurNode.Nodes.blurX), blurY = builder.include(BlurNode.Nodes.blurY);\r\n            if (this.blurX) {\r\n                blurCode.push(blurX + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.horizontal.build(builder, 'f') + ' )');\r\n            }\r\n            if (this.blurY) {\r\n                blurCode.push(blurY + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.vertical.build(builder, 'f') + ' )');\r\n            }\r\n            if (blurCode.length == 2)\r\n                code = '( ' + blurCode.join(' + ') + ' / 2.0 )';\r\n            else if (blurCode.length)\r\n                code = '( ' + blurCode[0] + ' )';\r\n            else\r\n                code = 'vec4( 0.0 )';\r\n            return builder.format(code, this.getType(builder), output);\r\n        } else {\r\n            console.warn('THREE.BlurNode is not compatible with ' + builder.shader + ' shader.');\r\n            return builder.format('vec4( 0.0 )', this.getType(builder), output);\r\n        }\r\n    };\r\n    BlurNode.prototype.copy = function (source) {\r\n        TempNode.prototype.copy.call(this, source);\r\n        this.value = source.value;\r\n        this.uv = source.uv;\r\n        this.radius = source.radius;\r\n        if (source.size !== undefined)\r\n            this.size = new THREE.Vector2(source.size.x, source.size.y);\r\n        this.blurX = source.blurX;\r\n        this.blurY = source.blurY;\r\n        return this;\r\n    };\r\n    BlurNode.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.value = this.value.toJSON(meta).uuid;\r\n            data.uv = this.uv.toJSON(meta).uuid;\r\n            data.radius = this.radius.toJSON(meta).uuid;\r\n            if (this.size)\r\n                data.size = {\r\n                    x: this.size.x,\r\n                    y: this.size.y\r\n                };\r\n            data.blurX = this.blurX;\r\n            data.blurY = this.blurY;\r\n        }\r\n        return data;\r\n    };\r\n    return BlurNode;\r\n});"]}