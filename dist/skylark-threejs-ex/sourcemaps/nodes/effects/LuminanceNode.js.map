{"version":3,"sources":["nodes/effects/LuminanceNode.js"],"names":["define","TempNode","ConstNode","FunctionNode","LuminanceNode","rgb","call","this","LUMA","Nodes","luminance","join","prototype","Object","create","constructor","nodeType","generate","builder","output","include","format","build","getType","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,mBACA,oBACA,wBACD,SACCC,EACAC,EACAC,GAEA,aACA,SAASC,EAAcC,GACnBJ,EAASK,KAAKC,KAAM,KACpBA,KAAKF,IAAMA,EAEO,IACdG,EA+BR,OAhCAJ,EAAcK,OAQND,KAPAA,EAAO,IAAIN,EAAU,4CAQrBQ,UAPY,IAAIP,GAChB,gCACA,6BACA,KACFQ,KAAK,OAAQH,KAMnBJ,EAAcQ,UAAYC,OAAOC,OAAOb,EAASW,WACjDR,EAAcQ,UAAUG,YAAcX,EACtCA,EAAcQ,UAAUI,SAAW,YACnCZ,EAAcQ,UAAUK,SAAW,SAAUC,EAASC,GAClD,IAAIT,EAAYQ,EAAQE,QAAQhB,EAAcK,MAAMC,WACpD,OAAOQ,EAAQG,OAAOX,EAAY,KAAOH,KAAKF,IAAIiB,MAAMJ,EAAS,MAAQ,KAAMX,KAAKgB,QAAQL,GAAUC,IAE1Gf,EAAcQ,UAAUY,KAAO,SAAUC,GAGrC,OAFAxB,EAASW,UAAUY,KAAKlB,KAAKC,KAAMkB,GACnClB,KAAKF,IAAMoB,EAAOpB,IACXE,MAEXH,EAAcQ,UAAUc,OAAS,SAAUC,GACvC,IAAIC,EAAOrB,KAAKsB,YAAYF,GAK5B,OAJKC,KACDA,EAAOrB,KAAKuB,eAAeH,IACtBtB,IAAME,KAAKF,IAAIqB,OAAOC,GAAMI,MAE9BH,GAEJxB","file":"../../../nodes/effects/LuminanceNode.js","sourcesContent":["define([\n    '../core/TempNode',\n    '../core/ConstNode',\n    '../core/FunctionNode'\n], function (\n    TempNode, \n    ConstNode, \n    FunctionNode\n) {\n    'use strict';\n    function LuminanceNode(rgb) {\n        TempNode.call(this, 'f');\n        this.rgb = rgb;\n    }\n    LuminanceNode.Nodes = function () {\n        var LUMA = new ConstNode('vec3 LUMA vec3( 0.2125, 0.7154, 0.0721 )');\n        var luminance = new FunctionNode([\n            'float luminance( vec3 rgb ) {',\n            '\\treturn dot( rgb, LUMA );',\n            '}'\n        ].join('\\n'), [LUMA]);\n        return {\n            LUMA: LUMA,\n            luminance: luminance\n        };\n    }();\n    LuminanceNode.prototype = Object.create(TempNode.prototype);\n    LuminanceNode.prototype.constructor = LuminanceNode;\n    LuminanceNode.prototype.nodeType = 'Luminance';\n    LuminanceNode.prototype.generate = function (builder, output) {\n        var luminance = builder.include(LuminanceNode.Nodes.luminance);\n        return builder.format(luminance + '( ' + this.rgb.build(builder, 'v3') + ' )', this.getType(builder), output);\n    };\n    LuminanceNode.prototype.copy = function (source) {\n        TempNode.prototype.copy.call(this, source);\n        this.rgb = source.rgb;\n        return this;\n    };\n    LuminanceNode.prototype.toJSON = function (meta) {\n        var data = this.getJSONNode(meta);\n        if (!data) {\n            data = this.createJSONNode(meta);\n            data.rgb = this.rgb.toJSON(meta).uuid;\n        }\n        return data;\n    };\n    return LuminanceNode;\n});"]}