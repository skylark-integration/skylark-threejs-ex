{"version":3,"sources":["nodes/accessors/LightNode.js"],"names":["define","TempNode","LightNode","scope","call","this","shared","TOTAL","prototype","Object","create","constructor","nodeType","generate","builder","output","isCache","format","type","console","warn","copy","source","toJSON","meta","data","getJSONNode","createJSONNode"],"mappings":";;;;;;;AAAAA,QACI,oBACD,SAAUC,GACT,aACA,SAASC,EAAUC,GACfF,EAASG,KAAKC,KAAM,MAAQC,QAAQ,IACpCD,KAAKF,MAAQA,GAASD,EAAUK,MA2BpC,OAzBAL,EAAUK,MAAQ,QAClBL,EAAUM,UAAYC,OAAOC,OAAOT,EAASO,WAC7CN,EAAUM,UAAUG,YAAcT,EAClCA,EAAUM,UAAUI,SAAW,QAC/BV,EAAUM,UAAUK,SAAW,SAAUC,EAASC,GAC9C,OAAID,EAAQE,QAAQ,SACTF,EAAQG,OAAO,+BAAgCZ,KAAKa,KAAMH,IAEjEI,QAAQC,KAAK,0DACNN,EAAQG,OAAO,cAAeZ,KAAKa,KAAMH,KAGxDb,EAAUM,UAAUa,KAAO,SAAUC,GAGjC,OAFArB,EAASO,UAAUa,KAAKjB,KAAKC,KAAMiB,GACnCjB,KAAKF,MAAQmB,EAAOnB,MACbE,MAEXH,EAAUM,UAAUe,OAAS,SAAUC,GACnC,IAAIC,EAAOpB,KAAKqB,YAAYF,GAK5B,OAJKC,KACDA,EAAOpB,KAAKsB,eAAeH,IACtBrB,MAAQE,KAAKF,OAEfsB,GAEJvB","file":"../../../nodes/accessors/LightNode.js","sourcesContent":["define([\n    '../core/TempNode'\n], function (TempNode) {\n    'use strict';\n    function LightNode(scope) {\n        TempNode.call(this, 'v3', { shared: false });\n        this.scope = scope || LightNode.TOTAL;\n    }\n    LightNode.TOTAL = 'total';\n    LightNode.prototype = Object.create(TempNode.prototype);\n    LightNode.prototype.constructor = LightNode;\n    LightNode.prototype.nodeType = 'Light';\n    LightNode.prototype.generate = function (builder, output) {\n        if (builder.isCache('light')) {\n            return builder.format('reflectedLight.directDiffuse', this.type, output);\n        } else {\n            console.warn('THREE.LightNode is only compatible in \"light\" channel.');\n            return builder.format('vec3( 0.0 )', this.type, output);\n        }\n    };\n    LightNode.prototype.copy = function (source) {\n        TempNode.prototype.copy.call(this, source);\n        this.scope = source.scope;\n        return this;\n    };\n    LightNode.prototype.toJSON = function (meta) {\n        var data = this.getJSONNode(meta);\n        if (!data) {\n            data = this.createJSONNode(meta);\n            data.scope = this.scope;\n        }\n        return data;\n    };\n    return LightNode;\n});"]}