{"version":3,"sources":["nodes/accessors/PositionNode.js"],"names":["define","TempNode","NodeLib","PositionNode","scope","call","this","LOCAL","WORLD","VIEW","PROJECTION","prototype","Object","create","constructor","nodeType","getType","type","getShared","generate","builder","output","result","isShader","requires","position","worldPosition","format","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","addKeyword"],"mappings":";;;;;;;AAAAA,QACI,mBACA,mBACD,SAAUC,EAAUC,GACnB,aACA,SAASC,EAAaC,GAClBH,EAASI,KAAKC,KAAM,MACpBA,KAAKF,MAAQA,GAASD,EAAaI,MA0EvC,OAxEAJ,EAAaI,MAAQ,QACrBJ,EAAaK,MAAQ,QACrBL,EAAaM,KAAO,OACpBN,EAAaO,WAAa,aAC1BP,EAAaQ,UAAYC,OAAOC,OAAOZ,EAASU,WAChDR,EAAaQ,UAAUG,YAAcX,EACrCA,EAAaQ,UAAUI,SAAW,WAClCZ,EAAaQ,UAAUK,QAAU,WAC7B,OAAQV,KAAKF,OACb,KAAKD,EAAaO,WACd,MAAO,KAEX,OAAOJ,KAAKW,MAEhBd,EAAaQ,UAAUO,UAAY,WAC/B,OAAQZ,KAAKF,OACb,KAAKD,EAAaI,MAClB,KAAKJ,EAAaK,MACd,OAAO,EAEX,OAAO,GAEXL,EAAaQ,UAAUQ,SAAW,SAAUC,EAASC,GACjD,IAAIC,EACJ,OAAQhB,KAAKF,OACb,KAAKD,EAAaI,MACVa,EAAQG,SAAS,UACjBD,EAAS,eAETF,EAAQI,SAASC,UAAW,EAC5BH,EAAS,aAEb,MACJ,KAAKnB,EAAaK,MACd,GAAIY,EAAQG,SAAS,UACjB,MAAO,iDAEPH,EAAQI,SAASE,eAAgB,EACjCJ,EAAS,aAEb,MACJ,KAAKnB,EAAaM,KACda,EAASF,EAAQG,SAAS,UAAY,kBAAoB,gBAC1D,MACJ,KAAKpB,EAAaO,WACdY,EAASF,EAAQG,SAAS,UAAY,iEAAmE,cAG7G,OAAOH,EAAQO,OAAOL,EAAQhB,KAAKU,QAAQI,GAAUC,IAEzDlB,EAAaQ,UAAUiB,KAAO,SAAUC,GAGpC,OAFA5B,EAASU,UAAUiB,KAAKvB,KAAKC,KAAMuB,GACnCvB,KAAKF,MAAQyB,EAAOzB,MACbE,MAEXH,EAAaQ,UAAUmB,OAAS,SAAUC,GACtC,IAAIC,EAAO1B,KAAK2B,YAAYF,GAK5B,OAJKC,KACDA,EAAO1B,KAAK4B,eAAeH,IACtB3B,MAAQE,KAAKF,OAEf4B,GAEX9B,EAAQiC,WAAW,WAAY,WAC3B,OAAO,IAAIhC,IAEfD,EAAQiC,WAAW,gBAAiB,WAChC,OAAO,IAAIhC,EAAaA,EAAaK,SAEzCN,EAAQiC,WAAW,eAAgB,WAC/B,OAAO,IAAIhC,EAAaA,EAAaM,QAElCN","file":"../../../nodes/accessors/PositionNode.js","sourcesContent":["define([\r\n    '../core/TempNode',\r\n    '../core/NodeLib'\r\n], function (TempNode, NodeLib) {\r\n    'use strict';\r\n    function PositionNode(scope) {\r\n        TempNode.call(this, 'v3');\r\n        this.scope = scope || PositionNode.LOCAL;\r\n    }\r\n    PositionNode.LOCAL = 'local';\r\n    PositionNode.WORLD = 'world';\r\n    PositionNode.VIEW = 'view';\r\n    PositionNode.PROJECTION = 'projection';\r\n    PositionNode.prototype = Object.create(TempNode.prototype);\r\n    PositionNode.prototype.constructor = PositionNode;\r\n    PositionNode.prototype.nodeType = 'Position';\r\n    PositionNode.prototype.getType = function () {\r\n        switch (this.scope) {\r\n        case PositionNode.PROJECTION:\r\n            return 'v4';\r\n        }\r\n        return this.type;\r\n    };\r\n    PositionNode.prototype.getShared = function () {\r\n        switch (this.scope) {\r\n        case PositionNode.LOCAL:\r\n        case PositionNode.WORLD:\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    PositionNode.prototype.generate = function (builder, output) {\r\n        var result;\r\n        switch (this.scope) {\r\n        case PositionNode.LOCAL:\r\n            if (builder.isShader('vertex')) {\r\n                result = 'transformed';\r\n            } else {\r\n                builder.requires.position = true;\r\n                result = 'vPosition';\r\n            }\r\n            break;\r\n        case PositionNode.WORLD:\r\n            if (builder.isShader('vertex')) {\r\n                return '( modelMatrix * vec4( transformed, 1.0 ) ).xyz';\r\n            } else {\r\n                builder.requires.worldPosition = true;\r\n                result = 'vWPosition';\r\n            }\r\n            break;\r\n        case PositionNode.VIEW:\r\n            result = builder.isShader('vertex') ? '-mvPosition.xyz' : 'vViewPosition';\r\n            break;\r\n        case PositionNode.PROJECTION:\r\n            result = builder.isShader('vertex') ? '( projectionMatrix * modelViewMatrix * vec4( position, 1.0 ) )' : 'vec4( 0.0 )';\r\n            break;\r\n        }\r\n        return builder.format(result, this.getType(builder), output);\r\n    };\r\n    PositionNode.prototype.copy = function (source) {\r\n        TempNode.prototype.copy.call(this, source);\r\n        this.scope = source.scope;\r\n        return this;\r\n    };\r\n    PositionNode.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.scope = this.scope;\r\n        }\r\n        return data;\r\n    };\r\n    NodeLib.addKeyword('position', function () {\r\n        return new PositionNode();\r\n    });\r\n    NodeLib.addKeyword('worldPosition', function () {\r\n        return new PositionNode(PositionNode.WORLD);\r\n    });\r\n    NodeLib.addKeyword('viewPosition', function () {\r\n        return new PositionNode(PositionNode.VIEW);\r\n    });\r\n    return PositionNode;\r\n});"]}