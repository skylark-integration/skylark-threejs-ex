{"version":3,"sources":["nodes/accessors/UVNode.js"],"names":["define","TempNode","NodeLib","UVNode","index","call","this","shared","prototype","Object","create","constructor","nodeType","generate","builder","output","requires","uv","uvIndex","result","isShader","format","getType","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","addKeyword"],"mappings":";;;;;;;AAAAA,QACI,mBACA,mBACD,SAAUC,EAAUC,GACnB,aACA,SAASC,EAAOC,GACZH,EAASI,KAAKC,KAAM,MAAQC,QAAQ,IACpCD,KAAKF,MAAQA,GAAS,EA8B1B,OA5BAD,EAAOK,UAAYC,OAAOC,OAAOT,EAASO,WAC1CL,EAAOK,UAAUG,YAAcR,EAC/BA,EAAOK,UAAUI,SAAW,KAC5BT,EAAOK,UAAUK,SAAW,SAAUC,EAASC,GAC3CD,EAAQE,SAASC,GAAGX,KAAKF,QAAS,EAClC,IAAIc,EAAUZ,KAAKF,MAAQ,EAAIE,KAAKF,MAAQ,EAAI,GAC5Ce,EAASL,EAAQM,SAAS,UAAY,KAAOF,EAAU,MAAQA,EACnE,OAAOJ,EAAQO,OAAOF,EAAQb,KAAKgB,QAAQR,GAAUC,IAEzDZ,EAAOK,UAAUe,KAAO,SAAUC,GAG9B,OAFAvB,EAASO,UAAUe,KAAKlB,KAAKC,KAAMkB,GACnClB,KAAKF,MAAQoB,EAAOpB,MACbE,MAEXH,EAAOK,UAAUiB,OAAS,SAAUC,GAChC,IAAIC,EAAOrB,KAAKsB,YAAYF,GAK5B,OAJKC,KACDA,EAAOrB,KAAKuB,eAAeH,IACtBtB,MAAQE,KAAKF,OAEfuB,GAEXzB,EAAQ4B,WAAW,KAAM,WACrB,OAAO,IAAI3B,IAEfD,EAAQ4B,WAAW,MAAO,WACtB,OAAO,IAAI3B,EAAO,KAEfA","file":"../../../nodes/accessors/UVNode.js","sourcesContent":["define([\r\n    '../core/TempNode',\r\n    '../core/NodeLib'\r\n], function (TempNode, NodeLib) {\r\n    'use strict';\r\n    function UVNode(index) {\r\n        TempNode.call(this, 'v2', { shared: false });\r\n        this.index = index || 0;\r\n    }\r\n    UVNode.prototype = Object.create(TempNode.prototype);\r\n    UVNode.prototype.constructor = UVNode;\r\n    UVNode.prototype.nodeType = 'UV';\r\n    UVNode.prototype.generate = function (builder, output) {\r\n        builder.requires.uv[this.index] = true;\r\n        var uvIndex = this.index > 0 ? this.index + 1 : '';\r\n        var result = builder.isShader('vertex') ? 'uv' + uvIndex : 'vUv' + uvIndex;\r\n        return builder.format(result, this.getType(builder), output);\r\n    };\r\n    UVNode.prototype.copy = function (source) {\r\n        TempNode.prototype.copy.call(this, source);\r\n        this.index = source.index;\r\n        return this;\r\n    };\r\n    UVNode.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.index = this.index;\r\n        }\r\n        return data;\r\n    };\r\n    NodeLib.addKeyword('uv', function () {\r\n        return new UVNode();\r\n    });\r\n    NodeLib.addKeyword('uv2', function () {\r\n        return new UVNode(1);\r\n    });\r\n    return UVNode;\r\n});"]}