{"version":3,"sources":["nodes/accessors/UVNode.js"],"names":["define","TempNode","NodeLib","UVNode","index","call","this","shared","prototype","Object","create","constructor","nodeType","generate","builder","output","requires","uv","uvIndex","result","isShader","format","getType","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","addKeyword"],"mappings":";;;;;;;AAAAA,QACI,mBACA,mBACD,SAAUC,EAAUC,GACnB,aACA,SAASC,EAAOC,GACZH,EAASI,KAAKC,KAAM,MAAQC,QAAQ,IACpCD,KAAKF,MAAQA,GAAS,EA8B1B,OA5BAD,EAAOK,UAAYC,OAAOC,OAAOT,EAASO,WAC1CL,EAAOK,UAAUG,YAAcR,EAC/BA,EAAOK,UAAUI,SAAW,KAC5BT,EAAOK,UAAUK,SAAW,SAAUC,EAASC,GAC3CD,EAAQE,SAASC,GAAGX,KAAKF,QAAS,EAClC,IAAIc,EAAUZ,KAAKF,MAAQ,EAAIE,KAAKF,MAAQ,EAAI,GAC5Ce,EAASL,EAAQM,SAAS,UAAY,KAAOF,EAAU,MAAQA,EACnE,OAAOJ,EAAQO,OAAOF,EAAQb,KAAKgB,QAAQR,GAAUC,IAEzDZ,EAAOK,UAAUe,KAAO,SAAUC,GAG9B,OAFAvB,EAASO,UAAUe,KAAKlB,KAAKC,KAAMkB,GACnClB,KAAKF,MAAQoB,EAAOpB,MACbE,MAEXH,EAAOK,UAAUiB,OAAS,SAAUC,GAChC,IAAIC,EAAOrB,KAAKsB,YAAYF,GAK5B,OAJKC,KACDA,EAAOrB,KAAKuB,eAAeH,IACtBtB,MAAQE,KAAKF,OAEfuB,GAEXzB,EAAQ4B,WAAW,KAAM,WACrB,OAAO,IAAI3B,IAEfD,EAAQ4B,WAAW,MAAO,WACtB,OAAO,IAAI3B,EAAO,KAEfA","file":"../../../nodes/accessors/UVNode.js","sourcesContent":["define([\n    '../core/TempNode',\n    '../core/NodeLib'\n], function (TempNode, NodeLib) {\n    'use strict';\n    function UVNode(index) {\n        TempNode.call(this, 'v2', { shared: false });\n        this.index = index || 0;\n    }\n    UVNode.prototype = Object.create(TempNode.prototype);\n    UVNode.prototype.constructor = UVNode;\n    UVNode.prototype.nodeType = 'UV';\n    UVNode.prototype.generate = function (builder, output) {\n        builder.requires.uv[this.index] = true;\n        var uvIndex = this.index > 0 ? this.index + 1 : '';\n        var result = builder.isShader('vertex') ? 'uv' + uvIndex : 'vUv' + uvIndex;\n        return builder.format(result, this.getType(builder), output);\n    };\n    UVNode.prototype.copy = function (source) {\n        TempNode.prototype.copy.call(this, source);\n        this.index = source.index;\n        return this;\n    };\n    UVNode.prototype.toJSON = function (meta) {\n        var data = this.getJSONNode(meta);\n        if (!data) {\n            data = this.createJSONNode(meta);\n            data.index = this.index;\n        }\n        return data;\n    };\n    NodeLib.addKeyword('uv', function () {\n        return new UVNode();\n    });\n    NodeLib.addKeyword('uv2', function () {\n        return new UVNode(1);\n    });\n    return UVNode;\n});"]}