{"version":3,"sources":["nodes/materials/nodes/RawNode.js"],"names":["define","Node","RawNode","value","call","this","prototype","Object","create","constructor","nodeType","generate","builder","data","analyzeAndFlow","type","code","isShader","result","copy","source","toJSON","meta","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,mBACD,SACCC,GAEA,aACA,SAASC,EAAQC,GACbF,EAAKG,KAAKC,KAAM,MAChBA,KAAKF,MAAQA,EA2BjB,OAzBAD,EAAQI,UAAYC,OAAOC,OAAOP,EAAKK,WACvCJ,EAAQI,UAAUG,YAAcP,EAChCA,EAAQI,UAAUI,SAAW,MAC7BR,EAAQI,UAAUK,SAAW,SAAUC,GACnC,IAAIC,EAAOR,KAAKF,MAAMW,eAAeF,EAASP,KAAKU,MAAOC,EAAOH,EAAKG,KAAO,KAM7E,OALIJ,EAAQK,SAAS,UACjBD,GAAQ,iBAAmBH,EAAKK,OAAS,IAEzCF,GAAQ,kBAAoBH,EAAKK,OAAS,IAEvCF,GAEXd,EAAQI,UAAUa,KAAO,SAAUC,GAG/B,OAFAnB,EAAKK,UAAUa,KAAKf,KAAKC,KAAMe,GAC/Bf,KAAKF,MAAQiB,EAAOjB,MACbE,MAEXH,EAAQI,UAAUe,OAAS,SAAUC,GACjC,IAAIT,EAAOR,KAAKkB,YAAYD,GAK5B,OAJKT,KACDA,EAAOR,KAAKmB,eAAeF,IACtBnB,MAAQE,KAAKF,MAAMkB,OAAOC,GAAMG,MAElCZ,GAEJX","file":"../../../../nodes/materials/nodes/RawNode.js","sourcesContent":["define([\r\n    '../../core/Node'\r\n], function (\r\n    Node\r\n) {\r\n    'use strict';\r\n    function RawNode(value) {\r\n        Node.call(this, 'v4');\r\n        this.value = value;\r\n    }\r\n    RawNode.prototype = Object.create(Node.prototype);\r\n    RawNode.prototype.constructor = RawNode;\r\n    RawNode.prototype.nodeType = 'Raw';\r\n    RawNode.prototype.generate = function (builder) {\r\n        var data = this.value.analyzeAndFlow(builder, this.type), code = data.code + '\\n';\r\n        if (builder.isShader('vertex')) {\r\n            code += 'gl_Position = ' + data.result + ';';\r\n        } else {\r\n            code += 'gl_FragColor = ' + data.result + ';';\r\n        }\r\n        return code;\r\n    };\r\n    RawNode.prototype.copy = function (source) {\r\n        Node.prototype.copy.call(this, source);\r\n        this.value = source.value;\r\n        return this;\r\n    };\r\n    RawNode.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.value = this.value.toJSON(meta).uuid;\r\n        }\r\n        return data;\r\n    };\r\n    return RawNode;\r\n});"]}