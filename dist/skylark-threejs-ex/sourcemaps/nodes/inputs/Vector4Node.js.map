{"version":3,"sources":["nodes/inputs/Vector4Node.js"],"names":["define","THREE","InputNode","NodeUtils","Vector4Node","x","y","z","w","call","this","value","Vector4","prototype","Object","create","constructor","nodeType","addShortcuts","generateReadonly","builder","output","uuid","type","format","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","readonly"],"mappings":";;;;;;;AAAAA,QACI,kBACA,oBACA,qBACD,SACCC,EACAC,EACAC,GAEA,aACA,SAASC,EAAYC,EAAGC,EAAGC,EAAGC,GAC1BN,EAAUO,KAAKC,KAAM,MACrBA,KAAKC,MAAQN,aAAaJ,EAAMW,QAAUP,EAAI,IAAIJ,EAAMW,QAAQP,EAAGC,EAAGC,EAAGC,GAgC7E,OA9BAJ,EAAYS,UAAYC,OAAOC,OAAOb,EAAUW,WAChDT,EAAYS,UAAUG,YAAcZ,EACpCA,EAAYS,UAAUI,SAAW,UACjCd,EAAUe,aAAad,EAAYS,UAAW,SAC1C,IACA,IACA,IACA,MAEJT,EAAYS,UAAUM,iBAAmB,SAAUC,EAASC,EAAQC,EAAMC,GACtE,OAAOH,EAAQI,OAAO,SAAWd,KAAKL,EAAI,KAAOK,KAAKJ,EAAI,KAAOI,KAAKH,EAAI,KAAOG,KAAKF,EAAI,KAAMe,EAAMF,IAE1GjB,EAAYS,UAAUY,KAAO,SAAUC,GAGnC,OAFAxB,EAAUW,UAAUY,KAAKhB,KAAKC,KAAMgB,GACpChB,KAAKC,MAAMc,KAAKC,GACThB,MAEXN,EAAYS,UAAUc,OAAS,SAAUC,GACrC,IAAIC,EAAOnB,KAAKoB,YAAYF,GAU5B,OATKC,KACDA,EAAOnB,KAAKqB,eAAeH,IACtBvB,EAAIK,KAAKL,EACdwB,EAAKvB,EAAII,KAAKJ,EACduB,EAAKtB,EAAIG,KAAKH,EACdsB,EAAKrB,EAAIE,KAAKF,GACQ,IAAlBE,KAAKsB,WACLH,EAAKG,UAAW,IAEjBH,GAEJzB","file":"../../../nodes/inputs/Vector4Node.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    '../core/InputNode',\r\n    '../core/NodeUtils'\r\n], function (\r\n    THREE, \r\n    InputNode, \r\n    NodeUtils\r\n) {\r\n    'use strict';\r\n    function Vector4Node(x, y, z, w) {\r\n        InputNode.call(this, 'v4');\r\n        this.value = x instanceof THREE.Vector4 ? x : new THREE.Vector4(x, y, z, w);\r\n    }\r\n    Vector4Node.prototype = Object.create(InputNode.prototype);\r\n    Vector4Node.prototype.constructor = Vector4Node;\r\n    Vector4Node.prototype.nodeType = 'Vector4';\r\n    NodeUtils.addShortcuts(Vector4Node.prototype, 'value', [\r\n        'x',\r\n        'y',\r\n        'z',\r\n        'w'\r\n    ]);\r\n    Vector4Node.prototype.generateReadonly = function (builder, output, uuid, type) {\r\n        return builder.format('vec4( ' + this.x + ', ' + this.y + ', ' + this.z + ', ' + this.w + ' )', type, output);\r\n    };\r\n    Vector4Node.prototype.copy = function (source) {\r\n        InputNode.prototype.copy.call(this, source);\r\n        this.value.copy(source);\r\n        return this;\r\n    };\r\n    Vector4Node.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.x = this.x;\r\n            data.y = this.y;\r\n            data.z = this.z;\r\n            data.w = this.w;\r\n            if (this.readonly === true)\r\n                data.readonly = true;\r\n        }\r\n        return data;\r\n    };\r\n    return Vector4Node;\r\n});"]}