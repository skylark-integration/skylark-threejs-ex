{"version":3,"sources":["nodes/inputs/Matrix4Node.js"],"names":["define","THREE","InputNode","Matrix4Node","matrix","call","this","value","Matrix4","prototype","Object","create","constructor","nodeType","defineProperties","elements","set","val","get","generateReadonly","builder","output","uuid","type","format","join","copy","source","scope","fromArray","toJSON","meta","data","getJSONNode","createJSONNode","concat"],"mappings":";;;;;;;AAAAA,QACI,kBACA,qBACD,SAAUC,EAAOC,GAChB,aACA,SAASC,EAAYC,GACjBF,EAAUG,KAAKC,KAAM,MACrBA,KAAKC,MAAQH,GAAU,IAAIH,EAAMO,QA+BrC,OA7BAL,EAAYM,UAAYC,OAAOC,OAAOT,EAAUO,WAChDN,EAAYM,UAAUG,YAAcT,EACpCA,EAAYM,UAAUI,SAAW,UACjCH,OAAOI,iBAAiBX,EAAYM,WAChCM,UACIC,IAAK,SAAUC,GACXX,KAAKC,MAAMQ,SAAWE,GAE1BC,IAAK,WACD,OAAOZ,KAAKC,MAAMQ,aAI9BZ,EAAYM,UAAUU,iBAAmB,SAAUC,EAASC,EAAQC,EAAMC,GACtE,OAAOH,EAAQI,OAAO,SAAWlB,KAAKC,MAAMQ,SAASU,KAAK,MAAQ,KAAMF,EAAMF,IAElFlB,EAAYM,UAAUiB,KAAO,SAAUC,GAGnC,OAFAzB,EAAUO,UAAUiB,KAAKrB,KAAKC,KAAMqB,GACpCrB,KAAKsB,MAAMrB,MAAMsB,UAAUF,EAAOZ,UAC3BT,MAEXH,EAAYM,UAAUqB,OAAS,SAAUC,GACrC,IAAIC,EAAO1B,KAAK2B,YAAYF,GAK5B,OAJKC,KACDA,EAAO1B,KAAK4B,eAAeH,IACtBhB,SAAWT,KAAKC,MAAMQ,SAASoB,UAEjCH,GAEJ7B","file":"../../../nodes/inputs/Matrix4Node.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    '../core/InputNode'\r\n], function (THREE, InputNode) {\r\n    'use strict';\r\n    function Matrix4Node(matrix) {\r\n        InputNode.call(this, 'm4');\r\n        this.value = matrix || new THREE.Matrix4();\r\n    }\r\n    Matrix4Node.prototype = Object.create(InputNode.prototype);\r\n    Matrix4Node.prototype.constructor = Matrix4Node;\r\n    Matrix4Node.prototype.nodeType = 'Matrix4';\r\n    Object.defineProperties(Matrix4Node.prototype, {\r\n        elements: {\r\n            set: function (val) {\r\n                this.value.elements = val;\r\n            },\r\n            get: function () {\r\n                return this.value.elements;\r\n            }\r\n        }\r\n    });\r\n    Matrix4Node.prototype.generateReadonly = function (builder, output, uuid, type) {\r\n        return builder.format('mat4( ' + this.value.elements.join(', ') + ' )', type, output);\r\n    };\r\n    Matrix4Node.prototype.copy = function (source) {\r\n        InputNode.prototype.copy.call(this, source);\r\n        this.scope.value.fromArray(source.elements);\r\n        return this;\r\n    };\r\n    Matrix4Node.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.elements = this.value.elements.concat();\r\n        }\r\n        return data;\r\n    };\r\n    return Matrix4Node;\r\n});"]}