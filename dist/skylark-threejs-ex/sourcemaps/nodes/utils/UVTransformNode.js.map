{"version":3,"sources":["nodes/utils/UVTransformNode.js"],"names":["define","ExpressionNode","Matrix3Node","UVNode","UVTransformNode","uv","position","call","this","prototype","Object","create","constructor","nodeType","generate","builder","output","keywords","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","undefined","value","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,yBACA,wBACA,uBACD,SACCC,EACAC,EACAC,GAEA,aACA,SAASC,EAAgBC,EAAIC,GACzBL,EAAeM,KAAKC,KAAM,yCAA0C,QACpEA,KAAKH,GAAKA,GAAM,IAAIF,EACpBK,KAAKF,SAAWA,GAAY,IAAIJ,EA8BpC,OA5BAE,EAAgBK,UAAYC,OAAOC,OAAOV,EAAeQ,WACzDL,EAAgBK,UAAUG,YAAcR,EACxCA,EAAgBK,UAAUI,SAAW,cACrCT,EAAgBK,UAAUK,SAAW,SAAUC,EAASC,GAGpD,OAFAR,KAAKS,SAAiB,OAAIT,KAAKH,GAC/BG,KAAKS,SAAsB,YAAIT,KAAKF,SAC7BL,EAAeQ,UAAUK,SAASP,KAAKC,KAAMO,EAASC,IAEjEZ,EAAgBK,UAAUS,eAAiB,SAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAUC,EAAIC,GAC/ED,OAAYE,IAAPF,EAAmBA,EAAK,GAC7BC,OAAYC,IAAPD,EAAmBA,EAAK,GAC7BjB,KAAKF,SAASqB,MAAMT,eAAeC,EAAIC,EAAIC,EAAIC,EAAIC,EAAUC,EAAIC,IAErErB,EAAgBK,UAAUmB,KAAO,SAAUC,GAIvC,OAHA5B,EAAeQ,UAAUmB,KAAKrB,KAAKC,KAAMqB,GACzCrB,KAAKH,GAAKwB,EAAOxB,GACjBG,KAAKF,SAAWuB,EAAOvB,SAChBE,MAEXJ,EAAgBK,UAAUqB,OAAS,SAAUC,GACzC,IAAIC,EAAOxB,KAAKyB,YAAYF,GAM5B,OALKC,KACDA,EAAOxB,KAAK0B,eAAeH,IACtB1B,GAAKG,KAAKH,GAAGyB,OAAOC,GAAMI,KAC/BH,EAAK1B,SAAWE,KAAKF,SAASwB,OAAOC,GAAMI,MAExCH,GAEJ5B","file":"../../../nodes/utils/UVTransformNode.js","sourcesContent":["define([\n    '../core/ExpressionNode',\n    '../inputs/Matrix3Node',\n    '../accessors/UVNode'\n], function (\n    ExpressionNode, \n    Matrix3Node, \n    UVNode\n) {\n    'use strict';\n    function UVTransformNode(uv, position) {\n        ExpressionNode.call(this, '( uvTransform * vec3( uvNode, 1 ) ).xy', 'vec2');\n        this.uv = uv || new UVNode();\n        this.position = position || new Matrix3Node();\n    }\n    UVTransformNode.prototype = Object.create(ExpressionNode.prototype);\n    UVTransformNode.prototype.constructor = UVTransformNode;\n    UVTransformNode.prototype.nodeType = 'UVTransform';\n    UVTransformNode.prototype.generate = function (builder, output) {\n        this.keywords['uvNode'] = this.uv;\n        this.keywords['uvTransform'] = this.position;\n        return ExpressionNode.prototype.generate.call(this, builder, output);\n    };\n    UVTransformNode.prototype.setUvTransform = function (tx, ty, sx, sy, rotation, cx, cy) {\n        cx = cx !== undefined ? cx : 0.5;\n        cy = cy !== undefined ? cy : 0.5;\n        this.position.value.setUvTransform(tx, ty, sx, sy, rotation, cx, cy);\n    };\n    UVTransformNode.prototype.copy = function (source) {\n        ExpressionNode.prototype.copy.call(this, source);\n        this.uv = source.uv;\n        this.position = source.position;\n        return this;\n    };\n    UVTransformNode.prototype.toJSON = function (meta) {\n        var data = this.getJSONNode(meta);\n        if (!data) {\n            data = this.createJSONNode(meta);\n            data.uv = this.uv.toJSON(meta).uuid;\n            data.position = this.position.toJSON(meta).uuid;\n        }\n        return data;\n    };\n    return UVTransformNode;\n});"]}