{"version":3,"sources":["nodes/utils/UVTransformNode.js"],"names":["define","ExpressionNode","Matrix3Node","UVNode","UVTransformNode","uv","position","call","this","prototype","Object","create","constructor","nodeType","generate","builder","output","keywords","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","undefined","value","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,yBACA,wBACA,uBACD,SACCC,EACAC,EACAC,GAEA,aACA,SAASC,EAAgBC,EAAIC,GACzBL,EAAeM,KAAKC,KAAM,yCAA0C,QACpEA,KAAKH,GAAKA,GAAM,IAAIF,EACpBK,KAAKF,SAAWA,GAAY,IAAIJ,EA8BpC,OA5BAE,EAAgBK,UAAYC,OAAOC,OAAOV,EAAeQ,WACzDL,EAAgBK,UAAUG,YAAcR,EACxCA,EAAgBK,UAAUI,SAAW,cACrCT,EAAgBK,UAAUK,SAAW,SAAUC,EAASC,GAGpD,OAFAR,KAAKS,SAAiB,OAAIT,KAAKH,GAC/BG,KAAKS,SAAsB,YAAIT,KAAKF,SAC7BL,EAAeQ,UAAUK,SAASP,KAAKC,KAAMO,EAASC,IAEjEZ,EAAgBK,UAAUS,eAAiB,SAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAUC,EAAIC,GAC/ED,OAAYE,IAAPF,EAAmBA,EAAK,GAC7BC,OAAYC,IAAPD,EAAmBA,EAAK,GAC7BjB,KAAKF,SAASqB,MAAMT,eAAeC,EAAIC,EAAIC,EAAIC,EAAIC,EAAUC,EAAIC,IAErErB,EAAgBK,UAAUmB,KAAO,SAAUC,GAIvC,OAHA5B,EAAeQ,UAAUmB,KAAKrB,KAAKC,KAAMqB,GACzCrB,KAAKH,GAAKwB,EAAOxB,GACjBG,KAAKF,SAAWuB,EAAOvB,SAChBE,MAEXJ,EAAgBK,UAAUqB,OAAS,SAAUC,GACzC,IAAIC,EAAOxB,KAAKyB,YAAYF,GAM5B,OALKC,KACDA,EAAOxB,KAAK0B,eAAeH,IACtB1B,GAAKG,KAAKH,GAAGyB,OAAOC,GAAMI,KAC/BH,EAAK1B,SAAWE,KAAKF,SAASwB,OAAOC,GAAMI,MAExCH,GAEJ5B","file":"../../../nodes/utils/UVTransformNode.js","sourcesContent":["define([\r\n    '../core/ExpressionNode',\r\n    '../inputs/Matrix3Node',\r\n    '../accessors/UVNode'\r\n], function (\r\n    ExpressionNode, \r\n    Matrix3Node, \r\n    UVNode\r\n) {\r\n    'use strict';\r\n    function UVTransformNode(uv, position) {\r\n        ExpressionNode.call(this, '( uvTransform * vec3( uvNode, 1 ) ).xy', 'vec2');\r\n        this.uv = uv || new UVNode();\r\n        this.position = position || new Matrix3Node();\r\n    }\r\n    UVTransformNode.prototype = Object.create(ExpressionNode.prototype);\r\n    UVTransformNode.prototype.constructor = UVTransformNode;\r\n    UVTransformNode.prototype.nodeType = 'UVTransform';\r\n    UVTransformNode.prototype.generate = function (builder, output) {\r\n        this.keywords['uvNode'] = this.uv;\r\n        this.keywords['uvTransform'] = this.position;\r\n        return ExpressionNode.prototype.generate.call(this, builder, output);\r\n    };\r\n    UVTransformNode.prototype.setUvTransform = function (tx, ty, sx, sy, rotation, cx, cy) {\r\n        cx = cx !== undefined ? cx : 0.5;\r\n        cy = cy !== undefined ? cy : 0.5;\r\n        this.position.value.setUvTransform(tx, ty, sx, sy, rotation, cx, cy);\r\n    };\r\n    UVTransformNode.prototype.copy = function (source) {\r\n        ExpressionNode.prototype.copy.call(this, source);\r\n        this.uv = source.uv;\r\n        this.position = source.position;\r\n        return this;\r\n    };\r\n    UVTransformNode.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.uv = this.uv.toJSON(meta).uuid;\r\n            data.position = this.position.toJSON(meta).uuid;\r\n        }\r\n        return data;\r\n    };\r\n    return UVTransformNode;\r\n});"]}