{"version":3,"sources":["nodes/utils/TimerNode.js"],"names":["define","FloatNode","NodeLib","TimerNode","scale","scope","timeScale","call","this","undefined","GLOBAL","LOCAL","DELTA","prototype","Object","create","constructor","nodeType","getReadonly","getUnique","updateFrame","frame","value","delta","time","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","addKeyword"],"mappings":";;;;;;;AAAAA,QACI,sBACA,mBACD,SACCC,EACAC,GAEA,aACA,SAASC,EAAUC,EAAOC,EAAOC,GAC7BL,EAAUM,KAAKC,MACfA,KAAKJ,WAAkBK,IAAVL,EAAsBA,EAAQ,EAC3CI,KAAKH,MAAQA,GAASF,EAAUO,OAChCF,KAAKF,eAA0BG,IAAdH,EAA0BA,OAAsBG,IAAVL,EA+C3D,OA7CAD,EAAUO,OAAS,SACnBP,EAAUQ,MAAQ,QAClBR,EAAUS,MAAQ,QAClBT,EAAUU,UAAYC,OAAOC,OAAOd,EAAUY,WAC9CV,EAAUU,UAAUG,YAAcb,EAClCA,EAAUU,UAAUI,SAAW,QAC/Bd,EAAUU,UAAUK,YAAc,WAC9B,OAAO,GAEXf,EAAUU,UAAUM,UAAY,WAC5B,OAAOX,KAAKF,YAAcE,KAAKH,QAAUF,EAAUO,QAAUF,KAAKH,QAAUF,EAAUS,QAE1FT,EAAUU,UAAUO,YAAc,SAAUC,GACxC,IAAIjB,EAAQI,KAAKF,UAAYE,KAAKJ,MAAQ,EAC1C,OAAQI,KAAKH,OACb,KAAKF,EAAUQ,MACXH,KAAKc,OAASD,EAAME,MAAQnB,EAC5B,MACJ,KAAKD,EAAUS,MACXJ,KAAKc,MAAQD,EAAME,MAAQnB,EAC3B,MACJ,QACII,KAAKc,MAAQD,EAAMG,KAAOpB,IAGlCD,EAAUU,UAAUY,KAAO,SAAUC,GAKjC,OAJAzB,EAAUY,UAAUY,KAAKlB,KAAKC,KAAMkB,GACpClB,KAAKH,MAAQqB,EAAOrB,MACpBG,KAAKJ,MAAQsB,EAAOtB,MACpBI,KAAKF,UAAYoB,EAAOpB,UACjBE,MAEXL,EAAUU,UAAUc,OAAS,SAAUC,GACnC,IAAIC,EAAOrB,KAAKsB,YAAYF,GAO5B,OANKC,KACDA,EAAOrB,KAAKuB,eAAeH,IACtBvB,MAAQG,KAAKH,MAClBwB,EAAKzB,MAAQI,KAAKJ,MAClByB,EAAKvB,UAAYE,KAAKF,WAEnBuB,GAEX3B,EAAQ8B,WAAW,OAAQ,WACvB,OAAO,IAAI7B,IAERA","file":"../../../nodes/utils/TimerNode.js","sourcesContent":["define([\n    '../inputs/FloatNode',\n    '../core/NodeLib'\n], function (\n    FloatNode, \n    NodeLib\n) {\n    'use strict';\n    function TimerNode(scale, scope, timeScale) {\n        FloatNode.call(this);\n        this.scale = scale !== undefined ? scale : 1;\n        this.scope = scope || TimerNode.GLOBAL;\n        this.timeScale = timeScale !== undefined ? timeScale : scale !== undefined;\n    }\n    TimerNode.GLOBAL = 'global';\n    TimerNode.LOCAL = 'local';\n    TimerNode.DELTA = 'delta';\n    TimerNode.prototype = Object.create(FloatNode.prototype);\n    TimerNode.prototype.constructor = TimerNode;\n    TimerNode.prototype.nodeType = 'Timer';\n    TimerNode.prototype.getReadonly = function () {\n        return false;\n    };\n    TimerNode.prototype.getUnique = function () {\n        return this.timeScale && (this.scope === TimerNode.GLOBAL || this.scope === TimerNode.DELTA);\n    };\n    TimerNode.prototype.updateFrame = function (frame) {\n        var scale = this.timeScale ? this.scale : 1;\n        switch (this.scope) {\n        case TimerNode.LOCAL:\n            this.value += frame.delta * scale;\n            break;\n        case TimerNode.DELTA:\n            this.value = frame.delta * scale;\n            break;\n        default:\n            this.value = frame.time * scale;\n        }\n    };\n    TimerNode.prototype.copy = function (source) {\n        FloatNode.prototype.copy.call(this, source);\n        this.scope = source.scope;\n        this.scale = source.scale;\n        this.timeScale = source.timeScale;\n        return this;\n    };\n    TimerNode.prototype.toJSON = function (meta) {\n        var data = this.getJSONNode(meta);\n        if (!data) {\n            data = this.createJSONNode(meta);\n            data.scope = this.scope;\n            data.scale = this.scale;\n            data.timeScale = this.timeScale;\n        }\n        return data;\n    };\n    NodeLib.addKeyword('time', function () {\n        return new TimerNode();\n    });\n    return TimerNode;\n});"]}