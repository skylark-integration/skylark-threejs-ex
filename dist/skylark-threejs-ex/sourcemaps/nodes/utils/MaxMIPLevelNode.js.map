{"version":3,"sources":["nodes/utils/MaxMIPLevelNode.js"],"names":["define","FloatNode","MaxMIPLevelNode","texture","call","this","maxMIPLevel","prototype","Object","create","constructor","nodeType","defineProperties","value","get","image","Array","isArray","undefined","Math","log","max","width","height","LOG2E","set","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,uBACD,SACCC,GAEA,aACA,SAASC,EAAgBC,GACrBF,EAAUG,KAAKC,MACfA,KAAKF,QAAUA,EACfE,KAAKC,YAAc,EA4BvB,OA1BAJ,EAAgBK,UAAYC,OAAOC,OAAOR,EAAUM,WACpDL,EAAgBK,UAAUG,YAAcR,EACxCA,EAAgBK,UAAUI,SAAW,cACrCH,OAAOI,iBAAiBV,EAAgBK,WACpCM,OACIC,IAAK,WACD,GAAyB,IAArBT,KAAKC,YAAmB,CACxB,IAAIS,EAAQV,KAAKF,QAAQU,MAAME,MAC3BC,MAAMC,QAAQF,KACdA,EAAQA,EAAM,IAClBV,KAAKC,iBAAwBY,IAAVH,EAAsBI,KAAKC,IAAID,KAAKE,IAAIN,EAAMO,MAAOP,EAAMQ,SAAWJ,KAAKK,MAAQ,EAE1G,OAAOnB,KAAKC,aAEhBmB,IAAK,gBAIbvB,EAAgBK,UAAUmB,OAAS,SAAUC,GACzC,IAAIC,EAAOvB,KAAKwB,YAAYF,GAK5B,OAJKC,KACDA,EAAOvB,KAAKyB,eAAeH,IACtBxB,QAAUE,KAAKF,QAAQ4B,MAEzBH,GAEJ1B","file":"../../../nodes/utils/MaxMIPLevelNode.js","sourcesContent":["define([\n    '../inputs/FloatNode'\n], function (\n    FloatNode\n) {\n    'use strict';\n    function MaxMIPLevelNode(texture) {\n        FloatNode.call(this);\n        this.texture = texture;\n        this.maxMIPLevel = 0;\n    }\n    MaxMIPLevelNode.prototype = Object.create(FloatNode.prototype);\n    MaxMIPLevelNode.prototype.constructor = MaxMIPLevelNode;\n    MaxMIPLevelNode.prototype.nodeType = 'MaxMIPLevel';\n    Object.defineProperties(MaxMIPLevelNode.prototype, {\n        value: {\n            get: function () {\n                if (this.maxMIPLevel === 0) {\n                    var image = this.texture.value.image;\n                    if (Array.isArray(image))\n                        image = image[0];\n                    this.maxMIPLevel = image !== undefined ? Math.log(Math.max(image.width, image.height)) * Math.LOG2E : 0;\n                }\n                return this.maxMIPLevel;\n            },\n            set: function () {\n            }\n        }\n    });\n    MaxMIPLevelNode.prototype.toJSON = function (meta) {\n        var data = this.getJSONNode(meta);\n        if (!data) {\n            data = this.createJSONNode(meta);\n            data.texture = this.texture.uuid;\n        }\n        return data;\n    };\n    return MaxMIPLevelNode;\n});"]}