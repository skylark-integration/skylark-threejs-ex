{"version":3,"sources":["nodes/utils/MaxMIPLevelNode.js"],"names":["define","FloatNode","MaxMIPLevelNode","texture","call","this","maxMIPLevel","prototype","Object","create","constructor","nodeType","defineProperties","value","get","image","Array","isArray","undefined","Math","log","max","width","height","LOG2E","set","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,uBACD,SACCC,GAEA,aACA,SAASC,EAAgBC,GACrBF,EAAUG,KAAKC,MACfA,KAAKF,QAAUA,EACfE,KAAKC,YAAc,EA4BvB,OA1BAJ,EAAgBK,UAAYC,OAAOC,OAAOR,EAAUM,WACpDL,EAAgBK,UAAUG,YAAcR,EACxCA,EAAgBK,UAAUI,SAAW,cACrCH,OAAOI,iBAAiBV,EAAgBK,WACpCM,OACIC,IAAK,WACD,GAAyB,IAArBT,KAAKC,YAAmB,CACxB,IAAIS,EAAQV,KAAKF,QAAQU,MAAME,MAC3BC,MAAMC,QAAQF,KACdA,EAAQA,EAAM,IAClBV,KAAKC,iBAAwBY,IAAVH,EAAsBI,KAAKC,IAAID,KAAKE,IAAIN,EAAMO,MAAOP,EAAMQ,SAAWJ,KAAKK,MAAQ,EAE1G,OAAOnB,KAAKC,aAEhBmB,IAAK,gBAIbvB,EAAgBK,UAAUmB,OAAS,SAAUC,GACzC,IAAIC,EAAOvB,KAAKwB,YAAYF,GAK5B,OAJKC,KACDA,EAAOvB,KAAKyB,eAAeH,IACtBxB,QAAUE,KAAKF,QAAQ4B,MAEzBH,GAEJ1B","file":"../../../nodes/utils/MaxMIPLevelNode.js","sourcesContent":["define([\r\n    '../inputs/FloatNode'\r\n], function (\r\n    FloatNode\r\n) {\r\n    'use strict';\r\n    function MaxMIPLevelNode(texture) {\r\n        FloatNode.call(this);\r\n        this.texture = texture;\r\n        this.maxMIPLevel = 0;\r\n    }\r\n    MaxMIPLevelNode.prototype = Object.create(FloatNode.prototype);\r\n    MaxMIPLevelNode.prototype.constructor = MaxMIPLevelNode;\r\n    MaxMIPLevelNode.prototype.nodeType = 'MaxMIPLevel';\r\n    Object.defineProperties(MaxMIPLevelNode.prototype, {\r\n        value: {\r\n            get: function () {\r\n                if (this.maxMIPLevel === 0) {\r\n                    var image = this.texture.value.image;\r\n                    if (Array.isArray(image))\r\n                        image = image[0];\r\n                    this.maxMIPLevel = image !== undefined ? Math.log(Math.max(image.width, image.height)) * Math.LOG2E : 0;\r\n                }\r\n                return this.maxMIPLevel;\r\n            },\r\n            set: function () {\r\n            }\r\n        }\r\n    });\r\n    MaxMIPLevelNode.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.texture = this.texture.uuid;\r\n        }\r\n        return data;\r\n    };\r\n    return MaxMIPLevelNode;\r\n});"]}