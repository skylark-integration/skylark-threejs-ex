{"version":3,"sources":["nodes/utils/SubSlotNode.js"],"names":["define","TempNode","SubSlotNode","slots","call","this","prototype","Object","create","constructor","nodeType","getType","builder","output","generate","slot","build","format","copy","source","prop","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,oBACD,SACCC,GAEA,aACA,SAASC,EAAYC,GACjBF,EAASG,KAAKC,MACdA,KAAKF,MAAQA,MAmCjB,OAjCAD,EAAYI,UAAYC,OAAOC,OAAOP,EAASK,WAC/CJ,EAAYI,UAAUG,YAAcP,EACpCA,EAAYI,UAAUI,SAAW,UACjCR,EAAYI,UAAUK,QAAU,SAAUC,EAASC,GAC/C,OAAOA,GAEXX,EAAYI,UAAUQ,SAAW,SAAUF,EAASC,GAChD,OAAIR,KAAKF,MAAMS,EAAQG,MACZV,KAAKF,MAAMS,EAAQG,MAAMC,MAAMJ,EAASC,GAE5CD,EAAQK,OAAO,MAAO,IAAKJ,IAEtCX,EAAYI,UAAUY,KAAO,SAAUC,GAEnC,IAAK,IAAIC,KADTnB,EAASK,UAAUY,KAAKd,KAAKC,KAAMc,GAClBA,EAAOhB,MACpBE,KAAKF,MAAMiB,GAAQD,EAAOhB,MAAMiB,GAEpC,OAAOf,MAEXH,EAAYI,UAAUe,OAAS,SAAUC,GACrC,IAAIC,EAAOlB,KAAKmB,YAAYF,GAC5B,IAAKC,EAGD,IAAK,IAAIH,KAFTG,EAAOlB,KAAKoB,eAAeH,IACtBnB,SACYE,KAAKF,MAAO,CACzB,IAAIY,EAAOV,KAAKF,MAAMiB,GAClBL,IACAQ,EAAKpB,MAAMiB,GAAQL,EAAKM,OAAOC,GAAMI,MAIjD,OAAOH,GAEJrB","file":"../../../nodes/utils/SubSlotNode.js","sourcesContent":["define([\n    '../core/TempNode'\n], function (\n    TempNode\n) {\n    'use strict';\n    function SubSlotNode(slots) {\n        TempNode.call(this);\n        this.slots = slots || {};\n    }\n    SubSlotNode.prototype = Object.create(TempNode.prototype);\n    SubSlotNode.prototype.constructor = SubSlotNode;\n    SubSlotNode.prototype.nodeType = 'SubSlot';\n    SubSlotNode.prototype.getType = function (builder, output) {\n        return output;\n    };\n    SubSlotNode.prototype.generate = function (builder, output) {\n        if (this.slots[builder.slot]) {\n            return this.slots[builder.slot].build(builder, output);\n        }\n        return builder.format('0.0', 'f', output);\n    };\n    SubSlotNode.prototype.copy = function (source) {\n        TempNode.prototype.copy.call(this, source);\n        for (var prop in source.slots) {\n            this.slots[prop] = source.slots[prop];\n        }\n        return this;\n    };\n    SubSlotNode.prototype.toJSON = function (meta) {\n        var data = this.getJSONNode(meta);\n        if (!data) {\n            data = this.createJSONNode(meta);\n            data.slots = {};\n            for (var prop in this.slots) {\n                var slot = this.slots[prop];\n                if (slot) {\n                    data.slots[prop] = slot.toJSON(meta).uuid;\n                }\n            }\n        }\n        return data;\n    };\n    return SubSlotNode;\n});"]}