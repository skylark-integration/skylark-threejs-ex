{"version":3,"sources":["nodes/core/TempNode.js"],"names":["define","THREE","Node","TempNode","type","params","call","this","shared","undefined","unique","prototype","Object","create","constructor","build","builder","output","uuid","ns","getType","getShared","isUnique","getUnique","MathUtils","generateUUID","getUuid","data","getNodeData","analyzing","deps","getLabel","appendDepsNode","generate","name","context","ignoreCache","getTemp","format","code","addNodeCode","setLabel","label","scope","tempVar","getVars","console","error","getTempVar"],"mappings":"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","file":"../../../nodes/core/TempNode.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    './Node'\r\n], function (THREE, Node) {\r\n    'use strict';\r\n    function TempNode(type, params) {\r\n        Node.call(this, type);\r\n        params = params || {};\r\n        this.shared = params.shared !== undefined ? params.shared : true;\r\n        this.unique = params.unique !== undefined ? params.unique : false;\r\n    }\r\n    TempNode.prototype = Object.create(Node.prototype);\r\n    TempNode.prototype.constructor = TempNode;\r\n    TempNode.prototype.build = function (builder, output, uuid, ns) {\r\n        output = output || this.getType(builder);\r\n        if (this.getShared(builder, output)) {\r\n            var isUnique = this.getUnique(builder, output);\r\n            if (isUnique && this.constructor.uuid === undefined) {\r\n                this.constructor.uuid = THREE.MathUtils.generateUUID();\r\n            }\r\n            uuid = builder.getUuid(uuid || this.getUuid(), !isUnique);\r\n            var data = builder.getNodeData(uuid), type = data.output || this.getType(builder);\r\n            if (builder.analyzing) {\r\n                if ((data.deps || 0) > 0 || this.getLabel()) {\r\n                    this.appendDepsNode(builder, data, output);\r\n                    return this.generate(builder, output, uuid);\r\n                }\r\n                return Node.prototype.build.call(this, builder, output, uuid);\r\n            } else if (isUnique) {\r\n                data.name = data.name || Node.prototype.build.call(this, builder, output, uuid);\r\n                return data.name;\r\n            } else if (!this.getLabel() && (!this.getShared(builder, type) || (builder.context.ignoreCache || data.deps === 1))) {\r\n                return Node.prototype.build.call(this, builder, output, uuid);\r\n            }\r\n            uuid = this.getUuid(false);\r\n            var name = this.getTemp(builder, uuid);\r\n            if (name) {\r\n                return builder.format(name, type, output);\r\n            } else {\r\n                name = TempNode.prototype.generate.call(this, builder, output, uuid, data.output, ns);\r\n                var code = this.generate(builder, type, uuid);\r\n                builder.addNodeCode(name + ' = ' + code + ';');\r\n                return builder.format(name, type, output);\r\n            }\r\n        }\r\n        return Node.prototype.build.call(this, builder, output, uuid);\r\n    };\r\n    TempNode.prototype.getShared = function (builder, output) {\r\n        return output !== 'sampler2D' && output !== 'samplerCube' && this.shared;\r\n    };\r\n    TempNode.prototype.getUnique = function () {\r\n        return this.unique;\r\n    };\r\n    TempNode.prototype.setLabel = function (name) {\r\n        this.label = name;\r\n        return this;\r\n    };\r\n    TempNode.prototype.getLabel = function () {\r\n        return this.label;\r\n    };\r\n    TempNode.prototype.getUuid = function (unique) {\r\n        var uuid = unique || unique == undefined ? this.constructor.uuid || this.uuid : this.uuid;\r\n        if (typeof this.scope === 'string')\r\n            uuid = this.scope + '-' + uuid;\r\n        return uuid;\r\n    };\r\n    TempNode.prototype.getTemp = function (builder, uuid) {\r\n        uuid = uuid || this.uuid;\r\n        var tempVar = builder.getVars()[uuid];\r\n        return tempVar ? tempVar.name : undefined;\r\n    };\r\n    TempNode.prototype.generate = function (builder, output, uuid, type, ns) {\r\n        if (!this.getShared(builder, output))\r\n            console.error('THREE.TempNode is not shared!');\r\n        uuid = uuid || this.uuid;\r\n        return builder.getTempVar(uuid, type || this.getType(builder), ns, this.getLabel()).name;\r\n    };\r\n    return TempNode;\r\n});"]}