{"version":3,"sources":["nodes/core/Node.js"],"names":["define","THREE","threex","Node","type","this","uuid","MathUtils","generateUUID","name","userData","prototype","constructor","isNode","analyze","builder","settings","analyzing","build","addFlow","slot","cache","context","clearVertexNodeCode","clearFragmentNodeCode","removeFlow","analyzeAndFlow","output","flow","result","code","clearNodeCode","extra","getType","data","getNodeData","appendDepsNode","nodes","indexOf","push","undefined","updateFrame","updaters","generate","deps","outputLen","getTypeLength","outputMax","setName","getName","getJSONNode","meta","copy","source","JSON","parse","stringify","createJSONNode","isRootObject","nodeType","Error","toJSON"],"mappings":"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","file":"../../../nodes/core/Node.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    function Node(type) {\r\n        this.uuid = THREE.MathUtils.generateUUID();\r\n        this.name = '';\r\n        this.type = type;\r\n        this.userData = {};\r\n    }\r\n    Node.prototype = {\r\n        constructor: Node,\r\n        isNode: true,\r\n        analyze: function (builder, settings) {\r\n            settings = settings || {};\r\n            builder.analyzing = true;\r\n            this.build(builder.addFlow(settings.slot, settings.cache, settings.context), 'v4');\r\n            builder.clearVertexNodeCode();\r\n            builder.clearFragmentNodeCode();\r\n            builder.removeFlow();\r\n            builder.analyzing = false;\r\n        },\r\n        analyzeAndFlow: function (builder, output, settings) {\r\n            settings = settings || {};\r\n            this.analyze(builder, settings);\r\n            return this.flow(builder, output, settings);\r\n        },\r\n        flow: function (builder, output, settings) {\r\n            settings = settings || {};\r\n            builder.addFlow(settings.slot, settings.cache, settings.context);\r\n            var flow = {};\r\n            flow.result = this.build(builder, output);\r\n            flow.code = builder.clearNodeCode();\r\n            flow.extra = builder.context.extra;\r\n            builder.removeFlow();\r\n            return flow;\r\n        },\r\n        build: function (builder, output, uuid) {\r\n            output = output || this.getType(builder, output);\r\n            var data = builder.getNodeData(uuid || this);\r\n            if (builder.analyzing) {\r\n                this.appendDepsNode(builder, data, output);\r\n            }\r\n            if (builder.nodes.indexOf(this) === -1) {\r\n                builder.nodes.push(this);\r\n            }\r\n            if (this.updateFrame !== undefined && builder.updaters.indexOf(this) === -1) {\r\n                builder.updaters.push(this);\r\n            }\r\n            return this.generate(builder, output, uuid);\r\n        },\r\n        generate: function () {\r\n        },\r\n        appendDepsNode: function (builder, data, output) {\r\n            data.deps = (data.deps || 0) + 1;\r\n            var outputLen = builder.getTypeLength(output);\r\n            if (outputLen > (data.outputMax || 0) || this.getType(builder, output)) {\r\n                data.outputMax = outputLen;\r\n                data.output = output;\r\n            }\r\n        },\r\n        setName: function (name) {\r\n            this.name = name;\r\n            return this;\r\n        },\r\n        getName: function () {\r\n            return this.name;\r\n        },\r\n        getType: function (builder, output) {\r\n            return output === 'sampler2D' || output === 'samplerCube' ? output : this.type;\r\n        },\r\n        getJSONNode: function (meta) {\r\n            var isRootObject = meta === undefined || typeof meta === 'string';\r\n            if (!isRootObject && meta.nodes[this.uuid] !== undefined) {\r\n                return meta.nodes[this.uuid];\r\n            }\r\n        },\r\n        copy: function (source) {\r\n            if (source.name !== undefined)\r\n                this.name = source.name;\r\n            if (source.userData !== undefined)\r\n                this.userData = JSON.parse(JSON.stringify(source.userData));\r\n            return this;\r\n        },\r\n        createJSONNode: function (meta) {\r\n            var isRootObject = meta === undefined || typeof meta === 'string';\r\n            var data = {};\r\n            if (typeof this.nodeType !== 'string')\r\n                throw new Error('Node does not allow serialization.');\r\n            data.uuid = this.uuid;\r\n            data.nodeType = this.nodeType;\r\n            if (this.name !== '')\r\n                data.name = this.name;\r\n            if (JSON.stringify(this.userData) !== '{}')\r\n                data.userData = this.userData;\r\n            if (!isRootObject) {\r\n                meta.nodes[this.uuid] = data;\r\n            }\r\n            return data;\r\n        },\r\n        toJSON: function (meta) {\r\n            return this.getJSONNode(meta) || this.createJSONNode(meta);\r\n        }\r\n    };\r\n    return Node;\r\n});"]}