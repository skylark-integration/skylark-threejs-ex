{"version":3,"sources":["nodes/procedural/CheckerNode.js"],"names":["define","TempNode","FunctionNode","UVNode","CheckerNode","uv","call","this","prototype","Object","create","constructor","nodeType","Nodes","checker","join","generate","builder","output","snoise","include","format","build","getType","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"mappings":";;;;;;;AAAAA,QACI,mBACA,uBACA,uBACD,SACCC,EACAC,EACAC,GAEA,aACA,SAASC,EAAYC,GACjBJ,EAASK,KAAKC,KAAM,KACpBA,KAAKF,GAAKA,GAAM,IAAIF,EAiCxB,OA/BAC,EAAYI,UAAYC,OAAOC,OAAOT,EAASO,WAC/CJ,EAAYI,UAAUG,YAAcP,EACpCA,EAAYI,UAAUI,SAAW,QACjCR,EAAYS,OASCC,QARK,IAAIZ,GACd,6BACA,8BACA,+BACA,wCACA,2BACA,KACFa,KAAK,QAGXX,EAAYI,UAAUQ,SAAW,SAAUC,EAASC,GAChD,IAAIC,EAASF,EAAQG,QAAQhB,EAAYS,MAAMC,SAC/C,OAAOG,EAAQI,OAAOF,EAAS,KAAOZ,KAAKF,GAAGiB,MAAML,EAAS,MAAQ,KAAMV,KAAKgB,QAAQN,GAAUC,IAEtGd,EAAYI,UAAUgB,KAAO,SAAUC,GAGnC,OAFAxB,EAASO,UAAUgB,KAAKlB,KAAKC,KAAMkB,GACnClB,KAAKF,GAAKoB,EAAOpB,GACVE,MAEXH,EAAYI,UAAUkB,OAAS,SAAUC,GACrC,IAAIC,EAAOrB,KAAKsB,YAAYF,GAK5B,OAJKC,KACDA,EAAOrB,KAAKuB,eAAeH,IACtBtB,GAAKE,KAAKF,GAAGqB,OAAOC,GAAMI,MAE5BH,GAEJxB","file":"../../../nodes/procedural/CheckerNode.js","sourcesContent":["define([\r\n    '../core/TempNode',\r\n    '../core/FunctionNode',\r\n    '../accessors/UVNode'\r\n], function (\r\n    TempNode, \r\n    FunctionNode, \r\n    UVNode\r\n) {\r\n    'use strict';\r\n    function CheckerNode(uv) {\r\n        TempNode.call(this, 'f');\r\n        this.uv = uv || new UVNode();\r\n    }\r\n    CheckerNode.prototype = Object.create(TempNode.prototype);\r\n    CheckerNode.prototype.constructor = CheckerNode;\r\n    CheckerNode.prototype.nodeType = 'Noise';\r\n    CheckerNode.Nodes = function () {\r\n        var checker = new FunctionNode([\r\n            'float checker( vec2 uv ) {',\r\n            '\\tfloat cx = floor( uv.x );',\r\n            '\\tfloat cy = floor( uv.y ); ',\r\n            '\\tfloat result = mod( cx + cy, 2.0 );',\r\n            '\\treturn sign( result );',\r\n            '}'\r\n        ].join('\\n'));\r\n        return { checker: checker };\r\n    }();\r\n    CheckerNode.prototype.generate = function (builder, output) {\r\n        var snoise = builder.include(CheckerNode.Nodes.checker);\r\n        return builder.format(snoise + '( ' + this.uv.build(builder, 'v2') + ' )', this.getType(builder), output);\r\n    };\r\n    CheckerNode.prototype.copy = function (source) {\r\n        TempNode.prototype.copy.call(this, source);\r\n        this.uv = source.uv;\r\n        return this;\r\n    };\r\n    CheckerNode.prototype.toJSON = function (meta) {\r\n        var data = this.getJSONNode(meta);\r\n        if (!data) {\r\n            data = this.createJSONNode(meta);\r\n            data.uv = this.uv.toJSON(meta).uuid;\r\n        }\r\n        return data;\r\n    };\r\n    return CheckerNode;\r\n});"]}