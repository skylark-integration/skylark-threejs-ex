{"version":3,"sources":["webxr/ARButton.js"],"names":["define","threex","ARButton","createButton","renderer","sessionInit","showARNotSupported","button","style","display","cursor","left","width","onmouseenter","onmouseleave","onclick","textContent","stylizeElement","element","position","bottom","padding","border","borderRadius","background","color","font","textAlign","opacity","outline","zIndex","navigator","document","createElement","xr","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setReferenceSpaceType","setSession","removeEventListener","requestSession","end","showStartAR","catch","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration","webxr"],"mappings":";;;;;;;AAAAA,QACE,aACC,SAAUC,GACT,aACA,IAAIC,GACAC,aAAc,SAAUC,EAAUC,MA2C9B,SAASC,IARLC,EAAOC,MAAMC,QAAU,GACvBF,EAAOC,MAAME,OAAS,OACtBH,EAAOC,MAAMG,KAAO,mBACpBJ,EAAOC,MAAMI,MAAQ,QACrBL,EAAOM,aAAe,KACtBN,EAAOO,aAAe,KACtBP,EAAOQ,QAAU,KAIjBR,EAAOS,YAAc,mBAEzB,SAASC,EAAeC,GACpBA,EAAQV,MAAMW,SAAW,WACzBD,EAAQV,MAAMY,OAAS,OACvBF,EAAQV,MAAMa,QAAU,WACxBH,EAAQV,MAAMc,OAAS,iBACvBJ,EAAQV,MAAMe,aAAe,MAC7BL,EAAQV,MAAMgB,WAAa,kBAC3BN,EAAQV,MAAMiB,MAAQ,OACtBP,EAAQV,MAAMkB,KAAO,yBACrBR,EAAQV,MAAMmB,UAAY,SAC1BT,EAAQV,MAAMoB,QAAU,MACxBV,EAAQV,MAAMqB,QAAU,OACxBX,EAAQV,MAAMsB,OAAS,MAE3B,GAAI,OAAQC,UAAW,CACnB,IAAIxB,EAASyB,SAASC,cAAc,UAMpC,OALA1B,EAAOC,MAAMC,QAAU,OACvBQ,EAAeV,GACfwB,UAAUG,GAAGC,mBAAmB,gBAAgBC,KAAK,SAAUC,GAC3DA,EAjER,WACI,IAAIC,EAAiB,KACrB,SAASC,EAAiBC,GACtBA,EAAQC,iBAAiB,MAAOC,GAChCtC,EAAS8B,GAAGS,sBAAsB,SAClCvC,EAAS8B,GAAGU,WAAWJ,GACvBjC,EAAOS,YAAc,UACrBsB,EAAiBE,EAErB,SAASE,IACLJ,EAAeO,oBAAoB,MAAOH,GAC1CnC,EAAOS,YAAc,WACrBsB,EAAiB,KAErB/B,EAAOC,MAAMC,QAAU,GACvBF,EAAOC,MAAME,OAAS,UACtBH,EAAOC,MAAMG,KAAO,mBACpBJ,EAAOC,MAAMI,MAAQ,QACrBL,EAAOS,YAAc,WACrBT,EAAOM,aAAe,WAClBN,EAAOC,MAAMoB,QAAU,OAE3BrB,EAAOO,aAAe,WAClBP,EAAOC,MAAMoB,QAAU,OAE3BrB,EAAOQ,QAAU,WACU,OAAnBuB,EACAP,UAAUG,GAAGY,eAAe,eAAgBzC,GAAa+B,KAAKG,GAE9DD,EAAeS,OAoCPC,GAAgB1C,MAC7B2C,MAAM3C,GACFC,EAEP,IAAI2C,EAAUlB,SAASC,cAAc,KAYrC,OAX+B,IAA3BkB,OAAOC,iBACPF,EAAQG,KAAOrB,SAASsB,SAASD,KAAKE,QAAQ,SAAU,UACxDL,EAAQM,UAAY,sBAEpBN,EAAQG,KAAO,4BACfH,EAAQM,UAAY,uBAExBN,EAAQ1C,MAAMG,KAAO,mBACrBuC,EAAQ1C,MAAMI,MAAQ,QACtBsC,EAAQ1C,MAAMiD,eAAiB,OAC/BxC,EAAeiC,GACRA,IAInB,OAAOjD,EAAOyD,MAAMxD,SAAWA","file":"../../webxr/ARButton.js","sourcesContent":["define([\r\n  \"../threex\"\r\n], function (threex) {\r\n    'use strict';\r\n    var ARButton = {\r\n        createButton: function (renderer, sessionInit = {}) {\r\n            function showStartAR() {\r\n                var currentSession = null;\r\n                function onSessionStarted(session) {\r\n                    session.addEventListener('end', onSessionEnded);\r\n                    renderer.xr.setReferenceSpaceType('local');\r\n                    renderer.xr.setSession(session);\r\n                    button.textContent = 'STOP AR';\r\n                    currentSession = session;\r\n                }\r\n                function onSessionEnded() {\r\n                    currentSession.removeEventListener('end', onSessionEnded);\r\n                    button.textContent = 'START AR';\r\n                    currentSession = null;\r\n                }\r\n                button.style.display = '';\r\n                button.style.cursor = 'pointer';\r\n                button.style.left = 'calc(50% - 50px)';\r\n                button.style.width = '100px';\r\n                button.textContent = 'START AR';\r\n                button.onmouseenter = function () {\r\n                    button.style.opacity = '1.0';\r\n                };\r\n                button.onmouseleave = function () {\r\n                    button.style.opacity = '0.5';\r\n                };\r\n                button.onclick = function () {\r\n                    if (currentSession === null) {\r\n                        navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\r\n                    } else {\r\n                        currentSession.end();\r\n                    }\r\n                };\r\n            }\r\n            function disableButton() {\r\n                button.style.display = '';\r\n                button.style.cursor = 'auto';\r\n                button.style.left = 'calc(50% - 75px)';\r\n                button.style.width = '150px';\r\n                button.onmouseenter = null;\r\n                button.onmouseleave = null;\r\n                button.onclick = null;\r\n            }\r\n            function showARNotSupported() {\r\n                disableButton();\r\n                button.textContent = 'AR NOT SUPPORTED';\r\n            }\r\n            function stylizeElement(element) {\r\n                element.style.position = 'absolute';\r\n                element.style.bottom = '20px';\r\n                element.style.padding = '12px 6px';\r\n                element.style.border = '1px solid #fff';\r\n                element.style.borderRadius = '4px';\r\n                element.style.background = 'rgba(0,0,0,0.1)';\r\n                element.style.color = '#fff';\r\n                element.style.font = 'normal 13px sans-serif';\r\n                element.style.textAlign = 'center';\r\n                element.style.opacity = '0.5';\r\n                element.style.outline = 'none';\r\n                element.style.zIndex = '999';\r\n            }\r\n            if ('xr' in navigator) {\r\n                var button = document.createElement('button');\r\n                button.style.display = 'none';\r\n                stylizeElement(button);\r\n                navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\r\n                    supported ? showStartAR() : showARNotSupported();\r\n                }).catch(showARNotSupported);\r\n                return button;\r\n            } else {\r\n                var message = document.createElement('a');\r\n                if (window.isSecureContext === false) {\r\n                    message.href = document.location.href.replace(/^http:/, 'https:');\r\n                    message.innerHTML = 'WEBXR NEEDS HTTPS';\r\n                } else {\r\n                    message.href = 'https://immersiveweb.dev/';\r\n                    message.innerHTML = 'WEBXR NOT AVAILABLE';\r\n                }\r\n                message.style.left = 'calc(50% - 90px)';\r\n                message.style.width = '180px';\r\n                message.style.textDecoration = 'none';\r\n                stylizeElement(message);\r\n                return message;\r\n            }\r\n        }\r\n    };\r\n    return threex.webxr.ARButton = ARButton;\r\n});"]}