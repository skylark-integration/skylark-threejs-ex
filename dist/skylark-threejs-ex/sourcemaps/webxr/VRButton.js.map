{"version":3,"sources":["webxr/VRButton.js"],"names":["define","threex","VRButton","createButton","renderer","options","showWebXRNotFound","button","style","display","cursor","left","width","onmouseenter","onmouseleave","onclick","textContent","stylizeElement","element","position","bottom","padding","border","borderRadius","background","color","font","textAlign","opacity","outline","zIndex","referenceSpaceType","xr","setReferenceSpaceType","navigator","document","createElement","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","removeEventListener","requestSession","optionalFeatures","end","showEnterVR","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration","webxr"],"mappings":";;;;;;;AAAAA,QACE,aACC,SAAUC,GACT,aACA,IAAIC,GACAC,aAAc,SAAUC,EAAUC,GAmD9B,SAASC,IARLC,EAAOC,MAAMC,QAAU,GACvBF,EAAOC,MAAME,OAAS,OACtBH,EAAOC,MAAMG,KAAO,mBACpBJ,EAAOC,MAAMI,MAAQ,QACrBL,EAAOM,aAAe,KACtBN,EAAOO,aAAe,KACtBP,EAAOQ,QAAU,KAIjBR,EAAOS,YAAc,mBAEzB,SAASC,EAAeC,GACpBA,EAAQV,MAAMW,SAAW,WACzBD,EAAQV,MAAMY,OAAS,OACvBF,EAAQV,MAAMa,QAAU,WACxBH,EAAQV,MAAMc,OAAS,iBACvBJ,EAAQV,MAAMe,aAAe,MAC7BL,EAAQV,MAAMgB,WAAa,kBAC3BN,EAAQV,MAAMiB,MAAQ,OACtBP,EAAQV,MAAMkB,KAAO,yBACrBR,EAAQV,MAAMmB,UAAY,SAC1BT,EAAQV,MAAMoB,QAAU,MACxBV,EAAQV,MAAMqB,QAAU,OACxBX,EAAQV,MAAMsB,OAAS,MAE3B,GApEIzB,GAAWA,EAAQ0B,oBACnB3B,EAAS4B,GAAGC,sBAAsB5B,EAAQ0B,oBAmE1C,OAAQG,UAAW,CACnB,IAAI3B,EAAS4B,SAASC,cAAc,UAMpC,OALA7B,EAAOC,MAAMC,QAAU,OACvBQ,EAAeV,GACf2B,UAAUF,GAAGK,mBAAmB,gBAAgBC,KAAK,SAAUC,GAC3DA,EAtER,WACI,IAAIC,EAAiB,KACrB,SAASC,EAAiBC,GACtBA,EAAQC,iBAAiB,MAAOC,GAChCxC,EAAS4B,GAAGa,WAAWH,GACvBnC,EAAOS,YAAc,UACrBwB,EAAiBE,EAErB,SAASE,IACLJ,EAAeM,oBAAoB,MAAOF,GAC1CrC,EAAOS,YAAc,WACrBwB,EAAiB,KAErBjC,EAAOC,MAAMC,QAAU,GACvBF,EAAOC,MAAME,OAAS,UACtBH,EAAOC,MAAMG,KAAO,mBACpBJ,EAAOC,MAAMI,MAAQ,QACrBL,EAAOS,YAAc,WACrBT,EAAOM,aAAe,WAClBN,EAAOC,MAAMoB,QAAU,OAE3BrB,EAAOO,aAAe,WAClBP,EAAOC,MAAMoB,QAAU,OAE3BrB,EAAOQ,QAAU,WACU,OAAnByB,EAOAN,UAAUF,GAAGe,eAAe,gBALxBC,kBACI,cACA,mBAGiDV,KAAKG,GAE9DD,EAAeS,OAoCPC,GAAgB5C,MAEzBC,EAEP,IAAI4C,EAAUhB,SAASC,cAAc,KAYrC,OAX+B,IAA3BgB,OAAOC,iBACPF,EAAQG,KAAOnB,SAASoB,SAASD,KAAKE,QAAQ,SAAU,UACxDL,EAAQM,UAAY,sBAEpBN,EAAQG,KAAO,4BACfH,EAAQM,UAAY,uBAExBN,EAAQ3C,MAAMG,KAAO,mBACrBwC,EAAQ3C,MAAMI,MAAQ,QACtBuC,EAAQ3C,MAAMkD,eAAiB,OAC/BzC,EAAekC,GACRA,IAInB,OAAOlD,EAAO0D,MAAMzD,SAAWA","file":"../../webxr/VRButton.js","sourcesContent":["define([\r\n  \"../threex\"\r\n], function (threex) {\r\n    'use strict';\r\n    var VRButton = {\r\n        createButton: function (renderer, options) {\r\n            if (options && options.referenceSpaceType) {\r\n                renderer.xr.setReferenceSpaceType(options.referenceSpaceType);\r\n            }\r\n            function showEnterVR() {\r\n                var currentSession = null;\r\n                function onSessionStarted(session) {\r\n                    session.addEventListener('end', onSessionEnded);\r\n                    renderer.xr.setSession(session);\r\n                    button.textContent = 'EXIT VR';\r\n                    currentSession = session;\r\n                }\r\n                function onSessionEnded() {\r\n                    currentSession.removeEventListener('end', onSessionEnded);\r\n                    button.textContent = 'ENTER VR';\r\n                    currentSession = null;\r\n                }\r\n                button.style.display = '';\r\n                button.style.cursor = 'pointer';\r\n                button.style.left = 'calc(50% - 50px)';\r\n                button.style.width = '100px';\r\n                button.textContent = 'ENTER VR';\r\n                button.onmouseenter = function () {\r\n                    button.style.opacity = '1.0';\r\n                };\r\n                button.onmouseleave = function () {\r\n                    button.style.opacity = '0.5';\r\n                };\r\n                button.onclick = function () {\r\n                    if (currentSession === null) {\r\n                        var sessionInit = {\r\n                            optionalFeatures: [\r\n                                'local-floor',\r\n                                'bounded-floor'\r\n                            ]\r\n                        };\r\n                        navigator.xr.requestSession('immersive-vr', sessionInit).then(onSessionStarted);\r\n                    } else {\r\n                        currentSession.end();\r\n                    }\r\n                };\r\n            }\r\n            function disableButton() {\r\n                button.style.display = '';\r\n                button.style.cursor = 'auto';\r\n                button.style.left = 'calc(50% - 75px)';\r\n                button.style.width = '150px';\r\n                button.onmouseenter = null;\r\n                button.onmouseleave = null;\r\n                button.onclick = null;\r\n            }\r\n            function showWebXRNotFound() {\r\n                disableButton();\r\n                button.textContent = 'VR NOT SUPPORTED';\r\n            }\r\n            function stylizeElement(element) {\r\n                element.style.position = 'absolute';\r\n                element.style.bottom = '20px';\r\n                element.style.padding = '12px 6px';\r\n                element.style.border = '1px solid #fff';\r\n                element.style.borderRadius = '4px';\r\n                element.style.background = 'rgba(0,0,0,0.1)';\r\n                element.style.color = '#fff';\r\n                element.style.font = 'normal 13px sans-serif';\r\n                element.style.textAlign = 'center';\r\n                element.style.opacity = '0.5';\r\n                element.style.outline = 'none';\r\n                element.style.zIndex = '999';\r\n            }\r\n            if ('xr' in navigator) {\r\n                var button = document.createElement('button');\r\n                button.style.display = 'none';\r\n                stylizeElement(button);\r\n                navigator.xr.isSessionSupported('immersive-vr').then(function (supported) {\r\n                    supported ? showEnterVR() : showWebXRNotFound();\r\n                });\r\n                return button;\r\n            } else {\r\n                var message = document.createElement('a');\r\n                if (window.isSecureContext === false) {\r\n                    message.href = document.location.href.replace(/^http:/, 'https:');\r\n                    message.innerHTML = 'WEBXR NEEDS HTTPS';\r\n                } else {\r\n                    message.href = 'https://immersiveweb.dev/';\r\n                    message.innerHTML = 'WEBXR NOT AVAILABLE';\r\n                }\r\n                message.style.left = 'calc(50% - 90px)';\r\n                message.style.width = '180px';\r\n                message.style.textDecoration = 'none';\r\n                stylizeElement(message);\r\n                return message;\r\n            }\r\n        }\r\n    };\r\n    return threex.webxr.VRButton = VRButton;\r\n});"]}