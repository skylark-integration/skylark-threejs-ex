{"version":3,"sources":["objects/ShadowMesh.js"],"names":["define","THREE","threex","shadowMatrix","ShadowMesh","mesh","shadowMaterial","MeshBasicMaterial","color","transparent","opacity","depthWrite","Mesh","call","this","geometry","meshMatrix","matrixWorld","frustumCulled","matrixAutoUpdate","prototype","Object","create","constructor","update","Matrix4","plane","lightPosition4D","dot","normal","x","y","z","constant","w","sme","elements","matrix","multiplyMatrices","objects"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aACA,IAeQC,EAfJC,EAAa,SAAUC,GACvB,IAAIC,EAAiB,IAAIL,EAAMM,mBAC3BC,MAAO,EACPC,aAAa,EACbC,QAAS,GACTC,YAAY,IAEhBV,EAAMW,KAAKC,KAAKC,KAAMT,EAAKU,SAAUT,GACrCQ,KAAKE,WAAaX,EAAKY,YACvBH,KAAKI,eAAgB,EACrBJ,KAAKK,kBAAmB,GA4B5B,OA1BAf,EAAWgB,UAAYC,OAAOC,OAAOrB,EAAMW,KAAKQ,YAC3BG,YAAcnB,EACnCA,EAAWgB,UAAUI,QACbrB,EAAe,IAAIF,EAAMwB,QACtB,SAAUC,EAAOC,GACpB,IAAIC,EAAMF,EAAMG,OAAOC,EAAIH,EAAgBG,EAAIJ,EAAMG,OAAOE,EAAIJ,EAAgBI,EAAIL,EAAMG,OAAOG,EAAIL,EAAgBK,GAAKN,EAAMO,SAAWN,EAAgBO,EACvJC,EAAMhC,EAAaiC,SACvBD,EAAI,GAAKP,EAAMD,EAAgBG,EAAIJ,EAAMG,OAAOC,EAChDK,EAAI,IAAMR,EAAgBG,EAAIJ,EAAMG,OAAOE,EAC3CI,EAAI,IAAMR,EAAgBG,EAAIJ,EAAMG,OAAOG,EAC3CG,EAAI,KAAOR,EAAgBG,GAAKJ,EAAMO,SACtCE,EAAI,IAAMR,EAAgBI,EAAIL,EAAMG,OAAOC,EAC3CK,EAAI,GAAKP,EAAMD,EAAgBI,EAAIL,EAAMG,OAAOE,EAChDI,EAAI,IAAMR,EAAgBI,EAAIL,EAAMG,OAAOG,EAC3CG,EAAI,KAAOR,EAAgBI,GAAKL,EAAMO,SACtCE,EAAI,IAAMR,EAAgBK,EAAIN,EAAMG,OAAOC,EAC3CK,EAAI,IAAMR,EAAgBK,EAAIN,EAAMG,OAAOE,EAC3CI,EAAI,IAAMP,EAAMD,EAAgBK,EAAIN,EAAMG,OAAOG,EACjDG,EAAI,KAAOR,EAAgBK,GAAKN,EAAMO,SACtCE,EAAI,IAAMR,EAAgBO,EAAIR,EAAMG,OAAOC,EAC3CK,EAAI,IAAMR,EAAgBO,EAAIR,EAAMG,OAAOE,EAC3CI,EAAI,KAAOR,EAAgBO,EAAIR,EAAMG,OAAOG,EAC5CG,EAAI,IAAMP,EAAMD,EAAgBO,GAAKR,EAAMO,SAC3CnB,KAAKuB,OAAOC,iBAAiBnC,EAAcW,KAAKE,cAGjDd,EAAOqC,QAAQnC,WAAaA","file":"../../objects/ShadowMesh.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    var ShadowMesh = function (mesh) {\r\n        var shadowMaterial = new THREE.MeshBasicMaterial({\r\n            color: 0,\r\n            transparent: true,\r\n            opacity: 0.6,\r\n            depthWrite: false\r\n        });\r\n        THREE.Mesh.call(this, mesh.geometry, shadowMaterial);\r\n        this.meshMatrix = mesh.matrixWorld;\r\n        this.frustumCulled = false;\r\n        this.matrixAutoUpdate = false;\r\n    };\r\n    ShadowMesh.prototype = Object.create(THREE.Mesh.prototype);\r\n    ShadowMesh.prototype.constructor = ShadowMesh;\r\n    ShadowMesh.prototype.update = function () {\r\n        var shadowMatrix = new THREE.Matrix4();\r\n        return function (plane, lightPosition4D) {\r\n            var dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\r\n            var sme = shadowMatrix.elements;\r\n            sme[0] = dot - lightPosition4D.x * plane.normal.x;\r\n            sme[4] = -lightPosition4D.x * plane.normal.y;\r\n            sme[8] = -lightPosition4D.x * plane.normal.z;\r\n            sme[12] = -lightPosition4D.x * -plane.constant;\r\n            sme[1] = -lightPosition4D.y * plane.normal.x;\r\n            sme[5] = dot - lightPosition4D.y * plane.normal.y;\r\n            sme[9] = -lightPosition4D.y * plane.normal.z;\r\n            sme[13] = -lightPosition4D.y * -plane.constant;\r\n            sme[2] = -lightPosition4D.z * plane.normal.x;\r\n            sme[6] = -lightPosition4D.z * plane.normal.y;\r\n            sme[10] = dot - lightPosition4D.z * plane.normal.z;\r\n            sme[14] = -lightPosition4D.z * -plane.constant;\r\n            sme[3] = -lightPosition4D.w * plane.normal.x;\r\n            sme[7] = -lightPosition4D.w * plane.normal.y;\r\n            sme[11] = -lightPosition4D.w * plane.normal.z;\r\n            sme[15] = dot - lightPosition4D.w * -plane.constant;\r\n            this.matrix.multiplyMatrices(shadowMatrix, this.meshMatrix);\r\n        };\r\n    }();\r\n    return threex.objects.ShadowMesh = ShadowMesh;\r\n});"]}