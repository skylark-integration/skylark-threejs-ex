{"version":3,"sources":["curves/NURBSSurface.js"],"names":["define","THREE","threex","NURBSUtils","NURBSSurface","degree1","degree2","knots1","knots2","controlPoints","this","len1","length","len2","i","j","point","Vector4","x","y","z","w","prototype","constructor","getPoint","t1","t2","target","u","v","calcSurfacePoint","curves"],"mappings":";;;;;;;AAAAA,QACI,kBACA,YACA,gBACD,SACCC,EACAC,EACAC,GAEA,aACA,IAAIC,EAAe,SAAUC,EAASC,EAASC,EAAQC,EAAQC,GAC3DC,KAAKL,QAAUA,EACfK,KAAKJ,QAAUA,EACfI,KAAKH,OAASA,EACdG,KAAKF,OAASA,EACdE,KAAKD,iBAGL,IAFA,IAAIE,EAAOJ,EAAOK,OAASP,EAAU,EACjCQ,EAAOL,EAAOI,OAASN,EAAU,EAC5BQ,EAAI,EAAGA,EAAIH,IAAQG,EAAG,CAC3BJ,KAAKD,cAAcK,MACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,IAAQE,EAAG,CAC3B,IAAIC,EAAQP,EAAcK,GAAGC,GAC7BL,KAAKD,cAAcK,GAAGC,GAAK,IAAId,EAAMgB,QAAQD,EAAME,EAAGF,EAAMG,EAAGH,EAAMI,EAAGJ,EAAMK,MAY1F,OARAjB,EAAakB,WACTC,YAAanB,EACboB,SAAU,SAAUC,EAAIC,EAAIC,GACxB,IAAIC,EAAIlB,KAAKH,OAAO,GAAKkB,GAAMf,KAAKH,OAAOG,KAAKH,OAAOK,OAAS,GAAKF,KAAKH,OAAO,IAC7EsB,EAAInB,KAAKF,OAAO,GAAKkB,GAAMhB,KAAKF,OAAOE,KAAKF,OAAOI,OAAS,GAAKF,KAAKF,OAAO,IACjFL,EAAW2B,iBAAiBpB,KAAKL,QAASK,KAAKJ,QAASI,KAAKH,OAAQG,KAAKF,OAAQE,KAAKD,cAAemB,EAAGC,EAAGF,KAG7GzB,EAAO6B,OAAO3B,aAAeA","file":"../../curves/NURBSSurface.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\",\r\n    './NURBSUtils'\r\n], function (\r\n    THREE,\r\n    threex,\r\n    NURBSUtils\r\n) {\r\n    'use strict';\r\n    var NURBSSurface = function (degree1, degree2, knots1, knots2, controlPoints) {\r\n        this.degree1 = degree1;\r\n        this.degree2 = degree2;\r\n        this.knots1 = knots1;\r\n        this.knots2 = knots2;\r\n        this.controlPoints = [];\r\n        var len1 = knots1.length - degree1 - 1;\r\n        var len2 = knots2.length - degree2 - 1;\r\n        for (var i = 0; i < len1; ++i) {\r\n            this.controlPoints[i] = [];\r\n            for (var j = 0; j < len2; ++j) {\r\n                var point = controlPoints[i][j];\r\n                this.controlPoints[i][j] = new THREE.Vector4(point.x, point.y, point.z, point.w);\r\n            }\r\n        }\r\n    };\r\n    NURBSSurface.prototype = {\r\n        constructor: NURBSSurface,\r\n        getPoint: function (t1, t2, target) {\r\n            var u = this.knots1[0] + t1 * (this.knots1[this.knots1.length - 1] - this.knots1[0]);\r\n            var v = this.knots2[0] + t2 * (this.knots2[this.knots2.length - 1] - this.knots2[0]);\r\n            NURBSUtils.calcSurfacePoint(this.degree1, this.degree2, this.knots1, this.knots2, this.controlPoints, u, v, target);\r\n        }\r\n    };\r\n    return threex.curves.NURBSSurface = NURBSSurface;\r\n});"]}