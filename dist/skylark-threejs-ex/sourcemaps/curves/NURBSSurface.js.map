{"version":3,"sources":["curves/NURBSSurface.js"],"names":["define","THREE","NURBSUtils","NURBSSurface","degree1","degree2","knots1","knots2","controlPoints","this","len1","length","len2","i","j","point","Vector4","x","y","z","w","prototype","constructor","getPoint","t1","t2","target","u","v","calcSurfacePoint"],"mappings":";;;;;;;AAAAA,QACI,kBACA,gBACD,SAAUC,EAAOC,GAChB,aACA,IAAIC,EAAe,SAAUC,EAASC,EAASC,EAAQC,EAAQC,GAC3DC,KAAKL,QAAUA,EACfK,KAAKJ,QAAUA,EACfI,KAAKH,OAASA,EACdG,KAAKF,OAASA,EACdE,KAAKD,iBAGL,IAFA,IAAIE,EAAOJ,EAAOK,OAASP,EAAU,EACjCQ,EAAOL,EAAOI,OAASN,EAAU,EAC5BQ,EAAI,EAAGA,EAAIH,IAAQG,EAAG,CAC3BJ,KAAKD,cAAcK,MACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,IAAQE,EAAG,CAC3B,IAAIC,EAAQP,EAAcK,GAAGC,GAC7BL,KAAKD,cAAcK,GAAGC,GAAK,IAAIb,EAAMe,QAAQD,EAAME,EAAGF,EAAMG,EAAGH,EAAMI,EAAGJ,EAAMK,MAY1F,OARAjB,EAAakB,WACTC,YAAanB,EACboB,SAAU,SAAUC,EAAIC,EAAIC,GACxB,IAAIC,EAAIlB,KAAKH,OAAO,GAAKkB,GAAMf,KAAKH,OAAOG,KAAKH,OAAOK,OAAS,GAAKF,KAAKH,OAAO,IAC7EsB,EAAInB,KAAKF,OAAO,GAAKkB,GAAMhB,KAAKF,OAAOE,KAAKF,OAAOI,OAAS,GAAKF,KAAKF,OAAO,IACjFL,EAAW2B,iBAAiBpB,KAAKL,QAASK,KAAKJ,QAASI,KAAKH,OAAQG,KAAKF,OAAQE,KAAKD,cAAemB,EAAGC,EAAGF,KAG7GvB","file":"../../curves/NURBSSurface.js","sourcesContent":["define([\n    \"skylark-threejs\",\n    './NURBSUtils'\n], function (THREE, NURBSUtils) {\n    'use strict';\n    var NURBSSurface = function (degree1, degree2, knots1, knots2, controlPoints) {\n        this.degree1 = degree1;\n        this.degree2 = degree2;\n        this.knots1 = knots1;\n        this.knots2 = knots2;\n        this.controlPoints = [];\n        var len1 = knots1.length - degree1 - 1;\n        var len2 = knots2.length - degree2 - 1;\n        for (var i = 0; i < len1; ++i) {\n            this.controlPoints[i] = [];\n            for (var j = 0; j < len2; ++j) {\n                var point = controlPoints[i][j];\n                this.controlPoints[i][j] = new THREE.Vector4(point.x, point.y, point.z, point.w);\n            }\n        }\n    };\n    NURBSSurface.prototype = {\n        constructor: NURBSSurface,\n        getPoint: function (t1, t2, target) {\n            var u = this.knots1[0] + t1 * (this.knots1[this.knots1.length - 1] - this.knots1[0]);\n            var v = this.knots2[0] + t2 * (this.knots2[this.knots2.length - 1] - this.knots2[0]);\n            NURBSUtils.calcSurfacePoint(this.degree1, this.degree2, this.knots1, this.knots2, this.controlPoints, u, v, target);\n        }\n    };\n    return NURBSSurface;\n});"]}