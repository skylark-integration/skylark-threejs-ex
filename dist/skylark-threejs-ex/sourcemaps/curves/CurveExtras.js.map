{"version":3,"sources":["curves/CurveExtras.js"],"names":["define","THREE","Curves","GrannyKnot","Curve","call","this","HeartCurve","scale","undefined","VivianiCurve","KnotCurve","HelixCurve","TrefoilKnot","TorusKnot","CinquefoilKnot","TrefoilPolynomialKnot","prototype","Object","create","constructor","getPoint","t","optionalTarget","point","Vector3","Math","PI","x","cos","sin","y","z","set","multiplyScalar","pow","a","t2","FigureEightPolynomialKnot","DecoratedTorusKnot4a","DecoratedTorusKnot4b","DecoratedTorusKnot5a","DecoratedTorusKnot5c","scaleTo","fi"],"mappings":"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","file":"../../curves/CurveExtras.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * A bunch of parametric curves\n\t * @author zz85\n\t *\n\t * Formulas collected from various sources\n\t * http://mathworld.wolfram.com/HeartCurve.html\n\t * http://mathdl.maa.org/images/upload_library/23/stemkoski/knots/page6.html\n\t * http://en.wikipedia.org/wiki/Viviani%27s_curve\n\t * http://mathdl.maa.org/images/upload_library/23/stemkoski/knots/page4.html\n\t * http://www.mi.sanu.ac.rs/vismath/taylorapril2011/Taylor.pdf\n\t * https://prideout.net/blog/old/blog/index.html@p=44.html\n\t */\n\n\tTHREE.Curves = ( function () {\n\n\t\t// GrannyKnot\n\n\t\tfunction GrannyKnot() {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t}\n\n\t\tGrannyKnot.prototype = Object.create( THREE.Curve.prototype );\n\t\tGrannyKnot.prototype.constructor = GrannyKnot;\n\n\t\tGrannyKnot.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tt = 2 * Math.PI * t;\n\n\t\t\tvar x = - 0.22 * Math.cos( t ) - 1.28 * Math.sin( t ) - 0.44 * Math.cos( 3 * t ) - 0.78 * Math.sin( 3 * t );\n\t\t\tvar y = - 0.1 * Math.cos( 2 * t ) - 0.27 * Math.sin( 2 * t ) + 0.38 * Math.cos( 4 * t ) + 0.46 * Math.sin( 4 * t );\n\t\t\tvar z = 0.7 * Math.cos( 3 * t ) - 0.4 * Math.sin( 3 * t );\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( 20 );\n\n\t\t};\n\n\t\t// HeartCurve\n\n\t\tfunction HeartCurve( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 5 : scale;\n\n\t\t}\n\n\t\tHeartCurve.prototype = Object.create( THREE.Curve.prototype );\n\t\tHeartCurve.prototype.constructor = HeartCurve;\n\n\t\tHeartCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tt *= 2 * Math.PI;\n\n\t\t\tvar x = 16 * Math.pow( Math.sin( t ), 3 );\n\t\t\tvar y = 13 * Math.cos( t ) - 5 * Math.cos( 2 * t ) - 2 * Math.cos( 3 * t ) - Math.cos( 4 * t );\n\t\t\tvar z = 0;\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\t// Viviani's Curve\n\n\t\tfunction VivianiCurve( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 70 : scale;\n\n\t\t}\n\n\t\tVivianiCurve.prototype = Object.create( THREE.Curve.prototype );\n\t\tVivianiCurve.prototype.constructor = VivianiCurve;\n\n\t\tVivianiCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tt = t * 4 * Math.PI; // normalized to 0..1\n\t\t\tvar a = this.scale / 2;\n\n\t\t\tvar x = a * ( 1 + Math.cos( t ) );\n\t\t\tvar y = a * Math.sin( t );\n\t\t\tvar z = 2 * a * Math.sin( t / 2 );\n\n\t\t\treturn point.set( x, y, z );\n\n\t\t};\n\n\t\t// KnotCurve\n\n\t\tfunction KnotCurve() {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t}\n\n\t\tKnotCurve.prototype = Object.create( THREE.Curve.prototype );\n\t\tKnotCurve.prototype.constructor = KnotCurve;\n\n\t\tKnotCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tt *= 2 * Math.PI;\n\n\t\t\tvar R = 10;\n\t\t\tvar s = 50;\n\n\t\t\tvar x = s * Math.sin( t );\n\t\t\tvar y = Math.cos( t ) * ( R + s * Math.cos( t ) );\n\t\t\tvar z = Math.sin( t ) * ( R + s * Math.cos( t ) );\n\n\t\t\treturn point.set( x, y, z );\n\n\t\t};\n\n\t\t// HelixCurve\n\n\t\tfunction HelixCurve() {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t}\n\n\t\tHelixCurve.prototype = Object.create( THREE.Curve.prototype );\n\t\tHelixCurve.prototype.constructor = HelixCurve;\n\n\t\tHelixCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tvar a = 30; // radius\n\t\t\tvar b = 150; // height\n\n\t\t\tvar t2 = 2 * Math.PI * t * b / 30;\n\n\t\t\tvar x = Math.cos( t2 ) * a;\n\t\t\tvar y = Math.sin( t2 ) * a;\n\t\t\tvar z = b * t;\n\n\t\t\treturn point.set( x, y, z );\n\n\t\t};\n\n\t\t// TrefoilKnot\n\n\t\tfunction TrefoilKnot( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 10 : scale;\n\n\t\t}\n\n\t\tTrefoilKnot.prototype = Object.create( THREE.Curve.prototype );\n\t\tTrefoilKnot.prototype.constructor = TrefoilKnot;\n\n\t\tTrefoilKnot.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tt *= Math.PI * 2;\n\n\t\t\tvar x = ( 2 + Math.cos( 3 * t ) ) * Math.cos( 2 * t );\n\t\t\tvar y = ( 2 + Math.cos( 3 * t ) ) * Math.sin( 2 * t );\n\t\t\tvar z = Math.sin( 3 * t );\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\t// TorusKnot\n\n\t\tfunction TorusKnot( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 10 : scale;\n\n\t\t}\n\n\t\tTorusKnot.prototype = Object.create( THREE.Curve.prototype );\n\t\tTorusKnot.prototype.constructor = TorusKnot;\n\n\t\tTorusKnot.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tvar p = 3;\n\t\t\tvar q = 4;\n\n\t\t\tt *= Math.PI * 2;\n\n\t\t\tvar x = ( 2 + Math.cos( q * t ) ) * Math.cos( p * t );\n\t\t\tvar y = ( 2 + Math.cos( q * t ) ) * Math.sin( p * t );\n\t\t\tvar z = Math.sin( q * t );\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\t// CinquefoilKnot\n\n\t\tfunction CinquefoilKnot( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 10 : scale;\n\n\t\t}\n\n\t\tCinquefoilKnot.prototype = Object.create( THREE.Curve.prototype );\n\t\tCinquefoilKnot.prototype.constructor = CinquefoilKnot;\n\n\t\tCinquefoilKnot.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tvar p = 2;\n\t\t\tvar q = 5;\n\n\t\t\tt *= Math.PI * 2;\n\n\t\t\tvar x = ( 2 + Math.cos( q * t ) ) * Math.cos( p * t );\n\t\t\tvar y = ( 2 + Math.cos( q * t ) ) * Math.sin( p * t );\n\t\t\tvar z = Math.sin( q * t );\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\t// TrefoilPolynomialKnot\n\n\t\tfunction TrefoilPolynomialKnot( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 10 : scale;\n\n\t\t}\n\n\t\tTrefoilPolynomialKnot.prototype = Object.create( THREE.Curve.prototype );\n\t\tTrefoilPolynomialKnot.prototype.constructor = TrefoilPolynomialKnot;\n\n\t\tTrefoilPolynomialKnot.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tt = t * 4 - 2;\n\n\t\t\tvar x = Math.pow( t, 3 ) - 3 * t;\n\t\t\tvar y = Math.pow( t, 4 ) - 4 * t * t;\n\t\t\tvar z = 1 / 5 * Math.pow( t, 5 ) - 2 * t;\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\tvar scaleTo = function ( x, y, t ) {\n\n\t\t\tvar r = y - x;\n\t\t\treturn t * r + x;\n\n\t\t};\n\n\t\t// FigureEightPolynomialKnot\n\n\t\tfunction FigureEightPolynomialKnot( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 1 : scale;\n\n\t\t}\n\n\t\tFigureEightPolynomialKnot.prototype = Object.create( THREE.Curve.prototype );\n\t\tFigureEightPolynomialKnot.prototype.constructor = FigureEightPolynomialKnot;\n\n\t\tFigureEightPolynomialKnot.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tt = scaleTo( - 4, 4, t );\n\n\t\t\tvar x = 2 / 5 * t * ( t * t - 7 ) * ( t * t - 10 );\n\t\t\tvar y = Math.pow( t, 4 ) - 13 * t * t;\n\t\t\tvar z = 1 / 10 * t * ( t * t - 4 ) * ( t * t - 9 ) * ( t * t - 12 );\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\t// DecoratedTorusKnot4a\n\n\t\tfunction DecoratedTorusKnot4a( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 40 : scale;\n\n\t\t}\n\n\t\tDecoratedTorusKnot4a.prototype = Object.create( THREE.Curve.prototype );\n\t\tDecoratedTorusKnot4a.prototype.constructor = DecoratedTorusKnot4a;\n\n\t\tDecoratedTorusKnot4a.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tt *= Math.PI * 2;\n\n\t\t\tvar x = Math.cos( 2 * t ) * ( 1 + 0.6 * ( Math.cos( 5 * t ) + 0.75 * Math.cos( 10 * t ) ) );\n\t\t\tvar y = Math.sin( 2 * t ) * ( 1 + 0.6 * ( Math.cos( 5 * t ) + 0.75 * Math.cos( 10 * t ) ) );\n\t\t\tvar z = 0.35 * Math.sin( 5 * t );\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\t// DecoratedTorusKnot4b\n\n\t\tfunction DecoratedTorusKnot4b( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 40 : scale;\n\n\t\t}\n\n\t\tDecoratedTorusKnot4b.prototype = Object.create( THREE.Curve.prototype );\n\t\tDecoratedTorusKnot4b.prototype.constructor = DecoratedTorusKnot4b;\n\n\t\tDecoratedTorusKnot4b.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tvar fi = t * Math.PI * 2;\n\n\t\t\tvar x = Math.cos( 2 * fi ) * ( 1 + 0.45 * Math.cos( 3 * fi ) + 0.4 * Math.cos( 9 * fi ) );\n\t\t\tvar y = Math.sin( 2 * fi ) * ( 1 + 0.45 * Math.cos( 3 * fi ) + 0.4 * Math.cos( 9 * fi ) );\n\t\t\tvar z = 0.2 * Math.sin( 9 * fi );\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\t// DecoratedTorusKnot5a\n\n\t\tfunction DecoratedTorusKnot5a( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 40 : scale;\n\n\t\t}\n\n\t\tDecoratedTorusKnot5a.prototype = Object.create( THREE.Curve.prototype );\n\t\tDecoratedTorusKnot5a.prototype.constructor = DecoratedTorusKnot5a;\n\n\t\tDecoratedTorusKnot5a.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tvar fi = t * Math.PI * 2;\n\n\t\t\tvar x = Math.cos( 3 * fi ) * ( 1 + 0.3 * Math.cos( 5 * fi ) + 0.5 * Math.cos( 10 * fi ) );\n\t\t\tvar y = Math.sin( 3 * fi ) * ( 1 + 0.3 * Math.cos( 5 * fi ) + 0.5 * Math.cos( 10 * fi ) );\n\t\t\tvar z = 0.2 * Math.sin( 20 * fi );\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\t// DecoratedTorusKnot5c\n\n\t\tfunction DecoratedTorusKnot5c( scale ) {\n\n\t\t\tTHREE.Curve.call( this );\n\n\t\t\tthis.scale = ( scale === undefined ) ? 40 : scale;\n\n\t\t}\n\n\t\tDecoratedTorusKnot5c.prototype = Object.create( THREE.Curve.prototype );\n\t\tDecoratedTorusKnot5c.prototype.constructor = DecoratedTorusKnot5c;\n\n\t\tDecoratedTorusKnot5c.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\t\tvar fi = t * Math.PI * 2;\n\n\t\t\tvar x = Math.cos( 4 * fi ) * ( 1 + 0.5 * ( Math.cos( 5 * fi ) + 0.4 * Math.cos( 20 * fi ) ) );\n\t\t\tvar y = Math.sin( 4 * fi ) * ( 1 + 0.5 * ( Math.cos( 5 * fi ) + 0.4 * Math.cos( 20 * fi ) ) );\n\t\t\tvar z = 0.35 * Math.sin( 15 * fi );\n\n\t\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t\t};\n\n\t\treturn {\n\t\t\tGrannyKnot: GrannyKnot,\n\t\t\tHeartCurve: HeartCurve,\n\t\t\tVivianiCurve: VivianiCurve,\n\t\t\tKnotCurve: KnotCurve,\n\t\t\tHelixCurve: HelixCurve,\n\t\t\tTrefoilKnot: TrefoilKnot,\n\t\t\tTorusKnot: TorusKnot,\n\t\t\tCinquefoilKnot: CinquefoilKnot,\n\t\t\tTrefoilPolynomialKnot: TrefoilPolynomialKnot,\n\t\t\tFigureEightPolynomialKnot: FigureEightPolynomialKnot,\n\t\t\tDecoratedTorusKnot4a: DecoratedTorusKnot4a,\n\t\t\tDecoratedTorusKnot4b: DecoratedTorusKnot4b,\n\t\t\tDecoratedTorusKnot5a: DecoratedTorusKnot5a,\n\t\t\tDecoratedTorusKnot5c: DecoratedTorusKnot5c\n\t\t};\n\n\t} )();\n\treturn THREE.Curves;\n});\n"]}