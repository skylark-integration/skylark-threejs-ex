{"version":3,"sources":["loaders/OBJLoader.js"],"names":["define","THREE","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","map_use_pattern","manager","Loader","call","this","materials","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","text","parse","setMaterials","state","objects","object","vertices","normals","colors","uvs","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","indexOf","replace","lines","split","line","lineFirstChar","result","trimLeft","i","trim","charAt","data","parseFloat","vertexData","substr","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","console","warn","toLowerCase","container","Group","concat","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","setAttribute","Float32BufferAttribute","computeVertexNormals","mesh","createdMaterials","miLen","materialHash","sourceMaterial","LineBasicMaterial","PointsMaterial","materialPoints","size","sizeAttenuation","Material","copy","color","map","materialLine","MeshPhongMaterial","flatShading","vertexColors","addGroup","LineSegments","Points","Mesh","add"],"mappings":"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","file":"../../loaders/OBJLoader.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.OBJLoader = ( function () {\n\n\t\t// o object_name | g group_name\n\t\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t\t// mtllib file_reference\n\t\tvar material_library_pattern = /^mtllib /;\n\t\t// usemtl material_name\n\t\tvar material_use_pattern = /^usemtl /;\n\t\t// usemap map_name\n\t\tvar map_use_pattern = /^usemap /;\n\n\t\tfunction ParserState() {\n\n\t\t\tvar state = {\n\t\t\t\tobjects: [],\n\t\t\t\tobject: {},\n\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\n\t\t\t\tmaterials: {},\n\t\t\t\tmaterialLibraries: [],\n\n\t\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.object = {\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\t\tgeometry: {\n\t\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\t\tuvs: []\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmaterials: [],\n\t\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// Inherit previous objects material.\n\t\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t\t},\n\n\t\t\t\tfinalize: function () {\n\n\t\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t\t},\n\n\t\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t\t},\n\n\t\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t\t},\n\n\t\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\t\tvar src = this.vertices;\n\t\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t\t},\n\n\t\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\t\tvar src = this.vertices;\n\t\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t\t},\n\n\t\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\t\tvar src = this.vertices;\n\t\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t\t},\n\n\t\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\t\tvar src = this.normals;\n\t\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t\t},\n\n\t\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\t\tvar src = this.colors;\n\t\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t\t},\n\n\t\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\t\tvar src = this.uvs;\n\t\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t\t},\n\n\t\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\t\tvar src = this.uvs;\n\t\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t\t},\n\n\t\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\t\tthis.addVertex( ia, ib, ic );\n\n\t\t\t\t\tif ( this.colors.length > 0 ) {\n\n\t\t\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\t\tvar uvLen = this.uvs.length;\n\t\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\t\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\t\t// Normals are many times the same. If so, skip function call and parseInt.\n\t\t\t\t\t\tvar nLen = this.normals.length;\n\t\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\n\t\t\t\t\t\tib = na === nb ? ia : this.parseNormalIndex( nb, nLen );\n\t\t\t\t\t\tic = na === nc ? ia : this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\t\tthis.addVertexPoint( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tstate.startObject( '', false );\n\n\t\t\treturn state;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction OBJLoader( manager ) {\n\n\t\t\tTHREE.Loader.call( this, manager );\n\n\t\t\tthis.materials = null;\n\n\t\t}\n\n\t\tOBJLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\t\t\tconstructor: OBJLoader,\n\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\t\t\tloader.setPath( this.path );\n\t\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t},\n\n\t\t\tsetMaterials: function ( materials ) {\n\n\t\t\t\tthis.materials = materials;\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\tparse: function ( text ) {\n\n\t\t\t\tvar state = new ParserState();\n\n\t\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t\t}\n\n\t\t\t\tvar lines = text.split( '\\n' );\n\t\t\t\tvar line = '', lineFirstChar = '';\n\t\t\t\tvar lineLength = 0;\n\t\t\t\tvar result = [];\n\n\t\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\t\tline = lines[ i ];\n\n\t\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\t\tlineLength = line.length;\n\n\t\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( \" \" );\n\t\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\t\tif ( line.indexOf( \"/\" ) === - 1 ) {\n\n\t\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( \"/\" );\n\n\t\t\t\t\t\t\t\tif ( parts[ 0 ] !== \"\" ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\t\tif ( parts[ 1 ] !== \"\" ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\t\tvar pointData = lineData.split( \" \" );\n\n\t\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t\t// o object_name\n\t\t\t\t\t\t// or\n\t\t\t\t\t\t// g group_name\n\n\t\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\t\tvar name = ( \" \" + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t\t// material\n\n\t\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t\t// mtl file\n\n\t\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t\t} else if ( map_use_pattern.test( line ) ) {\n\n\t\t\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t\t * or\n\t\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t\t * than 0.\"\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.finalize();\n\n\t\t\t\tvar container = new THREE.Group();\n\t\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\t\tvar geometry = object.geometry;\n\t\t\t\t\tvar materials = object.materials;\n\t\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\t\tvar buffergeometry = new THREE.BufferGeometry();\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbuffergeometry.computeVertexNormals();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new THREE.Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create materials\n\n\t\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tvar materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\t\tvar material = state.materials[ materialHash ];\n\n\t\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof THREE.LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\t\tvar materialLine = new THREE.LineBasicMaterial();\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof THREE.PointsMaterial ) ) {\n\n\t\t\t\t\t\t\t\tvar materialPoints = new THREE.PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\t\tmaterial = new THREE.LineBasicMaterial();\n\n\t\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\t\tmaterial = new THREE.PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = object.name;\n\n\t\t\t\t\tcontainer.add( mesh );\n\n\t\t\t\t}\n\n\t\t\t\treturn container;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn OBJLoader;\n\n\t} )();\n\t\n\treturn THREE.OBJLoader;\n});\n"]}