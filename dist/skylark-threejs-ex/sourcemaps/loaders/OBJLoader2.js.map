{"version":3,"sources":["loaders/OBJLoader2.js"],"names":["define","THREE","threex","OBJLoader2Parser","MeshReceiver","MaterialHandler","OBJLoader2","manager","Loader","call","this","parser","modelName","instanceNo","baseObject3d","Object3D","materialHandler","meshReceiver","scope","setCallbackOnAssetAvailable","payload","_onAssetAvailable","OBJLOADER2_VERSION","console","info","prototype","Object","assign","create","constructor","setLogging","enabled","debug","setMaterialPerSmoothingGroup","materialPerSmoothingGroup","setUseOAsMesh","useOAsMesh","setUseIndices","useIndices","setDisregardNormals","disregardNormals","setModelName","setBaseObject3d","undefined","addMaterials","materials","overrideExisting","onAssetAvailable","setCallbackOnProgress","onProgress","setCallbackOnError","onError","setCallbackOnLoad","onLoad","setCallbackOnMeshAlter","onMeshAlter","_setCallbacks","callbacks","setCallbackOnLoadMaterials","onLoadMaterials","load","url","onFileLoadProgress","Function","errorMessage","event","currentTarget","statusText","responseURL","urlFull","URL","window","location","href","filename","urlParts","split","length","path","slice","join","numericalValueRef","numericalValue","lengthComputable","loaded","total","output","toFixed","fileLoader","FileLoader","setPath","resourcePath","setResponseType","content","parse","logging","time","createDefaultMaterials","setMaterials","getMaterials","ArrayBuffer","Uint8Array","execute","String","executeLegacy","timeEnd","cmd","type","meshes","buildMeshes","mesh","add","addPayloadMaterials","loaders"],"mappings":"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","file":"../../loaders/OBJLoader2.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\",\r\n    './obj2/OBJLoader2Parser',\r\n    './obj2/shared/MeshReceiver',\r\n    './obj2/shared/MaterialHandler'\r\n], function (\r\n    THREE,\r\n    threex, \r\n    OBJLoader2Parser, \r\n    MeshReceiver, \r\n    MaterialHandler\r\n) {\r\n    'use strict';\r\n    const OBJLoader2 = function (manager) {\r\n        THREE.Loader.call(this, manager);\r\n        this.parser = new OBJLoader2Parser();\r\n        this.modelName = '';\r\n        this.instanceNo = 0;\r\n        this.baseObject3d = new THREE.Object3D();\r\n        this.materialHandler = new MaterialHandler();\r\n        this.meshReceiver = new MeshReceiver(this.materialHandler);\r\n        let scope = this;\r\n        let defaultOnAssetAvailable = function (payload) {\r\n            scope._onAssetAvailable(payload);\r\n        };\r\n        this.parser.setCallbackOnAssetAvailable(defaultOnAssetAvailable);\r\n    };\r\n    OBJLoader2.OBJLOADER2_VERSION = '3.2.0';\r\n    console.info('Using OBJLoader2 version: ' + OBJLoader2.OBJLOADER2_VERSION);\r\n    OBJLoader2.prototype = Object.assign(Object.create(THREE.Loader.prototype), {\r\n        constructor: OBJLoader2,\r\n        setLogging: function (enabled, debug) {\r\n            this.parser.setLogging(enabled, debug);\r\n            return this;\r\n        },\r\n        setMaterialPerSmoothingGroup: function (materialPerSmoothingGroup) {\r\n            this.parser.setMaterialPerSmoothingGroup(materialPerSmoothingGroup);\r\n            return this;\r\n        },\r\n        setUseOAsMesh: function (useOAsMesh) {\r\n            this.parser.setUseOAsMesh(useOAsMesh);\r\n            return this;\r\n        },\r\n        setUseIndices: function (useIndices) {\r\n            this.parser.setUseIndices(useIndices);\r\n            return this;\r\n        },\r\n        setDisregardNormals: function (disregardNormals) {\r\n            this.parser.setDisregardNormals(disregardNormals);\r\n            return this;\r\n        },\r\n        setModelName: function (modelName) {\r\n            this.modelName = modelName ? modelName : this.modelName;\r\n            return this;\r\n        },\r\n        setBaseObject3d: function (baseObject3d) {\r\n            this.baseObject3d = baseObject3d === undefined || baseObject3d === null ? this.baseObject3d : baseObject3d;\r\n            return this;\r\n        },\r\n        addMaterials: function (materials, overrideExisting) {\r\n            this.materialHandler.addMaterials(materials, overrideExisting);\r\n            return this;\r\n        },\r\n        setCallbackOnAssetAvailable: function (onAssetAvailable) {\r\n            this.parser.setCallbackOnAssetAvailable(onAssetAvailable);\r\n            return this;\r\n        },\r\n        setCallbackOnProgress: function (onProgress) {\r\n            this.parser.setCallbackOnProgress(onProgress);\r\n            return this;\r\n        },\r\n        setCallbackOnError: function (onError) {\r\n            this.parser.setCallbackOnError(onError);\r\n            return this;\r\n        },\r\n        setCallbackOnLoad: function (onLoad) {\r\n            this.parser.setCallbackOnLoad(onLoad);\r\n            return this;\r\n        },\r\n        setCallbackOnMeshAlter: function (onMeshAlter) {\r\n            this.meshReceiver._setCallbacks(this.parser.callbacks.onProgress, onMeshAlter);\r\n            return this;\r\n        },\r\n        setCallbackOnLoadMaterials: function (onLoadMaterials) {\r\n            this.materialHandler._setCallbacks(onLoadMaterials);\r\n            return this;\r\n        },\r\n        load: function (url, onLoad, onFileLoadProgress, onError, onMeshAlter) {\r\n            let scope = this;\r\n            if (onLoad === null || onLoad === undefined || !(onLoad instanceof Function)) {\r\n                let errorMessage = 'onLoad is not a function! Aborting...';\r\n                scope.parser.callbacks.onError(errorMessage);\r\n                throw errorMessage;\r\n            } else {\r\n                this.parser.setCallbackOnLoad(onLoad);\r\n            }\r\n            if (onError === null || onError === undefined || !(onError instanceof Function)) {\r\n                onError = function (event) {\r\n                    let errorMessage = event;\r\n                    if (event.currentTarget && event.currentTarget.statusText !== null) {\r\n                        errorMessage = 'Error occurred while downloading!\\nurl: ' + event.currentTarget.responseURL + '\\nstatus: ' + event.currentTarget.statusText;\r\n                    }\r\n                    scope.parser.callbacks.onError(errorMessage);\r\n                };\r\n            }\r\n            if (!url) {\r\n                onError('An invalid url was provided. Unable to continue!');\r\n            }\r\n            let urlFull = new URL(url, window.location.href).href;\r\n            let filename = urlFull;\r\n            let urlParts = urlFull.split('/');\r\n            if (urlParts.length > 2) {\r\n                filename = urlParts[urlParts.length - 1];\r\n                this.path = urlParts.slice(0, urlParts.length - 1).join('/') + '/';\r\n            }\r\n            if (onFileLoadProgress === null || onFileLoadProgress === undefined || !(onFileLoadProgress instanceof Function)) {\r\n                let numericalValueRef = 0;\r\n                let numericalValue = 0;\r\n                onFileLoadProgress = function (event) {\r\n                    if (!event.lengthComputable)\r\n                        return;\r\n                    numericalValue = event.loaded / event.total;\r\n                    if (numericalValue > numericalValueRef) {\r\n                        numericalValueRef = numericalValue;\r\n                        let output = 'Download of \"' + url + '\": ' + (numericalValue * 100).toFixed(2) + '%';\r\n                        scope.parser.callbacks.onProgress('progressLoad', output, numericalValue);\r\n                    }\r\n                };\r\n            }\r\n            this.setCallbackOnMeshAlter(onMeshAlter);\r\n            let fileLoaderOnLoad = function (content) {\r\n                scope.parser.callbacks.onLoad(scope.parse(content), 'OBJLoader2#load: Parsing completed');\r\n            };\r\n            let fileLoader = new THREE.FileLoader(this.manager);\r\n            fileLoader.setPath(this.path || this.resourcePath);\r\n            fileLoader.setResponseType('arraybuffer');\r\n            fileLoader.load(filename, fileLoaderOnLoad, onFileLoadProgress, onError);\r\n        },\r\n        parse: function (content) {\r\n            if (content === null || content === undefined) {\r\n                throw 'Provided content is not a valid ArrayBuffer or String. Unable to continue parsing';\r\n            }\r\n            if (this.parser.logging.enabled) {\r\n                console.time('OBJLoader parse: ' + this.modelName);\r\n            }\r\n            this.materialHandler.createDefaultMaterials(false);\r\n            this.parser.setMaterials(this.materialHandler.getMaterials());\r\n            if (content instanceof ArrayBuffer || content instanceof Uint8Array) {\r\n                if (this.parser.logging.enabled)\r\n                    console.info('Parsing arrayBuffer...');\r\n                this.parser.execute(content);\r\n            } else if (typeof content === 'string' || content instanceof String) {\r\n                if (this.parser.logging.enabled)\r\n                    console.info('Parsing text...');\r\n                this.parser.executeLegacy(content);\r\n            } else {\r\n                this.parser.callbacks.onError('Provided content was neither of type String nor Uint8Array! Aborting...');\r\n            }\r\n            if (this.parser.logging.enabled) {\r\n                console.timeEnd('OBJLoader parse: ' + this.modelName);\r\n            }\r\n            return this.baseObject3d;\r\n        },\r\n        _onAssetAvailable: function (payload) {\r\n            if (payload.cmd !== 'assetAvailable')\r\n                return;\r\n            if (payload.type === 'mesh') {\r\n                let meshes = this.meshReceiver.buildMeshes(payload);\r\n                for (let mesh of meshes) {\r\n                    this.baseObject3d.add(mesh);\r\n                }\r\n            } else if (payload.type === 'material') {\r\n                this.materialHandler.addPayloadMaterials(payload);\r\n            }\r\n        }\r\n    });\r\n    return threex.loaders.OBJLoader2 = OBJLoader2;\r\n});"]}