{"version":3,"sources":["loaders/MD2Loader.js"],"names":["define","THREE","threex","normalData","MD2Loader","manager","Loader","call","this","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setResponseType","buffer","parse","data","DataView","header","headerNames","i","length","getInt32","ident","version","offset_end","byteLength","geometry","BufferGeometry","uvsTemp","offset","offset_st","l","num_st","u","getInt16","v","push","skinwidth","skinheight","offset_tris","vertexIndices","uvIndices","num_tris","getUint16","translation","Vector3","scale","string","frames","offset_frames","num_frames","set","getFloat32","j","character","getUint8","frame","name","String","fromCharCode","apply","vertices","normals","num_vertices","x","y","z","n","positions","uvs","verticesTemp","normalsTemp","stride","nx","ny","nz","setAttribute","Float32BufferAttribute","morphPositions","morphNormals","attributeName","jl","positionAttribute","normalAttribute","morphAttributes","position","normal","morphTargetsRelative","animations","AnimationClip","CreateClipsFromMorphTargetSequences","console","error","loaders"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aACA,IAeYC,EAfRC,EAAY,SAAUC,GACtBJ,EAAMK,OAAOC,KAAKC,KAAMH,IAk9B5B,OAh9BAD,EAAUK,UAAYC,OAAOC,OAAOD,OAAOE,OAAOX,EAAMK,OAAOG,YAC3DI,YAAaT,EACbU,KAAM,SAAUC,EAAKC,EAAQC,EAAYC,GACrC,IAAIC,EAAQX,KACRY,EAAS,IAAInB,EAAMoB,WAAWF,EAAMd,SACxCe,EAAOE,QAAQH,EAAMI,MACrBH,EAAOI,gBAAgB,eACvBJ,EAAON,KAAKC,EAAK,SAAUU,GACvBT,EAAOG,EAAMO,MAAMD,KACpBR,EAAYC,IAEnBQ,OACQvB,KAEK,QACD,EACA,WAGC,QACD,QACA,WAGC,QACD,EACA,WAGC,QACD,GACA,WAGC,OACD,QACA,UAGA,EACA,EACA,IAGA,EACA,QACA,WAGC,QACD,QACA,UAGA,QACA,QACA,UAGA,EACA,QACA,UAGA,QACA,GACA,UAGA,QACA,EACA,UAGA,QACA,EACA,UAGA,QACA,QACA,UAGA,OACA,QACA,WAGC,QACD,QACA,WAGC,QACD,QACA,MAGC,QACD,QACA,WAGC,QACD,QACA,KAGC,QACD,QACA,WAGC,QACD,QACA,WAGC,QACD,QACA,WAGC,GACD,QACA,WAGC,QACD,QACA,WAGC,QACD,QACA,WAGC,QACD,SACC,WAGA,GACD,SACC,WAGA,QACD,QACA,IAGA,EACA,SACC,WAGA,QACD,SACC,UAGD,EACA,SACC,WAGA,QACD,SACC,SAGD,EACA,EACA,IAGA,EACA,QACA,WAGC,QACD,QACA,SAGA,QACA,QACA,UAGA,QACA,QACA,SAGA,GACA,QACA,UAGA,QACA,SACC,UAGD,QACA,SACC,SAGD,GACA,SACC,UAGD,QACA,QACA,IAGA,QACA,QACA,UAGA,QACA,SACC,UAGD,QACA,QACA,IAGA,QACA,QACA,UAGA,QACA,QACA,UAGA,QACA,QACA,UAGA,QACA,QACA,KAGA,QACA,QACA,UAGA,QACA,QACA,UAGA,QACA,QACA,IAGA,EACA,EACA,IAGA,QACA,OACA,UAGA,SACC,QACD,IAGA,SACC,QACD,IAGA,SACC,QACD,UAGA,SACC,OACD,UAGA,SACC,QACD,KAGA,SACC,QACD,UAGA,QACA,EACA,UAGA,QACA,SACC,UAGD,QACA,SACC,KAGD,QACA,QACC,UAGD,QACA,GACC,UAGD,QACA,SACC,UAGD,SACC,SACA,UAGD,QACA,GACC,UAGD,SACC,SACA,KAGD,SACC,SACA,UAGD,SACC,QACA,UAGD,QACA,SACC,UAGD,QACA,IACC,UAGD,QACA,SACC,UAGD,QACA,SACC,UAGD,QACA,SACC,UAGD,QACA,SACC,WAGA,QACD,SACC,WAGA,QACD,IACC,UAGD,EACA,SACC,WAGA,QACD,GACC,WAGA,QACD,SACC,WAGA,QACD,GACC,WAGA,OACD,SACC,UAGD,EACA,GACC,IAGD,QACA,GACC,UAGD,OACA,SACC,WAGA,SACA,SACA,WAGA,SACA,IACA,WAGA,QACA,SACA,UAGD,GACC,SACA,WAGA,SACA,SACA,UAGD,SACC,SACA,UAGD,GACC,SACA,UAGD,SACC,IACA,UAGD,SACC,SACA,UAGD,QACC,SACA,UAGD,SACC,SACA,UAGD,IACC,SACA,UAGD,SACC,SACA,UAGD,SACC,SACA,UAGD,SACC,SACA,UAGD,SACC,SACA,UAGD,GACC,SACA,UAGD,GACC,EACD,IAGA,SACC,SACA,SAGD,GACC,QACD,UAGA,GACC,QACD,UAGA,SACC,QACD,UAGA,SACC,QACD,SAGA,IACC,QACD,UAGA,SACC,QACD,UAGA,SACC,QACD,KAGC,SACA,SACA,WAGA,IACA,SACA,WAGA,SACA,SACA,UAGA,SACA,QACD,KAGC,SACA,SACA,WAGA,SACA,QACD,WAGC,SACA,QACD,KAGC,IACA,QACD,WAGC,SACA,QACD,WAGC,SACA,QACD,UAGC,SACA,QACD,WAGC,SACA,QACD,MAGC,SACA,QACD,WAGC,SACA,QACD,WAGC,SACA,QACD,WAGC,SACA,QACD,WAGC,SACA,GACD,WAGC,SACA,QACD,WAGC,SACA,QACD,WAGC,QACA,QACD,UAGA,S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","file":"../../loaders/MD2Loader.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    var MD2Loader = function (manager) {\r\n        THREE.Loader.call(this, manager);\r\n    };\r\n    MD2Loader.prototype = Object.assign(Object.create(THREE.Loader.prototype), {\r\n        constructor: MD2Loader,\r\n        load: function (url, onLoad, onProgress, onError) {\r\n            var scope = this;\r\n            var loader = new THREE.FileLoader(scope.manager);\r\n            loader.setPath(scope.path);\r\n            loader.setResponseType('arraybuffer');\r\n            loader.load(url, function (buffer) {\r\n                onLoad(scope.parse(buffer));\r\n            }, onProgress, onError);\r\n        },\r\n        parse: function () {\r\n            var normalData = [\r\n                [\r\n                    -0.525731,\r\n                    0,\r\n                    0.850651\r\n                ],\r\n                [\r\n                    -0.442863,\r\n                    0.238856,\r\n                    0.864188\r\n                ],\r\n                [\r\n                    -0.295242,\r\n                    0,\r\n                    0.955423\r\n                ],\r\n                [\r\n                    -0.309017,\r\n                    0.5,\r\n                    0.809017\r\n                ],\r\n                [\r\n                    -0.16246,\r\n                    0.262866,\r\n                    0.951056\r\n                ],\r\n                [\r\n                    0,\r\n                    0,\r\n                    1\r\n                ],\r\n                [\r\n                    0,\r\n                    0.850651,\r\n                    0.525731\r\n                ],\r\n                [\r\n                    -0.147621,\r\n                    0.716567,\r\n                    0.681718\r\n                ],\r\n                [\r\n                    0.147621,\r\n                    0.716567,\r\n                    0.681718\r\n                ],\r\n                [\r\n                    0,\r\n                    0.525731,\r\n                    0.850651\r\n                ],\r\n                [\r\n                    0.309017,\r\n                    0.5,\r\n                    0.809017\r\n                ],\r\n                [\r\n                    0.525731,\r\n                    0,\r\n                    0.850651\r\n                ],\r\n                [\r\n                    0.295242,\r\n                    0,\r\n                    0.955423\r\n                ],\r\n                [\r\n                    0.442863,\r\n                    0.238856,\r\n                    0.864188\r\n                ],\r\n                [\r\n                    0.16246,\r\n                    0.262866,\r\n                    0.951056\r\n                ],\r\n                [\r\n                    -0.681718,\r\n                    0.147621,\r\n                    0.716567\r\n                ],\r\n                [\r\n                    -0.809017,\r\n                    0.309017,\r\n                    0.5\r\n                ],\r\n                [\r\n                    -0.587785,\r\n                    0.425325,\r\n                    0.688191\r\n                ],\r\n                [\r\n                    -0.850651,\r\n                    0.525731,\r\n                    0\r\n                ],\r\n                [\r\n                    -0.864188,\r\n                    0.442863,\r\n                    0.238856\r\n                ],\r\n                [\r\n                    -0.716567,\r\n                    0.681718,\r\n                    0.147621\r\n                ],\r\n                [\r\n                    -0.688191,\r\n                    0.587785,\r\n                    0.425325\r\n                ],\r\n                [\r\n                    -0.5,\r\n                    0.809017,\r\n                    0.309017\r\n                ],\r\n                [\r\n                    -0.238856,\r\n                    0.864188,\r\n                    0.442863\r\n                ],\r\n                [\r\n                    -0.425325,\r\n                    0.688191,\r\n                    0.587785\r\n                ],\r\n                [\r\n                    -0.716567,\r\n                    0.681718,\r\n                    -0.147621\r\n                ],\r\n                [\r\n                    -0.5,\r\n                    0.809017,\r\n                    -0.309017\r\n                ],\r\n                [\r\n                    -0.525731,\r\n                    0.850651,\r\n                    0\r\n                ],\r\n                [\r\n                    0,\r\n                    0.850651,\r\n                    -0.525731\r\n                ],\r\n                [\r\n                    -0.238856,\r\n                    0.864188,\r\n                    -0.442863\r\n                ],\r\n                [\r\n                    0,\r\n                    0.955423,\r\n                    -0.295242\r\n                ],\r\n                [\r\n                    -0.262866,\r\n                    0.951056,\r\n                    -0.16246\r\n                ],\r\n                [\r\n                    0,\r\n                    1,\r\n                    0\r\n                ],\r\n                [\r\n                    0,\r\n                    0.955423,\r\n                    0.295242\r\n                ],\r\n                [\r\n                    -0.262866,\r\n                    0.951056,\r\n                    0.16246\r\n                ],\r\n                [\r\n                    0.238856,\r\n                    0.864188,\r\n                    0.442863\r\n                ],\r\n                [\r\n                    0.262866,\r\n                    0.951056,\r\n                    0.16246\r\n                ],\r\n                [\r\n                    0.5,\r\n                    0.809017,\r\n                    0.309017\r\n                ],\r\n                [\r\n                    0.238856,\r\n                    0.864188,\r\n                    -0.442863\r\n                ],\r\n                [\r\n                    0.262866,\r\n                    0.951056,\r\n                    -0.16246\r\n                ],\r\n                [\r\n                    0.5,\r\n                    0.809017,\r\n                    -0.309017\r\n                ],\r\n                [\r\n                    0.850651,\r\n                    0.525731,\r\n                    0\r\n                ],\r\n                [\r\n                    0.716567,\r\n                    0.681718,\r\n                    0.147621\r\n                ],\r\n                [\r\n                    0.716567,\r\n                    0.681718,\r\n                    -0.147621\r\n                ],\r\n                [\r\n                    0.525731,\r\n                    0.850651,\r\n                    0\r\n                ],\r\n                [\r\n                    0.425325,\r\n                    0.688191,\r\n                    0.587785\r\n                ],\r\n                [\r\n                    0.864188,\r\n                    0.442863,\r\n                    0.238856\r\n                ],\r\n                [\r\n                    0.688191,\r\n                    0.587785,\r\n                    0.425325\r\n                ],\r\n                [\r\n                    0.809017,\r\n                    0.309017,\r\n                    0.5\r\n                ],\r\n                [\r\n                    0.681718,\r\n                    0.147621,\r\n                    0.716567\r\n                ],\r\n                [\r\n                    0.587785,\r\n                    0.425325,\r\n                    0.688191\r\n                ],\r\n                [\r\n                    0.955423,\r\n                    0.295242,\r\n                    0\r\n                ],\r\n                [\r\n                    1,\r\n                    0,\r\n                    0\r\n                ],\r\n                [\r\n                    0.951056,\r\n                    0.16246,\r\n                    0.262866\r\n                ],\r\n                [\r\n                    0.850651,\r\n                    -0.525731,\r\n                    0\r\n                ],\r\n                [\r\n                    0.955423,\r\n                    -0.295242,\r\n                    0\r\n                ],\r\n                [\r\n                    0.864188,\r\n                    -0.442863,\r\n                    0.238856\r\n                ],\r\n                [\r\n                    0.951056,\r\n                    -0.16246,\r\n                    0.262866\r\n                ],\r\n                [\r\n                    0.809017,\r\n                    -0.309017,\r\n                    0.5\r\n                ],\r\n                [\r\n                    0.681718,\r\n                    -0.147621,\r\n                    0.716567\r\n                ],\r\n                [\r\n                    0.850651,\r\n                    0,\r\n                    0.525731\r\n                ],\r\n                [\r\n                    0.864188,\r\n                    0.442863,\r\n                    -0.238856\r\n                ],\r\n                [\r\n                    0.809017,\r\n                    0.309017,\r\n                    -0.5\r\n                ],\r\n                [\r\n                    0.951056,\r\n                    0.16246,\r\n                    -0.262866\r\n                ],\r\n                [\r\n                    0.525731,\r\n                    0,\r\n                    -0.850651\r\n                ],\r\n                [\r\n                    0.681718,\r\n                    0.147621,\r\n                    -0.716567\r\n                ],\r\n                [\r\n                    0.681718,\r\n                    -0.147621,\r\n                    -0.716567\r\n                ],\r\n                [\r\n                    0.850651,\r\n                    0,\r\n                    -0.525731\r\n                ],\r\n                [\r\n                    0.809017,\r\n                    -0.309017,\r\n                    -0.5\r\n                ],\r\n                [\r\n                    0.864188,\r\n                    -0.442863,\r\n                    -0.238856\r\n                ],\r\n                [\r\n                    0.951056,\r\n                    -0.16246,\r\n                    -0.262866\r\n                ],\r\n                [\r\n                    0.147621,\r\n                    0.716567,\r\n                    -0.681718\r\n                ],\r\n                [\r\n                    0.309017,\r\n                    0.5,\r\n                    -0.809017\r\n                ],\r\n                [\r\n                    0.425325,\r\n                    0.688191,\r\n                    -0.587785\r\n                ],\r\n                [\r\n                    0.442863,\r\n                    0.238856,\r\n                    -0.864188\r\n                ],\r\n                [\r\n                    0.587785,\r\n                    0.425325,\r\n                    -0.688191\r\n                ],\r\n                [\r\n                    0.688191,\r\n                    0.587785,\r\n                    -0.425325\r\n                ],\r\n                [\r\n                    -0.147621,\r\n                    0.716567,\r\n                    -0.681718\r\n                ],\r\n                [\r\n                    -0.309017,\r\n                    0.5,\r\n                    -0.809017\r\n                ],\r\n                [\r\n                    0,\r\n                    0.525731,\r\n                    -0.850651\r\n                ],\r\n                [\r\n                    -0.525731,\r\n                    0,\r\n                    -0.850651\r\n                ],\r\n                [\r\n                    -0.442863,\r\n                    0.238856,\r\n                    -0.864188\r\n                ],\r\n                [\r\n                    -0.295242,\r\n                    0,\r\n                    -0.955423\r\n                ],\r\n                [\r\n                    -0.16246,\r\n                    0.262866,\r\n                    -0.951056\r\n                ],\r\n                [\r\n                    0,\r\n                    0,\r\n                    -1\r\n                ],\r\n                [\r\n                    0.295242,\r\n                    0,\r\n                    -0.955423\r\n                ],\r\n                [\r\n                    0.16246,\r\n                    0.262866,\r\n                    -0.951056\r\n                ],\r\n                [\r\n                    -0.442863,\r\n                    -0.238856,\r\n                    -0.864188\r\n                ],\r\n                [\r\n                    -0.309017,\r\n                    -0.5,\r\n                    -0.809017\r\n                ],\r\n                [\r\n                    -0.16246,\r\n                    -0.262866,\r\n                    -0.951056\r\n                ],\r\n                [\r\n                    0,\r\n                    -0.850651,\r\n                    -0.525731\r\n                ],\r\n                [\r\n                    -0.147621,\r\n                    -0.716567,\r\n                    -0.681718\r\n                ],\r\n                [\r\n                    0.147621,\r\n                    -0.716567,\r\n                    -0.681718\r\n                ],\r\n                [\r\n                    0,\r\n                    -0.525731,\r\n                    -0.850651\r\n                ],\r\n                [\r\n                    0.309017,\r\n                    -0.5,\r\n                    -0.809017\r\n                ],\r\n                [\r\n                    0.442863,\r\n                    -0.238856,\r\n                    -0.864188\r\n                ],\r\n                [\r\n                    0.16246,\r\n                    -0.262866,\r\n                    -0.951056\r\n                ],\r\n                [\r\n                    0.238856,\r\n                    -0.864188,\r\n                    -0.442863\r\n                ],\r\n                [\r\n                    0.5,\r\n                    -0.809017,\r\n                    -0.309017\r\n                ],\r\n                [\r\n                    0.425325,\r\n                    -0.688191,\r\n                    -0.587785\r\n                ],\r\n                [\r\n                    0.716567,\r\n                    -0.681718,\r\n                    -0.147621\r\n                ],\r\n                [\r\n                    0.688191,\r\n                    -0.587785,\r\n                    -0.425325\r\n                ],\r\n                [\r\n                    0.587785,\r\n                    -0.425325,\r\n                    -0.688191\r\n                ],\r\n                [\r\n                    0,\r\n                    -0.955423,\r\n                    -0.295242\r\n                ],\r\n                [\r\n                    0,\r\n                    -1,\r\n                    0\r\n                ],\r\n                [\r\n                    0.262866,\r\n                    -0.951056,\r\n                    -0.16246\r\n                ],\r\n                [\r\n                    0,\r\n                    -0.850651,\r\n                    0.525731\r\n                ],\r\n                [\r\n                    0,\r\n                    -0.955423,\r\n                    0.295242\r\n                ],\r\n                [\r\n                    0.238856,\r\n                    -0.864188,\r\n                    0.442863\r\n                ],\r\n                [\r\n                    0.262866,\r\n                    -0.951056,\r\n                    0.16246\r\n                ],\r\n                [\r\n                    0.5,\r\n                    -0.809017,\r\n                    0.309017\r\n                ],\r\n                [\r\n                    0.716567,\r\n                    -0.681718,\r\n                    0.147621\r\n                ],\r\n                [\r\n                    0.525731,\r\n                    -0.850651,\r\n                    0\r\n                ],\r\n                [\r\n                    -0.238856,\r\n                    -0.864188,\r\n                    -0.442863\r\n                ],\r\n                [\r\n                    -0.5,\r\n                    -0.809017,\r\n                    -0.309017\r\n                ],\r\n                [\r\n                    -0.262866,\r\n                    -0.951056,\r\n                    -0.16246\r\n                ],\r\n                [\r\n                    -0.850651,\r\n                    -0.525731,\r\n                    0\r\n                ],\r\n                [\r\n                    -0.716567,\r\n                    -0.681718,\r\n                    -0.147621\r\n                ],\r\n                [\r\n                    -0.716567,\r\n                    -0.681718,\r\n                    0.147621\r\n                ],\r\n                [\r\n                    -0.525731,\r\n                    -0.850651,\r\n                    0\r\n                ],\r\n                [\r\n                    -0.5,\r\n                    -0.809017,\r\n                    0.309017\r\n                ],\r\n                [\r\n                    -0.238856,\r\n                    -0.864188,\r\n                    0.442863\r\n                ],\r\n                [\r\n                    -0.262866,\r\n                    -0.951056,\r\n                    0.16246\r\n                ],\r\n                [\r\n                    -0.864188,\r\n                    -0.442863,\r\n                    0.238856\r\n                ],\r\n                [\r\n                    -0.809017,\r\n                    -0.309017,\r\n                    0.5\r\n                ],\r\n                [\r\n                    -0.688191,\r\n                    -0.587785,\r\n                    0.425325\r\n                ],\r\n                [\r\n                    -0.681718,\r\n                    -0.147621,\r\n                    0.716567\r\n                ],\r\n                [\r\n                    -0.442863,\r\n                    -0.238856,\r\n                    0.864188\r\n                ],\r\n                [\r\n                    -0.587785,\r\n                    -0.425325,\r\n                    0.688191\r\n                ],\r\n                [\r\n                    -0.309017,\r\n                    -0.5,\r\n                    0.809017\r\n                ],\r\n                [\r\n                    -0.147621,\r\n                    -0.716567,\r\n                    0.681718\r\n                ],\r\n                [\r\n                    -0.425325,\r\n                    -0.688191,\r\n                    0.587785\r\n                ],\r\n                [\r\n                    -0.16246,\r\n                    -0.262866,\r\n                    0.951056\r\n                ],\r\n                [\r\n                    0.442863,\r\n                    -0.238856,\r\n                    0.864188\r\n                ],\r\n                [\r\n                    0.16246,\r\n                    -0.262866,\r\n                    0.951056\r\n                ],\r\n                [\r\n                    0.309017,\r\n                    -0.5,\r\n                    0.809017\r\n                ],\r\n                [\r\n                    0.147621,\r\n                    -0.716567,\r\n                    0.681718\r\n                ],\r\n                [\r\n                    0,\r\n                    -0.525731,\r\n                    0.850651\r\n                ],\r\n                [\r\n                    0.425325,\r\n                    -0.688191,\r\n                    0.587785\r\n                ],\r\n                [\r\n                    0.587785,\r\n                    -0.425325,\r\n                    0.688191\r\n                ],\r\n                [\r\n                    0.688191,\r\n                    -0.587785,\r\n                    0.425325\r\n                ],\r\n                [\r\n                    -0.955423,\r\n                    0.295242,\r\n                    0\r\n                ],\r\n                [\r\n                    -0.951056,\r\n                    0.16246,\r\n                    0.262866\r\n                ],\r\n                [\r\n                    -1,\r\n                    0,\r\n                    0\r\n                ],\r\n                [\r\n                    -0.850651,\r\n                    0,\r\n                    0.525731\r\n                ],\r\n                [\r\n                    -0.955423,\r\n                    -0.295242,\r\n                    0\r\n                ],\r\n                [\r\n                    -0.951056,\r\n                    -0.16246,\r\n                    0.262866\r\n                ],\r\n                [\r\n                    -0.864188,\r\n                    0.442863,\r\n                    -0.238856\r\n                ],\r\n                [\r\n                    -0.951056,\r\n                    0.16246,\r\n                    -0.262866\r\n                ],\r\n                [\r\n                    -0.809017,\r\n                    0.309017,\r\n                    -0.5\r\n                ],\r\n                [\r\n                    -0.864188,\r\n                    -0.442863,\r\n                    -0.238856\r\n                ],\r\n                [\r\n                    -0.951056,\r\n                    -0.16246,\r\n                    -0.262866\r\n                ],\r\n                [\r\n                    -0.809017,\r\n                    -0.309017,\r\n                    -0.5\r\n                ],\r\n                [\r\n                    -0.681718,\r\n                    0.147621,\r\n                    -0.716567\r\n                ],\r\n                [\r\n                    -0.681718,\r\n                    -0.147621,\r\n                    -0.716567\r\n                ],\r\n                [\r\n                    -0.850651,\r\n                    0,\r\n                    -0.525731\r\n                ],\r\n                [\r\n                    -0.688191,\r\n                    0.587785,\r\n                    -0.425325\r\n                ],\r\n                [\r\n                    -0.587785,\r\n                    0.425325,\r\n                    -0.688191\r\n                ],\r\n                [\r\n                    -0.425325,\r\n                    0.688191,\r\n                    -0.587785\r\n                ],\r\n                [\r\n                    -0.425325,\r\n                    -0.688191,\r\n                    -0.587785\r\n                ],\r\n                [\r\n                    -0.587785,\r\n                    -0.425325,\r\n                    -0.688191\r\n                ],\r\n                [\r\n                    -0.688191,\r\n                    -0.587785,\r\n                    -0.425325\r\n                ]\r\n            ];\r\n            return function (buffer) {\r\n                var data = new DataView(buffer);\r\n                var header = {};\r\n                var headerNames = [\r\n                    'ident',\r\n                    'version',\r\n                    'skinwidth',\r\n                    'skinheight',\r\n                    'framesize',\r\n                    'num_skins',\r\n                    'num_vertices',\r\n                    'num_st',\r\n                    'num_tris',\r\n                    'num_glcmds',\r\n                    'num_frames',\r\n                    'offset_skins',\r\n                    'offset_st',\r\n                    'offset_tris',\r\n                    'offset_frames',\r\n                    'offset_glcmds',\r\n                    'offset_end'\r\n                ];\r\n                for (var i = 0; i < headerNames.length; i++) {\r\n                    header[headerNames[i]] = data.getInt32(i * 4, true);\r\n                }\r\n                if (header.ident !== 844121161 || header.version !== 8) {\r\n                    console.error('Not a valid MD2 file');\r\n                    return;\r\n                }\r\n                if (header.offset_end !== data.byteLength) {\r\n                    console.error('Corrupted MD2 file');\r\n                    return;\r\n                }\r\n                var geometry = new THREE.BufferGeometry();\r\n                var uvsTemp = [];\r\n                var offset = header.offset_st;\r\n                for (var i = 0, l = header.num_st; i < l; i++) {\r\n                    var u = data.getInt16(offset + 0, true);\r\n                    var v = data.getInt16(offset + 2, true);\r\n                    uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight);\r\n                    offset += 4;\r\n                }\r\n                offset = header.offset_tris;\r\n                var vertexIndices = [];\r\n                var uvIndices = [];\r\n                for (var i = 0, l = header.num_tris; i < l; i++) {\r\n                    vertexIndices.push(data.getUint16(offset + 0, true), data.getUint16(offset + 2, true), data.getUint16(offset + 4, true));\r\n                    uvIndices.push(data.getUint16(offset + 6, true), data.getUint16(offset + 8, true), data.getUint16(offset + 10, true));\r\n                    offset += 12;\r\n                }\r\n                var translation = new THREE.Vector3();\r\n                var scale = new THREE.Vector3();\r\n                var string = [];\r\n                var frames = [];\r\n                offset = header.offset_frames;\r\n                for (var i = 0, l = header.num_frames; i < l; i++) {\r\n                    scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true));\r\n                    translation.set(data.getFloat32(offset + 12, true), data.getFloat32(offset + 16, true), data.getFloat32(offset + 20, true));\r\n                    offset += 24;\r\n                    for (var j = 0; j < 16; j++) {\r\n                        var character = data.getUint8(offset + j, true);\r\n                        if (character === 0)\r\n                            break;\r\n                        string[j] = character;\r\n                    }\r\n                    var frame = {\r\n                        name: String.fromCharCode.apply(null, string),\r\n                        vertices: [],\r\n                        normals: []\r\n                    };\r\n                    offset += 16;\r\n                    for (var j = 0; j < header.num_vertices; j++) {\r\n                        var x = data.getUint8(offset++, true);\r\n                        var y = data.getUint8(offset++, true);\r\n                        var z = data.getUint8(offset++, true);\r\n                        var n = normalData[data.getUint8(offset++, true)];\r\n                        x = x * scale.x + translation.x;\r\n                        y = y * scale.y + translation.y;\r\n                        z = z * scale.z + translation.z;\r\n                        frame.vertices.push(x, z, y);\r\n                        frame.normals.push(n[0], n[2], n[1]);\r\n                    }\r\n                    frames.push(frame);\r\n                }\r\n                var positions = [];\r\n                var normals = [];\r\n                var uvs = [];\r\n                var verticesTemp = frames[0].vertices;\r\n                var normalsTemp = frames[0].normals;\r\n                for (var i = 0, l = vertexIndices.length; i < l; i++) {\r\n                    var vertexIndex = vertexIndices[i];\r\n                    var stride = vertexIndex * 3;\r\n                    var x = verticesTemp[stride];\r\n                    var y = verticesTemp[stride + 1];\r\n                    var z = verticesTemp[stride + 2];\r\n                    positions.push(x, y, z);\r\n                    var nx = normalsTemp[stride];\r\n                    var ny = normalsTemp[stride + 1];\r\n                    var nz = normalsTemp[stride + 2];\r\n                    normals.push(nx, ny, nz);\r\n                    var uvIndex = uvIndices[i];\r\n                    stride = uvIndex * 2;\r\n                    var u = uvsTemp[stride];\r\n                    var v = uvsTemp[stride + 1];\r\n                    uvs.push(u, v);\r\n                }\r\n                geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n                geometry.setAttribute('normal', new THREE.Float32BufferAttribute(normals, 3));\r\n                geometry.setAttribute('uv', new THREE.Float32BufferAttribute(uvs, 2));\r\n                var morphPositions = [];\r\n                var morphNormals = [];\r\n                for (var i = 0, l = frames.length; i < l; i++) {\r\n                    var frame = frames[i];\r\n                    var attributeName = frame.name;\r\n                    if (frame.vertices.length > 0) {\r\n                        var positions = [];\r\n                        for (var j = 0, jl = vertexIndices.length; j < jl; j++) {\r\n                            var vertexIndex = vertexIndices[j];\r\n                            var stride = vertexIndex * 3;\r\n                            var x = frame.vertices[stride];\r\n                            var y = frame.vertices[stride + 1];\r\n                            var z = frame.vertices[stride + 2];\r\n                            positions.push(x, y, z);\r\n                        }\r\n                        var positionAttribute = new THREE.Float32BufferAttribute(positions, 3);\r\n                        positionAttribute.name = attributeName;\r\n                        morphPositions.push(positionAttribute);\r\n                    }\r\n                    if (frame.normals.length > 0) {\r\n                        var normals = [];\r\n                        for (var j = 0, jl = vertexIndices.length; j < jl; j++) {\r\n                            var vertexIndex = vertexIndices[j];\r\n                            var stride = vertexIndex * 3;\r\n                            var nx = frame.normals[stride];\r\n                            var ny = frame.normals[stride + 1];\r\n                            var nz = frame.normals[stride + 2];\r\n                            normals.push(nx, ny, nz);\r\n                        }\r\n                        var normalAttribute = new THREE.Float32BufferAttribute(normals, 3);\r\n                        normalAttribute.name = attributeName;\r\n                        morphNormals.push(normalAttribute);\r\n                    }\r\n                }\r\n                geometry.morphAttributes.position = morphPositions;\r\n                geometry.morphAttributes.normal = morphNormals;\r\n                geometry.morphTargetsRelative = false;\r\n                geometry.animations = THREE.AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10);\r\n                return geometry;\r\n            };\r\n        }()\r\n    });\r\n\r\n    return threex.loaders.MD2Loader = MD2Loader;\r\n});"]}