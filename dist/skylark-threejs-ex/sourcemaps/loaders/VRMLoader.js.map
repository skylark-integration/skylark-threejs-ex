{"version":3,"sources":["loaders/VRMLoader.js"],"names":["define","THREE","VRMLoader","manager","undefined","GLTFLoader","Error","Loader","call","this","gltfLoader","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","gltf","parse","setDRACOLoader","dracoLoader","glTFLoader"],"mappings":";;;;;;;AAAAA,QACC,kBACA,gBACC,SAASC,GAmEV,OAzDAA,EAAMC,UAAY,WAEjB,SAASA,EAAWC,GAEnB,QAA0BC,IAArBH,EAAMI,WAEV,MAAM,IAAIC,MAAO,6CAIlBL,EAAMM,OAAOC,KAAMC,KAAMN,GAEzBM,KAAKC,WAAa,IAAIT,EAAMI,WAAYI,KAAKN,SAyC9C,OArCAD,EAAUS,UAAYC,OAAOC,OAAQD,OAAOE,OAAQb,EAAMM,OAAOI,YAEhEI,YAAab,EAEbc,KAAM,SAAWC,EAAKC,EAAQC,EAAYC,GAEzC,IAAIC,EAAQZ,KAEZA,KAAKC,WAAWM,KAAMC,EAAK,SAAWK,GAErCD,EAAME,MAAOD,EAAMJ,IAEjBC,EAAYC,IAIhBI,eAAgB,SAAWC,GAG1B,OADAhB,KAAKiB,WAAWF,eAAgBC,GACzBhB,MAIRc,MAAO,SAAWD,EAAMJ,GAQvBA,EAAQI,MAMHpB,EArDU,GAyDXD,EAAMC","file":"../../loaders/VRMLoader.js","sourcesContent":["define([\n\t\"skylark-threejs\",\n\t\"./GLTFLoader\"\n],function(THREE){\n\t/**\n\t * @author Takahiro / https://github.com/takahirox\n\t */\n\n\t// VRM Specification: https://dwango.github.io/vrm/vrm_spec/\n\t//\n\t// VRM is based on glTF 2.0 and VRM extension is defined\n\t// in top-level json.extensions.VRM\n\n\tTHREE.VRMLoader = ( function () {\n\n\t\tfunction VRMLoader( manager ) {\n\n\t\t\tif ( THREE.GLTFLoader === undefined ) {\n\n\t\t\t\tthrow new Error( 'THREE.VRMLoader: Import THREE.GLTFLoader.' );\n\n\t\t\t}\n\n\t\t\tTHREE.Loader.call( this, manager );\n\n\t\t\tthis.gltfLoader = new THREE.GLTFLoader( this.manager );\n\n\t\t}\n\n\t\tVRMLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\t\t\tconstructor: VRMLoader,\n\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tthis.gltfLoader.load( url, function ( gltf ) {\n\n\t\t\t\t\tscope.parse( gltf, onLoad );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t},\n\n\t\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\t\tthis.glTFLoader.setDRACOLoader( dracoLoader );\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\tparse: function ( gltf, onLoad ) {\n\n\t\t\t\t// var gltfParser = gltf.parser;\n\t\t\t\t// var gltfExtensions = gltf.userData.gltfExtensions || {};\n\t\t\t\t// var vrmExtension = gltfExtensions.VRM || {};\n\n\t\t\t\t// handle VRM Extension here\n\n\t\t\t\tonLoad( gltf );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn VRMLoader;\n\n\t} )();\n\t\n\treturn THREE.VRMLoader;\n});\n"]}