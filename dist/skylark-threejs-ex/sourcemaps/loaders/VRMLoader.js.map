{"version":3,"sources":["loaders/VRMLoader.js"],"names":["define","THREE","threex","GLTFLoader","VRMLoader","manager","undefined","Error","Loader","call","this","gltfLoader","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","gltf","parse","setDRACOLoader","dracoLoader","glTFLoader","loaders"],"mappings":";;;;;;;AAAAA,QACI,kBACA,YACA,gBACD,SACCC,EACAC,EACAC,GAEA,aACA,IAAIC,EAAY,WACZ,SAASA,EAAUC,GACf,QAAmBC,IAAfH,EACA,MAAM,IAAII,MAAM,uCAEpBN,EAAMO,OAAOC,KAAKC,KAAML,GACxBK,KAAKC,WAAa,IAAIR,EAAWO,KAAKL,SAkB1C,OAhBAD,EAAUQ,UAAYC,OAAOC,OAAOD,OAAOE,OAAOd,EAAMO,OAAOI,YAC3DI,YAAaZ,EACba,KAAM,SAAUC,EAAKC,EAAQC,EAAYC,GACrC,IAAIC,EAAQZ,KACZA,KAAKC,WAAWM,KAAKC,EAAK,SAAUK,GAChCD,EAAME,MAAMD,EAAMJ,IACnBC,EAAYC,IAEnBI,eAAgB,SAAUC,GAEtB,OADAhB,KAAKiB,WAAWF,eAAeC,GACxBhB,MAEXc,MAAO,SAAUD,EAAMJ,GACnBA,EAAOI,MAGRnB,EAxBK,GA2BhB,OAAOF,EAAO0B,QAAQxB,UAAYA","file":"../../loaders/VRMLoader.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\",\r\n    './GLTFLoader'\r\n], function (\r\n    THREE, \r\n    threex,\r\n    GLTFLoader\r\n) {\r\n    'use strict';\r\n    var VRMLoader = function () {\r\n        function VRMLoader(manager) {\r\n            if (GLTFLoader === undefined) {\r\n                throw new Error('THREE.VRMLoader: Import GLTFLoader.');\r\n            }\r\n            THREE.Loader.call(this, manager);\r\n            this.gltfLoader = new GLTFLoader(this.manager);\r\n        }\r\n        VRMLoader.prototype = Object.assign(Object.create(THREE.Loader.prototype), {\r\n            constructor: VRMLoader,\r\n            load: function (url, onLoad, onProgress, onError) {\r\n                var scope = this;\r\n                this.gltfLoader.load(url, function (gltf) {\r\n                    scope.parse(gltf, onLoad);\r\n                }, onProgress, onError);\r\n            },\r\n            setDRACOLoader: function (dracoLoader) {\r\n                this.glTFLoader.setDRACOLoader(dracoLoader);\r\n                return this;\r\n            },\r\n            parse: function (gltf, onLoad) {\r\n                onLoad(gltf);\r\n            }\r\n        });\r\n        return VRMLoader;\r\n    }();\r\n    \r\n    return threex.loaders.VRMLoader = VRMLoader;\r\n});"]}