{"version":3,"sources":["loaders/ColladaLoader.js"],"names":["define","THREE","TGALoader","ColladaLoader","manager","Loader","call","this","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","text","parse","options","convertUpAxis","value","console","warn","getElementsByTagName","xml","name","array","childNodes","i","l","length","child","nodeName","push","parseStrings","parts","trim","split","Array","parseFloats","parseFloat","parseInts","parseInt","parseId","substring","isEmpty","object","keys","parseLibrary","libraryName","parser","library","undefined","elements","buildLibrary","data","builder","build","getBuild","parseAnimationSampler","inputs","nodeType","id","getAttribute","semantic","parseAnimationChannel","shift","sid","arraySyntax","indexOf","memberSyntax","member","indices","replace","sampler","buildAnimation","tracks","channels","samplers","sources","target","hasOwnProperty","channel","inputId","INPUT","outputId","OUTPUT","createKeyframeTracks","buildAnimationChannel","getAnimation","animations","inputSource","outputSource","time","stride","il","j","jl","node","nodes","object3D","getNode","transform","transforms","defaultMatrix","matrix","clone","transpose","index","keyframes","sort","a","b","transformAnimationData","prepareAnimationData","uuid","position","Vector3","scale","quaternion","Quaternion","animation","times","positionData","quaternionData","scaleData","keyframe","fromArray","decompose","x","y","z","w","VectorKeyframeTrack","QuaternionKeyframeTrack","property","defaultValue","empty","prev","next","getPrev","getNext","interpolate","createMissingKeyframes","key","buildAnimationClip","duration","end","start","animationTracks","AnimationClip","getAnimationClip","clips","parseSkin","bindShapeMatrix","textContent","parseSource","joints","parseJoints","vertexWeights","parseVertexWeights","offset","vcount","v","buildController","geometry","geometries","skin","weights","jointOffset","JOINT","weightOffset","WEIGHT","jointSource","inverseSource","INV_BIND_MATRIX","jointCount","vertexSkinData","skinIndex","weightId","skinWeight","weight","descending","d","bindMatrix","Matrix4","identity","boneInverse","buildSkin","skinIndices","skinWeights","buildImage","init_from","getImage","images","parseEffectProfileCOMMON","surfaces","parseEffectNewparam","technique","parseEffectTechnique","extra","parseEffectExtra","parseEffectSurface","parseEffectSampler","source","type","parameters","parseEffectParameters","parseEffectParameter","opaque","parseEffectParameterTexture","parseEffectParameterTextureExtra","parseEffectParameterTextureExtraTechnique","toUpperCase","parseEffectExtraTechnique","buildEffect","buildMaterial","material","effect","effects","profile","MeshPhongMaterial","MeshLambertMaterial","MeshBasicMaterial","getTexture","textureObject","image","extension","slice","lastIndexOf","toLowerCase","tgaLoader","textureLoader","getTextureLoader","texture","wrapS","wrapU","RepeatWrapping","ClampToEdgeWrapping","wrapT","wrapV","set","offsetU","offsetV","repeat","repeatU","repeatV","parameter","color","map","specular","specularMap","normalMap","lightMap","float","shininess","emissive","emissiveMap","transparent","transparency","opacity","double_sided","side","DoubleSide","getMaterial","materials","parseCameraOptics","parseCameraTechnique","parseCameraParameters","buildCamera","camera","optics","PerspectiveCamera","yfov","aspect_ratio","znear","zfar","ymag","xmag","aspectRatio","OrthographicCamera","getCamera","cameras","parseLightTechnique","parseLightParameters","Color","falloffAngle","f","distance","Math","sqrt","buildLight","light","DirectionalLight","PointLight","SpotLight","AmbientLight","copy","getLight","lights","accessor","parseGeometryVertices","parseGeometryPrimitive","primitive","count","hasUV","inputname","max","p","checkUVCoordinates","primitives","uvsNeedsFix","buildGeometry","vertices","groupedPrimitives","groupPrimitives","primitiveType","buildGeometryType","normal","uv","uv2","BufferGeometry","materialKeys","g","vc","addGroup","input","prevLength","buildGeometryData","setAttribute","Float32BufferAttribute","pushVector","sourceStride","sourceArray","c","k","kl","getGeometry","buildKinematicsModel","parseKinematicsTechniqueCommon","parseKinematicsJoint","links","parseKinematicsLink","parseKinematicsJointParameter","axis","limits","min","static","zeroPosition","middlePosition","attachments","parseKinematicsAttachment","parseKinematicsTransform","joint","pop","obj","angle","MathUtils","degToRad","parsePhysicsRigidBody","parsePhysicsTechniqueCommon","inertia","mass","parseKinematicsBindJointAxis","param","tmpJointIndex","jointIndex","substr","buildKinematicsScene","vector","parseNode","instanceCameras","instanceControllers","instanceLights","instanceGeometries","instanceNodes","parseNodeInstance","multiply","makeTranslation","makeRotationAxis","log","hasNode","skeletons","instances","instance","symbol","buildSkeleton","boneData","sortedBoneData","skeleton","buildBoneHierarchy","visualScenes","children","error","bone","processed","bones","boneInverses","Skeleton","root","traverse","isBone","buildNode","objects","instanceCamera","controller","controllers","newObjects","buildObjects","isSkinnedMesh","bind","normalizeSkinWeights","instanceLight","Bone","Group","add","fallbackMaterial","resolveMaterialBinding","instanceMaterials","LineBasicMaterial","skinning","attributes","LineSegments","Line","SkinnedMesh","Mesh","buildVisualScene","group","getVisualScene","scene","Scene","DOMParser","parseFromString","collada","parserError","errorText","errorElement","result","stack","Node","TEXT_NODE","apply","parserErrorToText","version","asset","unit","hasAttribute","parseAssetUnit","upAxis","parseAssetUpAxis","parseAsset","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","kinematics","kinematicsModels","physicsModels","kinematicsScenes","mesh","element","prepareNodes","rigidBodies","bindJointAxis","setupAnimations","kinematicsModelId","kinematicsSceneId","visualSceneId","kinematicsModel","kinematicsScene","getKinematicsScene","visualScene","jointMap","targetElement","querySelector","parentVisualElement","parentElement","connect","m0","getJointValue","jointData","setJointValue","visualElement","visualElementName","buildTransformList","setupKinematics","parseScene","setFromEuler","Euler","PI","multiplyScalar"],"mappings":"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","file":"../../loaders/ColladaLoader.js","sourcesContent":["define([\n\t\"skylark-threejs\",\n\t\"./TGALoader\"\n],function(THREE,TGALoader){\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.ColladaLoader = function ( manager ) {\n\n\t\tTHREE.Loader.call( this, manager );\n\n\t};\n\n\tTHREE.ColladaLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\t\tconstructor: THREE.ColladaLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( scope.path === '' ) ? THREE.LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\toptions: {\n\n\t\t\tset convertUpAxis( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparse: function ( text, path ) {\n\n\t\t\tfunction getElementsByTagName( xml, name ) {\n\n\t\t\t\t// Non recursive xml.getElementsByTagName() ...\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar childNodes = xml.childNodes;\n\n\t\t\t\tfor ( var i = 0, l = childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeName === name ) {\n\n\t\t\t\t\t\tarray.push( child );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tfunction parseStrings( text ) {\n\n\t\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\t\tvar parts = text.trim().split( /\\s+/ );\n\t\t\t\tvar array = new Array( parts.length );\n\n\t\t\t\tfor ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = parts[ i ];\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tfunction parseFloats( text ) {\n\n\t\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\t\tvar parts = text.trim().split( /\\s+/ );\n\t\t\t\tvar array = new Array( parts.length );\n\n\t\t\t\tfor ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = parseFloat( parts[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tfunction parseInts( text ) {\n\n\t\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\t\tvar parts = text.trim().split( /\\s+/ );\n\t\t\t\tvar array = new Array( parts.length );\n\n\t\t\t\tfor ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = parseInt( parts[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tfunction parseId( text ) {\n\n\t\t\t\treturn text.substring( 1 );\n\n\t\t\t}\n\n\t\t\tfunction generateId() {\n\n\t\t\t\treturn 'three_default_' + ( count ++ );\n\n\t\t\t}\n\n\t\t\tfunction isEmpty( object ) {\n\n\t\t\t\treturn Object.keys( object ).length === 0;\n\n\t\t\t}\n\n\t\t\t// asset\n\n\t\t\tfunction parseAsset( xml ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tunit: parseAssetUnit( getElementsByTagName( xml, 'unit' )[ 0 ] ),\n\t\t\t\t\tupAxis: parseAssetUpAxis( getElementsByTagName( xml, 'up_axis' )[ 0 ] )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction parseAssetUnit( xml ) {\n\n\t\t\t\tif ( ( xml !== undefined ) && ( xml.hasAttribute( 'meter' ) === true ) ) {\n\n\t\t\t\t\treturn parseFloat( xml.getAttribute( 'meter' ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn 1; // default 1 meter\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAssetUpAxis( xml ) {\n\n\t\t\t\treturn xml !== undefined ? xml.textContent : 'Y_UP';\n\n\t\t\t}\n\n\t\t\t// library\n\n\t\t\tfunction parseLibrary( xml, libraryName, nodeName, parser ) {\n\n\t\t\t\tvar library = getElementsByTagName( xml, libraryName )[ 0 ];\n\n\t\t\t\tif ( library !== undefined ) {\n\n\t\t\t\t\tvar elements = getElementsByTagName( library, nodeName );\n\n\t\t\t\t\tfor ( var i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\t\t\tparser( elements[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction buildLibrary( data, builder ) {\n\n\t\t\t\tfor ( var name in data ) {\n\n\t\t\t\t\tvar object = data[ name ];\n\t\t\t\t\tobject.build = builder( data[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// get\n\n\t\t\tfunction getBuild( data, builder ) {\n\n\t\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\t\tdata.build = builder( data );\n\n\t\t\t\treturn data.build;\n\n\t\t\t}\n\n\t\t\t// animation\n\n\t\t\tfunction parseAnimation( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tsources: {},\n\t\t\t\t\tsamplers: {},\n\t\t\t\t\tchannels: {}\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tvar id;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'source':\n\t\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'sampler':\n\t\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\t\tdata.samplers[ id ] = parseAnimationSampler( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'channel':\n\t\t\t\t\t\t\tid = child.getAttribute( 'target' );\n\t\t\t\t\t\t\tdata.channels[ id ] = parseAnimationChannel( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.animations[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction parseAnimationSampler( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tinputs: {},\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'input':\n\t\t\t\t\t\t\tvar id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\t\tvar semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseAnimationChannel( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tvar target = xml.getAttribute( 'target' );\n\n\t\t\t\t// parsing SID Addressing Syntax\n\n\t\t\t\tvar parts = target.split( '/' );\n\n\t\t\t\tvar id = parts.shift();\n\t\t\t\tvar sid = parts.shift();\n\n\t\t\t\t// check selection syntax\n\n\t\t\t\tvar arraySyntax = ( sid.indexOf( '(' ) !== - 1 );\n\t\t\t\tvar memberSyntax = ( sid.indexOf( '.' ) !== - 1 );\n\n\t\t\t\tif ( memberSyntax ) {\n\n\t\t\t\t\t//  member selection access\n\n\t\t\t\t\tparts = sid.split( '.' );\n\t\t\t\t\tsid = parts.shift();\n\t\t\t\t\tdata.member = parts.shift();\n\n\t\t\t\t} else if ( arraySyntax ) {\n\n\t\t\t\t\t// array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\n\n\t\t\t\t\tvar indices = sid.split( '(' );\n\t\t\t\t\tsid = indices.shift();\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\t\t\tindices[ i ] = parseInt( indices[ i ].replace( /\\)/, '' ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdata.indices = indices;\n\n\t\t\t\t}\n\n\t\t\t\tdata.id = id;\n\t\t\t\tdata.sid = sid;\n\n\t\t\t\tdata.arraySyntax = arraySyntax;\n\t\t\t\tdata.memberSyntax = memberSyntax;\n\n\t\t\t\tdata.sampler = parseId( xml.getAttribute( 'source' ) );\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction buildAnimation( data ) {\n\n\t\t\t\tvar tracks = [];\n\n\t\t\t\tvar channels = data.channels;\n\t\t\t\tvar samplers = data.samplers;\n\t\t\t\tvar sources = data.sources;\n\n\t\t\t\tfor ( var target in channels ) {\n\n\t\t\t\t\tif ( channels.hasOwnProperty( target ) ) {\n\n\t\t\t\t\t\tvar channel = channels[ target ];\n\t\t\t\t\t\tvar sampler = samplers[ channel.sampler ];\n\n\t\t\t\t\t\tvar inputId = sampler.inputs.INPUT;\n\t\t\t\t\t\tvar outputId = sampler.inputs.OUTPUT;\n\n\t\t\t\t\t\tvar inputSource = sources[ inputId ];\n\t\t\t\t\t\tvar outputSource = sources[ outputId ];\n\n\t\t\t\t\t\tvar animation = buildAnimationChannel( channel, inputSource, outputSource );\n\n\t\t\t\t\t\tcreateKeyframeTracks( animation, tracks );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn tracks;\n\n\t\t\t}\n\n\t\t\tfunction getAnimation( id ) {\n\n\t\t\t\treturn getBuild( library.animations[ id ], buildAnimation );\n\n\t\t\t}\n\n\t\t\tfunction buildAnimationChannel( channel, inputSource, outputSource ) {\n\n\t\t\t\tvar node = library.nodes[ channel.id ];\n\t\t\t\tvar object3D = getNode( node.id );\n\n\t\t\t\tvar transform = node.transforms[ channel.sid ];\n\t\t\t\tvar defaultMatrix = node.matrix.clone().transpose();\n\n\t\t\t\tvar time, stride;\n\t\t\t\tvar i, il, j, jl;\n\n\t\t\t\tvar data = {};\n\n\t\t\t\t// the collada spec allows the animation of data in various ways.\n\t\t\t\t// depending on the transform type (matrix, translate, rotate, scale), we execute different logic\n\n\t\t\t\tswitch ( transform ) {\n\n\t\t\t\t\tcase 'matrix':\n\n\t\t\t\t\t\tfor ( i = 0, il = inputSource.array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\ttime = inputSource.array[ i ];\n\t\t\t\t\t\t\tstride = i * outputSource.stride;\n\n\t\t\t\t\t\t\tif ( data[ time ] === undefined ) data[ time ] = {};\n\n\t\t\t\t\t\t\tif ( channel.arraySyntax === true ) {\n\n\t\t\t\t\t\t\t\tvar value = outputSource.array[ stride ];\n\t\t\t\t\t\t\t\tvar index = channel.indices[ 0 ] + 4 * channel.indices[ 1 ];\n\n\t\t\t\t\t\t\t\tdata[ time ][ index ] = value;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tfor ( j = 0, jl = outputSource.stride; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tdata[ time ][ j ] = outputSource.array[ stride + j ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar keyframes = prepareAnimationData( data, defaultMatrix );\n\n\t\t\t\tvar animation = {\n\t\t\t\t\tname: object3D.uuid,\n\t\t\t\t\tkeyframes: keyframes\n\t\t\t\t};\n\n\t\t\t\treturn animation;\n\n\t\t\t}\n\n\t\t\tfunction prepareAnimationData( data, defaultMatrix ) {\n\n\t\t\t\tvar keyframes = [];\n\n\t\t\t\t// transfer data into a sortable array\n\n\t\t\t\tfor ( var time in data ) {\n\n\t\t\t\t\tkeyframes.push( { time: parseFloat( time ), value: data[ time ] } );\n\n\t\t\t\t}\n\n\t\t\t\t// ensure keyframes are sorted by time\n\n\t\t\t\tkeyframes.sort( ascending );\n\n\t\t\t\t// now we clean up all animation data, so we can use them for keyframe tracks\n\n\t\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\t\ttransformAnimationData( keyframes, i, defaultMatrix.elements[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn keyframes;\n\n\t\t\t\t// array sort function\n\n\t\t\t\tfunction ascending( a, b ) {\n\n\t\t\t\t\treturn a.time - b.time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar position = new THREE.Vector3();\n\t\t\tvar scale = new THREE.Vector3();\n\t\t\tvar quaternion = new THREE.Quaternion();\n\n\t\t\tfunction createKeyframeTracks( animation, tracks ) {\n\n\t\t\t\tvar keyframes = animation.keyframes;\n\t\t\t\tvar name = animation.name;\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar positionData = [];\n\t\t\t\tvar quaternionData = [];\n\t\t\t\tvar scaleData = [];\n\n\t\t\t\tfor ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar keyframe = keyframes[ i ];\n\n\t\t\t\t\tvar time = keyframe.time;\n\t\t\t\t\tvar value = keyframe.value;\n\n\t\t\t\t\tmatrix.fromArray( value ).transpose();\n\t\t\t\t\tmatrix.decompose( position, quaternion, scale );\n\n\t\t\t\t\ttimes.push( time );\n\t\t\t\t\tpositionData.push( position.x, position.y, position.z );\n\t\t\t\t\tquaternionData.push( quaternion.x, quaternion.y, quaternion.z, quaternion.w );\n\t\t\t\t\tscaleData.push( scale.x, scale.y, scale.z );\n\n\t\t\t\t}\n\n\t\t\t\tif ( positionData.length > 0 ) tracks.push( new THREE.VectorKeyframeTrack( name + '.position', times, positionData ) );\n\t\t\t\tif ( quaternionData.length > 0 ) tracks.push( new THREE.QuaternionKeyframeTrack( name + '.quaternion', times, quaternionData ) );\n\t\t\t\tif ( scaleData.length > 0 ) tracks.push( new THREE.VectorKeyframeTrack( name + '.scale', times, scaleData ) );\n\n\t\t\t\treturn tracks;\n\n\t\t\t}\n\n\t\t\tfunction transformAnimationData( keyframes, property, defaultValue ) {\n\n\t\t\t\tvar keyframe;\n\n\t\t\t\tvar empty = true;\n\t\t\t\tvar i, l;\n\n\t\t\t\t// check, if values of a property are missing in our keyframes\n\n\t\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\t\tif ( keyframe.value[ property ] === undefined ) {\n\n\t\t\t\t\t\tkeyframe.value[ property ] = null; // mark as missing\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tempty = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( empty === true ) {\n\n\t\t\t\t\t// no values at all, so we set a default value\n\n\t\t\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\t\t\tkeyframe.value[ property ] = defaultValue;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// filling gaps\n\n\t\t\t\t\tcreateMissingKeyframes( keyframes, property );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction createMissingKeyframes( keyframes, property ) {\n\n\t\t\t\tvar prev, next;\n\n\t\t\t\tfor ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar keyframe = keyframes[ i ];\n\n\t\t\t\t\tif ( keyframe.value[ property ] === null ) {\n\n\t\t\t\t\t\tprev = getPrev( keyframes, i, property );\n\t\t\t\t\t\tnext = getNext( keyframes, i, property );\n\n\t\t\t\t\t\tif ( prev === null ) {\n\n\t\t\t\t\t\t\tkeyframe.value[ property ] = next.value[ property ];\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( next === null ) {\n\n\t\t\t\t\t\t\tkeyframe.value[ property ] = prev.value[ property ];\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinterpolate( keyframe, prev, next, property );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction getPrev( keyframes, i, property ) {\n\n\t\t\t\twhile ( i >= 0 ) {\n\n\t\t\t\t\tvar keyframe = keyframes[ i ];\n\n\t\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\t\ti --;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tfunction getNext( keyframes, i, property ) {\n\n\t\t\t\twhile ( i < keyframes.length ) {\n\n\t\t\t\t\tvar keyframe = keyframes[ i ];\n\n\t\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\t\ti ++;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tfunction interpolate( key, prev, next, property ) {\n\n\t\t\t\tif ( ( next.time - prev.time ) === 0 ) {\n\n\t\t\t\t\tkey.value[ property ] = prev.value[ property ];\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tkey.value[ property ] = ( ( key.time - prev.time ) * ( next.value[ property ] - prev.value[ property ] ) / ( next.time - prev.time ) ) + prev.value[ property ];\n\n\t\t\t}\n\n\t\t\t// animation clips\n\n\t\t\tfunction parseAnimationClip( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tname: xml.getAttribute( 'id' ) || 'default',\n\t\t\t\t\tstart: parseFloat( xml.getAttribute( 'start' ) || 0 ),\n\t\t\t\t\tend: parseFloat( xml.getAttribute( 'end' ) || 0 ),\n\t\t\t\t\tanimations: []\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'instance_animation':\n\t\t\t\t\t\t\tdata.animations.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.clips[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction buildAnimationClip( data ) {\n\n\t\t\t\tvar tracks = [];\n\n\t\t\t\tvar name = data.name;\n\t\t\t\tvar duration = ( data.end - data.start ) || - 1;\n\t\t\t\tvar animations = data.animations;\n\n\t\t\t\tfor ( var i = 0, il = animations.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar animationTracks = getAnimation( animations[ i ] );\n\n\t\t\t\t\tfor ( var j = 0, jl = animationTracks.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\ttracks.push( animationTracks[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new THREE.AnimationClip( name, duration, tracks );\n\n\t\t\t}\n\n\t\t\tfunction getAnimationClip( id ) {\n\n\t\t\t\treturn getBuild( library.clips[ id ], buildAnimationClip );\n\n\t\t\t}\n\n\t\t\t// controller\n\n\t\t\tfunction parseController( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'skin':\n\t\t\t\t\t\t\t// there is exactly one skin per controller\n\t\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\t\tdata.skin = parseSkin( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'morph':\n\t\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Morph target animation not supported yet.' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.controllers[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction parseSkin( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tsources: {}\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'bind_shape_matrix':\n\t\t\t\t\t\t\tdata.bindShapeMatrix = parseFloats( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'source':\n\t\t\t\t\t\t\tvar id = child.getAttribute( 'id' );\n\t\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'joints':\n\t\t\t\t\t\t\tdata.joints = parseJoints( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'vertex_weights':\n\t\t\t\t\t\t\tdata.vertexWeights = parseVertexWeights( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseJoints( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tinputs: {}\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'input':\n\t\t\t\t\t\t\tvar semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\t\tvar id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseVertexWeights( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tinputs: {}\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'input':\n\t\t\t\t\t\t\tvar semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\t\tvar id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\t\tvar offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\t\tdata.inputs[ semantic ] = { id: id, offset: offset };\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\t\tdata.vcount = parseInts( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tdata.v = parseInts( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction buildController( data ) {\n\n\t\t\t\tvar build = {\n\t\t\t\t\tid: data.id\n\t\t\t\t};\n\n\t\t\t\tvar geometry = library.geometries[ build.id ];\n\n\t\t\t\tif ( data.skin !== undefined ) {\n\n\t\t\t\t\tbuild.skin = buildSkin( data.skin );\n\n\t\t\t\t\t// we enhance the 'sources' property of the corresponding geometry with our skin data\n\n\t\t\t\t\tgeometry.sources.skinIndices = build.skin.indices;\n\t\t\t\t\tgeometry.sources.skinWeights = build.skin.weights;\n\n\t\t\t\t}\n\n\t\t\t\treturn build;\n\n\t\t\t}\n\n\t\t\tfunction buildSkin( data ) {\n\n\t\t\t\tvar BONE_LIMIT = 4;\n\n\t\t\t\tvar build = {\n\t\t\t\t\tjoints: [], // this must be an array to preserve the joint order\n\t\t\t\t\tindices: {\n\t\t\t\t\t\tarray: [],\n\t\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t\t},\n\t\t\t\t\tweights: {\n\t\t\t\t\t\tarray: [],\n\t\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar sources = data.sources;\n\t\t\t\tvar vertexWeights = data.vertexWeights;\n\n\t\t\t\tvar vcount = vertexWeights.vcount;\n\t\t\t\tvar v = vertexWeights.v;\n\t\t\t\tvar jointOffset = vertexWeights.inputs.JOINT.offset;\n\t\t\t\tvar weightOffset = vertexWeights.inputs.WEIGHT.offset;\n\n\t\t\t\tvar jointSource = data.sources[ data.joints.inputs.JOINT ];\n\t\t\t\tvar inverseSource = data.sources[ data.joints.inputs.INV_BIND_MATRIX ];\n\n\t\t\t\tvar weights = sources[ vertexWeights.inputs.WEIGHT.id ].array;\n\t\t\t\tvar stride = 0;\n\n\t\t\t\tvar i, j, l;\n\n\t\t\t\t// procces skin data for each vertex\n\n\t\t\t\tfor ( i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar jointCount = vcount[ i ]; // this is the amount of joints that affect a single vertex\n\t\t\t\t\tvar vertexSkinData = [];\n\n\t\t\t\t\tfor ( j = 0; j < jointCount; j ++ ) {\n\n\t\t\t\t\t\tvar skinIndex = v[ stride + jointOffset ];\n\t\t\t\t\t\tvar weightId = v[ stride + weightOffset ];\n\t\t\t\t\t\tvar skinWeight = weights[ weightId ];\n\n\t\t\t\t\t\tvertexSkinData.push( { index: skinIndex, weight: skinWeight } );\n\n\t\t\t\t\t\tstride += 2;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// we sort the joints in descending order based on the weights.\n\t\t\t\t\t// this ensures, we only procced the most important joints of the vertex\n\n\t\t\t\t\tvertexSkinData.sort( descending );\n\n\t\t\t\t\t// now we provide for each vertex a set of four index and weight values.\n\t\t\t\t\t// the order of the skin data matches the order of vertices\n\n\t\t\t\t\tfor ( j = 0; j < BONE_LIMIT; j ++ ) {\n\n\t\t\t\t\t\tvar d = vertexSkinData[ j ];\n\n\t\t\t\t\t\tif ( d !== undefined ) {\n\n\t\t\t\t\t\t\tbuild.indices.array.push( d.index );\n\t\t\t\t\t\t\tbuild.weights.array.push( d.weight );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbuild.indices.array.push( 0 );\n\t\t\t\t\t\t\tbuild.weights.array.push( 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// setup bind matrix\n\n\t\t\t\tif ( data.bindShapeMatrix ) {\n\n\t\t\t\t\tbuild.bindMatrix = new THREE.Matrix4().fromArray( data.bindShapeMatrix ).transpose();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbuild.bindMatrix = new THREE.Matrix4().identity();\n\n\t\t\t\t}\n\n\t\t\t\t// process bones and inverse bind matrix data\n\n\t\t\t\tfor ( i = 0, l = jointSource.array.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar name = jointSource.array[ i ];\n\t\t\t\t\tvar boneInverse = new THREE.Matrix4().fromArray( inverseSource.array, i * inverseSource.stride ).transpose();\n\n\t\t\t\t\tbuild.joints.push( { name: name, boneInverse: boneInverse } );\n\n\t\t\t\t}\n\n\t\t\t\treturn build;\n\n\t\t\t\t// array sort function\n\n\t\t\t\tfunction descending( a, b ) {\n\n\t\t\t\t\treturn b.weight - a.weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction getController( id ) {\n\n\t\t\t\treturn getBuild( library.controllers[ id ], buildController );\n\n\t\t\t}\n\n\t\t\t// image\n\n\t\t\tfunction parseImage( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tinit_from: getElementsByTagName( xml, 'init_from' )[ 0 ].textContent\n\t\t\t\t};\n\n\t\t\t\tlibrary.images[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction buildImage( data ) {\n\n\t\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\t\treturn data.init_from;\n\n\t\t\t}\n\n\t\t\tfunction getImage( id ) {\n\n\t\t\t\tvar data = library.images[ id ];\n\n\t\t\t\tif ( data !== undefined ) {\n\n\t\t\t\t\treturn getBuild( data, buildImage );\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find image with ID:', id );\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// effect\n\n\t\t\tfunction parseEffect( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'profile_COMMON':\n\t\t\t\t\t\t\tdata.profile = parseEffectProfileCOMMON( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.effects[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction parseEffectProfileCOMMON( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tsurfaces: {},\n\t\t\t\t\tsamplers: {}\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'newparam':\n\t\t\t\t\t\t\tparseEffectNewparam( child, data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\t\tdata.technique = parseEffectTechnique( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseEffectNewparam( xml, data ) {\n\n\t\t\t\tvar sid = xml.getAttribute( 'sid' );\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'surface':\n\t\t\t\t\t\t\tdata.surfaces[ sid ] = parseEffectSurface( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'sampler2D':\n\t\t\t\t\t\t\tdata.samplers[ sid ] = parseEffectSampler( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseEffectSurface( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'init_from':\n\t\t\t\t\t\t\tdata.init_from = child.textContent;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseEffectSampler( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'source':\n\t\t\t\t\t\t\tdata.source = child.textContent;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseEffectTechnique( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'constant':\n\t\t\t\t\t\tcase 'lambert':\n\t\t\t\t\t\tcase 'blinn':\n\t\t\t\t\t\tcase 'phong':\n\t\t\t\t\t\t\tdata.type = child.nodeName;\n\t\t\t\t\t\t\tdata.parameters = parseEffectParameters( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseEffectParameters( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'emission':\n\t\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\t\tcase 'specular':\n\t\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tcase 'ambient':\n\t\t\t\t\t\tcase 'shininess':\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectParameter( child );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\t\tdata[ child.nodeName ] = {\n\t\t\t\t\t\t\t\topaque: child.getAttribute( 'opaque' ),\n\t\t\t\t\t\t\t\tdata: parseEffectParameter( child )\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseEffectParameter( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tdata[ child.nodeName ] = parseFloats( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'float':\n\t\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), extra: parseEffectParameterTexture( child ) };\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseEffectParameterTexture( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\ttechnique: {}\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\t\tparseEffectParameterTextureExtra( child, data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseEffectParameterTextureExtra( xml, data ) {\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\t\tparseEffectParameterTextureExtraTechnique( child, data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseEffectParameterTextureExtraTechnique( xml, data ) {\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'repeatU':\n\t\t\t\t\t\tcase 'repeatV':\n\t\t\t\t\t\tcase 'offsetU':\n\t\t\t\t\t\tcase 'offsetV':\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'wrapU':\n\t\t\t\t\t\tcase 'wrapV':\n\n\t\t\t\t\t\t\t// some files have values for wrapU/wrapV which become NaN via parseInt\n\n\t\t\t\t\t\t\tif ( child.textContent.toUpperCase() === 'TRUE' ) {\n\n\t\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 1;\n\n\t\t\t\t\t\t\t} else if ( child.textContent.toUpperCase() === 'FALSE' ) {\n\n\t\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 0;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseInt( child.textContent );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseEffectExtra( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\t\tdata.technique = parseEffectExtraTechnique( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseEffectExtraTechnique( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'double_sided':\n\t\t\t\t\t\t\tdata[ child.nodeName ] = parseInt( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction buildEffect( data ) {\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction getEffect( id ) {\n\n\t\t\t\treturn getBuild( library.effects[ id ], buildEffect );\n\n\t\t\t}\n\n\t\t\t// material\n\n\t\t\tfunction parseMaterial( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'instance_effect':\n\t\t\t\t\t\t\tdata.url = parseId( child.getAttribute( 'url' ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.materials[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction getTextureLoader( image ) {\n\n\t\t\t\tvar loader;\n\n\t\t\t\tvar extension = image.slice( ( image.lastIndexOf( '.' ) - 1 >>> 0 ) + 2 ); // http://www.jstips.co/en/javascript/get-file-extension/\n\t\t\t\textension = extension.toLowerCase();\n\n\t\t\t\tswitch ( extension ) {\n\n\t\t\t\t\tcase 'tga':\n\t\t\t\t\t\tloader = tgaLoader;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tloader = textureLoader;\n\n\t\t\t\t}\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t\tfunction buildMaterial( data ) {\n\n\t\t\t\tvar effect = getEffect( data.url );\n\t\t\t\tvar technique = effect.profile.technique;\n\t\t\t\tvar extra = effect.profile.extra;\n\n\t\t\t\tvar material;\n\n\t\t\t\tswitch ( technique.type ) {\n\n\t\t\t\t\tcase 'phong':\n\t\t\t\t\tcase 'blinn':\n\t\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'lambert':\n\t\t\t\t\t\tmaterial = new THREE.MeshLambertMaterial();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial = new THREE.MeshBasicMaterial();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.name = data.name || '';\n\n\t\t\t\tfunction getTexture( textureObject ) {\n\n\t\t\t\t\tvar sampler = effect.profile.samplers[ textureObject.id ];\n\t\t\t\t\tvar image = null;\n\n\t\t\t\t\t// get image\n\n\t\t\t\t\tif ( sampler !== undefined ) {\n\n\t\t\t\t\t\tvar surface = effect.profile.surfaces[ sampler.source ];\n\t\t\t\t\t\timage = getImage( surface.init_from );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).' );\n\t\t\t\t\t\timage = getImage( textureObject.id );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create texture if image is avaiable\n\n\t\t\t\t\tif ( image !== null ) {\n\n\t\t\t\t\t\tvar loader = getTextureLoader( image );\n\n\t\t\t\t\t\tif ( loader !== undefined ) {\n\n\t\t\t\t\t\t\tvar texture = loader.load( image );\n\n\t\t\t\t\t\t\tvar extra = textureObject.extra;\n\n\t\t\t\t\t\t\tif ( extra !== undefined && extra.technique !== undefined && isEmpty( extra.technique ) === false ) {\n\n\t\t\t\t\t\t\t\tvar technique = extra.technique;\n\n\t\t\t\t\t\t\t\ttexture.wrapS = technique.wrapU ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\t\t\t\t\t\t\t\ttexture.wrapT = technique.wrapV ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\n\t\t\t\t\t\t\t\ttexture.offset.set( technique.offsetU || 0, technique.offsetV || 0 );\n\t\t\t\t\t\t\t\ttexture.repeat.set( technique.repeatU || 1, technique.repeatV || 1 );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\ttexture.wrapS = THREE.RepeatWrapping;\n\t\t\t\t\t\t\t\ttexture.wrapT = THREE.RepeatWrapping;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Loader for texture %s not found.', image );\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t create texture with ID:', textureObject.id );\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar parameters = technique.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvar parameter = parameters[ key ];\n\n\t\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\t\t\tif ( parameter.color ) material.color.fromArray( parameter.color );\n\t\t\t\t\t\t\tif ( parameter.texture ) material.map = getTexture( parameter.texture );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specular':\n\t\t\t\t\t\t\tif ( parameter.color && material.specular ) material.specular.fromArray( parameter.color );\n\t\t\t\t\t\t\tif ( parameter.texture ) material.specularMap = getTexture( parameter.texture );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\t\tif ( parameter.texture ) material.normalMap = getTexture( parameter.texture );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'ambient':\n\t\t\t\t\t\t\tif ( parameter.texture ) material.lightMap = getTexture( parameter.texture );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shininess':\n\t\t\t\t\t\t\tif ( parameter.float && material.shininess ) material.shininess = parameter.float;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'emission':\n\t\t\t\t\t\t\tif ( parameter.color && material.emissive ) material.emissive.fromArray( parameter.color );\n\t\t\t\t\t\t\tif ( parameter.texture ) material.emissiveMap = getTexture( parameter.texture );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar transparent = parameters[ 'transparent' ];\n\t\t\t\tvar transparency = parameters[ 'transparency' ];\n\n\t\t\t\t// <transparency> does not exist but <transparent>\n\n\t\t\t\tif ( transparency === undefined && transparent ) {\n\n\t\t\t\t\ttransparency = {\n\t\t\t\t\t\tfloat: 1\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\t// <transparent> does not exist but <transparency>\n\n\t\t\t\tif ( transparent === undefined && transparency ) {\n\n\t\t\t\t\ttransparent = {\n\t\t\t\t\t\topaque: 'A_ONE',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tcolor: [ 1, 1, 1, 1 ]\n\t\t\t\t\t\t} };\n\n\t\t\t\t}\n\n\t\t\t\tif ( transparent && transparency ) {\n\n\t\t\t\t\t// handle case if a texture exists but no color\n\n\t\t\t\t\tif ( transparent.data.texture ) {\n\n\t\t\t\t\t\t// we do not set an alpha map (see #13792)\n\n\t\t\t\t\t\tmaterial.transparent = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar color = transparent.data.color;\n\n\t\t\t\t\t\tswitch ( transparent.opaque ) {\n\n\t\t\t\t\t\t\tcase 'A_ONE':\n\t\t\t\t\t\t\t\tmaterial.opacity = color[ 3 ] * transparency.float;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'RGB_ZERO':\n\t\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 0 ] * transparency.float );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'A_ZERO':\n\t\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 3 ] * transparency.float );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'RGB_ONE':\n\t\t\t\t\t\t\t\tmaterial.opacity = color[ 0 ] * transparency.float;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.', transparent.opaque );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( material.opacity < 1 ) material.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( extra !== undefined && extra.technique !== undefined && extra.technique.double_sided === 1 ) {\n\n\t\t\t\t\tmaterial.side = THREE.DoubleSide;\n\n\t\t\t\t}\n\n\t\t\t\treturn material;\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( id ) {\n\n\t\t\t\treturn getBuild( library.materials[ id ], buildMaterial );\n\n\t\t\t}\n\n\t\t\t// camera\n\n\t\t\tfunction parseCamera( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'optics':\n\t\t\t\t\t\t\tdata.optics = parseCameraOptics( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.cameras[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction parseCameraOptics( xml ) {\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\t\treturn parseCameraTechnique( child );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn {};\n\n\t\t\t}\n\n\t\t\tfunction parseCameraTechnique( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'perspective':\n\t\t\t\t\t\tcase 'orthographic':\n\n\t\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\t\tdata.parameters = parseCameraParameters( child );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseCameraParameters( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'xfov':\n\t\t\t\t\t\tcase 'yfov':\n\t\t\t\t\t\tcase 'xmag':\n\t\t\t\t\t\tcase 'ymag':\n\t\t\t\t\t\tcase 'znear':\n\t\t\t\t\t\tcase 'zfar':\n\t\t\t\t\t\tcase 'aspect_ratio':\n\t\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction buildCamera( data ) {\n\n\t\t\t\tvar camera;\n\n\t\t\t\tswitch ( data.optics.technique ) {\n\n\t\t\t\t\tcase 'perspective':\n\t\t\t\t\t\tcamera = new THREE.PerspectiveCamera(\n\t\t\t\t\t\t\tdata.optics.parameters.yfov,\n\t\t\t\t\t\t\tdata.optics.parameters.aspect_ratio,\n\t\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'orthographic':\n\t\t\t\t\t\tvar ymag = data.optics.parameters.ymag;\n\t\t\t\t\t\tvar xmag = data.optics.parameters.xmag;\n\t\t\t\t\t\tvar aspectRatio = data.optics.parameters.aspect_ratio;\n\n\t\t\t\t\t\txmag = ( xmag === undefined ) ? ( ymag * aspectRatio ) : xmag;\n\t\t\t\t\t\tymag = ( ymag === undefined ) ? ( xmag / aspectRatio ) : ymag;\n\n\t\t\t\t\t\txmag *= 0.5;\n\t\t\t\t\t\tymag *= 0.5;\n\n\t\t\t\t\t\tcamera = new THREE.OrthographicCamera(\n\t\t\t\t\t\t\t- xmag, xmag, ymag, - ymag, // left, right, top, bottom\n\t\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcamera = new THREE.PerspectiveCamera();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcamera.name = data.name || '';\n\n\t\t\t\treturn camera;\n\n\t\t\t}\n\n\t\t\tfunction getCamera( id ) {\n\n\t\t\t\tvar data = library.cameras[ id ];\n\n\t\t\t\tif ( data !== undefined ) {\n\n\t\t\t\t\treturn getBuild( data, buildCamera );\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find camera with ID:', id );\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// light\n\n\t\t\tfunction parseLight( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\t\tdata = parseLightTechnique( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.lights[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction parseLightTechnique( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'directional':\n\t\t\t\t\t\tcase 'point':\n\t\t\t\t\t\tcase 'spot':\n\t\t\t\t\t\tcase 'ambient':\n\n\t\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\t\tdata.parameters = parseLightParameters( child );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseLightParameters( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tdata.color = new THREE.Color().fromArray( array );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'falloff_angle':\n\t\t\t\t\t\t\tdata.falloffAngle = parseFloat( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'quadratic_attenuation':\n\t\t\t\t\t\t\tvar f = parseFloat( child.textContent );\n\t\t\t\t\t\t\tdata.distance = f ? Math.sqrt( 1 / f ) : 0;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction buildLight( data ) {\n\n\t\t\t\tvar light;\n\n\t\t\t\tswitch ( data.technique ) {\n\n\t\t\t\t\tcase 'directional':\n\t\t\t\t\t\tlight = new THREE.DirectionalLight();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'point':\n\t\t\t\t\t\tlight = new THREE.PointLight();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'spot':\n\t\t\t\t\t\tlight = new THREE.SpotLight();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ambient':\n\t\t\t\t\t\tlight = new THREE.AmbientLight();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.parameters.color ) light.color.copy( data.parameters.color );\n\t\t\t\tif ( data.parameters.distance ) light.distance = data.parameters.distance;\n\n\t\t\t\treturn light;\n\n\t\t\t}\n\n\t\t\tfunction getLight( id ) {\n\n\t\t\t\tvar data = library.lights[ id ];\n\n\t\t\t\tif ( data !== undefined ) {\n\n\t\t\t\t\treturn getBuild( data, buildLight );\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find light with ID:', id );\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// geometry\n\n\t\t\tfunction parseGeometry( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\t\tsources: {},\n\t\t\t\t\tvertices: {},\n\t\t\t\t\tprimitives: []\n\t\t\t\t};\n\n\t\t\t\tvar mesh = getElementsByTagName( xml, 'mesh' )[ 0 ];\n\n\t\t\t\t// the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep\n\t\t\t\tif ( mesh === undefined ) return;\n\n\t\t\t\tfor ( var i = 0; i < mesh.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = mesh.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tvar id = child.getAttribute( 'id' );\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'source':\n\t\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'vertices':\n\t\t\t\t\t\t\t// data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\n\t\t\t\t\t\t\tdata.vertices = parseGeometryVertices( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'polygons':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unsupported primitive type: ', child.nodeName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'lines':\n\t\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\tcase 'polylist':\n\t\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\t\tdata.primitives.push( parseGeometryPrimitive( child ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.geometries[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction parseSource( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tarray: [],\n\t\t\t\t\tstride: 3\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'float_array':\n\t\t\t\t\t\t\tdata.array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Name_array':\n\t\t\t\t\t\t\tdata.array = parseStrings( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\t\tvar accessor = getElementsByTagName( child, 'accessor' )[ 0 ];\n\n\t\t\t\t\t\t\tif ( accessor !== undefined ) {\n\n\t\t\t\t\t\t\t\tdata.stride = parseInt( accessor.getAttribute( 'stride' ) );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseGeometryVertices( xml ) {\n\n\t\t\t\tvar data = {};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tdata[ child.getAttribute( 'semantic' ) ] = parseId( child.getAttribute( 'source' ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseGeometryPrimitive( xml ) {\n\n\t\t\t\tvar primitive = {\n\t\t\t\t\ttype: xml.nodeName,\n\t\t\t\t\tmaterial: xml.getAttribute( 'material' ),\n\t\t\t\t\tcount: parseInt( xml.getAttribute( 'count' ) ),\n\t\t\t\t\tinputs: {},\n\t\t\t\t\tstride: 0,\n\t\t\t\t\thasUV: false\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'input':\n\t\t\t\t\t\t\tvar id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\t\tvar semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\t\tvar offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\t\tvar set = parseInt( child.getAttribute( 'set' ) );\n\t\t\t\t\t\t\tvar inputname = ( set > 0 ? semantic + set : semantic );\n\t\t\t\t\t\t\tprimitive.inputs[ inputname ] = { id: id, offset: offset };\n\t\t\t\t\t\t\tprimitive.stride = Math.max( primitive.stride, offset + 1 );\n\t\t\t\t\t\t\tif ( semantic === 'TEXCOORD' ) primitive.hasUV = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\t\tprimitive.vcount = parseInts( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'p':\n\t\t\t\t\t\t\tprimitive.p = parseInts( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn primitive;\n\n\t\t\t}\n\n\t\t\tfunction groupPrimitives( primitives ) {\n\n\t\t\t\tvar build = {};\n\n\t\t\t\tfor ( var i = 0; i < primitives.length; i ++ ) {\n\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\tif ( build[ primitive.type ] === undefined ) build[ primitive.type ] = [];\n\n\t\t\t\t\tbuild[ primitive.type ].push( primitive );\n\n\t\t\t\t}\n\n\t\t\t\treturn build;\n\n\t\t\t}\n\n\t\t\tfunction checkUVCoordinates( primitives ) {\n\n\t\t\t\tvar count = 0;\n\n\t\t\t\tfor ( var i = 0, l = primitives.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\tif ( primitive.hasUV === true ) {\n\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( count > 0 && count < primitives.length ) {\n\n\t\t\t\t\tprimitives.uvsNeedsFix = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction buildGeometry( data ) {\n\n\t\t\t\tvar build = {};\n\n\t\t\t\tvar sources = data.sources;\n\t\t\t\tvar vertices = data.vertices;\n\t\t\t\tvar primitives = data.primitives;\n\n\t\t\t\tif ( primitives.length === 0 ) return {};\n\n\t\t\t\t// our goal is to create one buffer geometry for a single type of primitives\n\t\t\t\t// first, we group all primitives by their type\n\n\t\t\t\tvar groupedPrimitives = groupPrimitives( primitives );\n\n\t\t\t\tfor ( var type in groupedPrimitives ) {\n\n\t\t\t\t\tvar primitiveType = groupedPrimitives[ type ];\n\n\t\t\t\t\t// second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)\n\n\t\t\t\t\tcheckUVCoordinates( primitiveType );\n\n\t\t\t\t\t// third, create a buffer geometry for each type of primitives\n\n\t\t\t\t\tbuild[ type ] = buildGeometryType( primitiveType, sources, vertices );\n\n\t\t\t\t}\n\n\t\t\t\treturn build;\n\n\t\t\t}\n\n\t\t\tfunction buildGeometryType( primitives, sources, vertices ) {\n\n\t\t\t\tvar build = {};\n\n\t\t\t\tvar position = { array: [], stride: 0 };\n\t\t\t\tvar normal = { array: [], stride: 0 };\n\t\t\t\tvar uv = { array: [], stride: 0 };\n\t\t\t\tvar uv2 = { array: [], stride: 0 };\n\t\t\t\tvar color = { array: [], stride: 0 };\n\n\t\t\t\tvar skinIndex = { array: [], stride: 4 };\n\t\t\t\tvar skinWeight = { array: [], stride: 4 };\n\n\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\tvar materialKeys = [];\n\n\t\t\t\tvar start = 0;\n\n\t\t\t\tfor ( var p = 0; p < primitives.length; p ++ ) {\n\n\t\t\t\t\tvar primitive = primitives[ p ];\n\t\t\t\t\tvar inputs = primitive.inputs;\n\n\t\t\t\t\t// groups\n\n\t\t\t\t\tvar count = 0;\n\n\t\t\t\t\tswitch ( primitive.type ) {\n\n\t\t\t\t\t\tcase 'lines':\n\t\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\t\tcount = primitive.count * 2;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\t\tcount = primitive.count * 3;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'polylist':\n\n\t\t\t\t\t\t\tfor ( var g = 0; g < primitive.count; g ++ ) {\n\n\t\t\t\t\t\t\t\tvar vc = primitive.vcount[ g ];\n\n\t\t\t\t\t\t\t\tswitch ( vc ) {\n\n\t\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t\tcount += 3; // single triangle\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t\tcount += 6; // quad, subdivided into two triangles\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tcount += ( vc - 2 ) * 3; // polylist with more than four vertices\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknow primitive type:', primitive.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addGroup( start, count, p );\n\t\t\t\t\tstart += count;\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tif ( primitive.material ) {\n\n\t\t\t\t\t\tmaterialKeys.push( primitive.material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// geometry data\n\n\t\t\t\t\tfor ( var name in inputs ) {\n\n\t\t\t\t\t\tvar input = inputs[ name ];\n\n\t\t\t\t\t\tswitch ( name )\t{\n\n\t\t\t\t\t\t\tcase 'VERTEX':\n\t\t\t\t\t\t\t\tfor ( var key in vertices ) {\n\n\t\t\t\t\t\t\t\t\tvar id = vertices[ key ];\n\n\t\t\t\t\t\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 'POSITION':\n\t\t\t\t\t\t\t\t\t\t\tvar prevLength = position.array.length;\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, position.array );\n\t\t\t\t\t\t\t\t\t\t\tposition.stride = sources[ id ].stride;\n\n\t\t\t\t\t\t\t\t\t\t\tif ( sources.skinWeights && sources.skinIndices ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinIndices, input.offset, skinIndex.array );\n\t\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinWeights, input.offset, skinWeight.array );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// see #3803\n\n\t\t\t\t\t\t\t\t\t\t\tif ( primitive.hasUV === false && primitives.uvsNeedsFix === true ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tvar count = ( position.array.length - prevLength ) / position.stride;\n\n\t\t\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t// fill missing uv coordinates\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tuv.array.push( 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, normal.array );\n\t\t\t\t\t\t\t\t\t\t\tnormal.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, color.array );\n\t\t\t\t\t\t\t\t\t\t\tcolor.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv.array );\n\t\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv2.array );\n\t\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, normal.array );\n\t\t\t\t\t\t\t\tnormal.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, color.array );\n\t\t\t\t\t\t\t\tcolor.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv.array );\n\t\t\t\t\t\t\t\tuv.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv2.array );\n\t\t\t\t\t\t\t\tuv2.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// build geometry\n\n\t\t\t\tif ( position.array.length > 0 ) geometry.setAttribute( 'position', new THREE.Float32BufferAttribute( position.array, position.stride ) );\n\t\t\t\tif ( normal.array.length > 0 ) geometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( normal.array, normal.stride ) );\n\t\t\t\tif ( color.array.length > 0 ) geometry.setAttribute( 'color', new THREE.Float32BufferAttribute( color.array, color.stride ) );\n\t\t\t\tif ( uv.array.length > 0 ) geometry.setAttribute( 'uv', new THREE.Float32BufferAttribute( uv.array, uv.stride ) );\n\t\t\t\tif ( uv2.array.length > 0 ) geometry.setAttribute( 'uv2', new THREE.Float32BufferAttribute( uv2.array, uv2.stride ) );\n\n\t\t\t\tif ( skinIndex.array.length > 0 ) geometry.setAttribute( 'skinIndex', new THREE.Float32BufferAttribute( skinIndex.array, skinIndex.stride ) );\n\t\t\t\tif ( skinWeight.array.length > 0 ) geometry.setAttribute( 'skinWeight', new THREE.Float32BufferAttribute( skinWeight.array, skinWeight.stride ) );\n\n\t\t\t\tbuild.data = geometry;\n\t\t\t\tbuild.type = primitives[ 0 ].type;\n\t\t\t\tbuild.materialKeys = materialKeys;\n\n\t\t\t\treturn build;\n\n\t\t\t}\n\n\t\t\tfunction buildGeometryData( primitive, source, offset, array ) {\n\n\t\t\t\tvar indices = primitive.p;\n\t\t\t\tvar stride = primitive.stride;\n\t\t\t\tvar vcount = primitive.vcount;\n\n\t\t\t\tfunction pushVector( i ) {\n\n\t\t\t\t\tvar index = indices[ i + offset ] * sourceStride;\n\t\t\t\t\tvar length = index + sourceStride;\n\n\t\t\t\t\tfor ( ; index < length; index ++ ) {\n\n\t\t\t\t\t\tarray.push( sourceArray[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar sourceArray = source.array;\n\t\t\t\tvar sourceStride = source.stride;\n\n\t\t\t\tif ( primitive.vcount !== undefined ) {\n\n\t\t\t\t\tvar index = 0;\n\n\t\t\t\t\tfor ( var i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar count = vcount[ i ];\n\n\t\t\t\t\t\tif ( count === 4 ) {\n\n\t\t\t\t\t\t\tvar a = index + stride * 0;\n\t\t\t\t\t\t\tvar b = index + stride * 1;\n\t\t\t\t\t\t\tvar c = index + stride * 2;\n\t\t\t\t\t\t\tvar d = index + stride * 3;\n\n\t\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( d );\n\t\t\t\t\t\t\tpushVector( b ); pushVector( c ); pushVector( d );\n\n\t\t\t\t\t\t} else if ( count === 3 ) {\n\n\t\t\t\t\t\t\tvar a = index + stride * 0;\n\t\t\t\t\t\t\tvar b = index + stride * 1;\n\t\t\t\t\t\t\tvar c = index + stride * 2;\n\n\t\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t\t} else if ( count > 4 ) {\n\n\t\t\t\t\t\t\tfor ( var k = 1, kl = ( count - 2 ); k <= kl; k ++ ) {\n\n\t\t\t\t\t\t\t\tvar a = index + stride * 0;\n\t\t\t\t\t\t\t\tvar b = index + stride * k;\n\t\t\t\t\t\t\t\tvar c = index + stride * ( k + 1 );\n\n\t\t\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex += stride * count;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += stride ) {\n\n\t\t\t\t\t\tpushVector( i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction getGeometry( id ) {\n\n\t\t\t\treturn getBuild( library.geometries[ id ], buildGeometry );\n\n\t\t\t}\n\n\t\t\t// kinematics\n\n\t\t\tfunction parseKinematicsModel( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\t\tjoints: {},\n\t\t\t\t\tlinks: []\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\t\tparseKinematicsTechniqueCommon( child, data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.kinematicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction buildKinematicsModel( data ) {\n\n\t\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction getKinematicsModel( id ) {\n\n\t\t\t\treturn getBuild( library.kinematicsModels[ id ], buildKinematicsModel );\n\n\t\t\t}\n\n\t\t\tfunction parseKinematicsTechniqueCommon( xml, data ) {\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'joint':\n\t\t\t\t\t\t\tdata.joints[ child.getAttribute( 'sid' ) ] = parseKinematicsJoint( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'link':\n\t\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseKinematicsJoint( xml ) {\n\n\t\t\t\tvar data;\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\t\tdata = parseKinematicsJointParameter( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseKinematicsJointParameter( xml, data ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\t\taxis: new THREE.Vector3(),\n\t\t\t\t\tlimits: {\n\t\t\t\t\t\tmin: 0,\n\t\t\t\t\t\tmax: 0\n\t\t\t\t\t},\n\t\t\t\t\ttype: xml.nodeName,\n\t\t\t\t\tstatic: false,\n\t\t\t\t\tzeroPosition: 0,\n\t\t\t\t\tmiddlePosition: 0\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tdata.axis.fromArray( array );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'limits':\n\t\t\t\t\t\t\tvar max = child.getElementsByTagName( 'max' )[ 0 ];\n\t\t\t\t\t\t\tvar min = child.getElementsByTagName( 'min' )[ 0 ];\n\n\t\t\t\t\t\t\tdata.limits.max = parseFloat( max.textContent );\n\t\t\t\t\t\t\tdata.limits.min = parseFloat( min.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// if min is equal to or greater than max, consider the joint static\n\n\t\t\t\tif ( data.limits.min >= data.limits.max ) {\n\n\t\t\t\t\tdata.static = true;\n\n\t\t\t\t}\n\n\t\t\t\t// calculate middle position\n\n\t\t\t\tdata.middlePosition = ( data.limits.min + data.limits.max ) / 2.0;\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseKinematicsLink( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\t\tattachments: [],\n\t\t\t\t\ttransforms: []\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'attachment_full':\n\t\t\t\t\t\t\tdata.attachments.push( parseKinematicsAttachment( child ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseKinematicsAttachment( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tjoint: xml.getAttribute( 'joint' ).split( '/' ).pop(),\n\t\t\t\t\ttransforms: [],\n\t\t\t\t\tlinks: []\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'link':\n\t\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseKinematicsTransform( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\ttype: xml.nodeName\n\t\t\t\t};\n\n\t\t\t\tvar array = parseFloats( xml.textContent );\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tdata.obj = new THREE.Matrix4();\n\t\t\t\t\t\tdata.obj.fromArray( array ).transpose();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\tdata.obj = new THREE.Vector3();\n\t\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tdata.obj = new THREE.Vector3();\n\t\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\t\tdata.angle = THREE.MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\t// physics\n\n\t\t\tfunction parsePhysicsModel( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\t\trigidBodies: {}\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'rigid_body':\n\t\t\t\t\t\t\tdata.rigidBodies[ child.getAttribute( 'name' ) ] = {};\n\t\t\t\t\t\t\tparsePhysicsRigidBody( child, data.rigidBodies[ child.getAttribute( 'name' ) ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.physicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction parsePhysicsRigidBody( xml, data ) {\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\t\tparsePhysicsTechniqueCommon( child, data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parsePhysicsTechniqueCommon( xml, data ) {\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'inertia':\n\t\t\t\t\t\t\tdata.inertia = parseFloats( child.textContent );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'mass':\n\t\t\t\t\t\t\tdata.mass = parseFloats( child.textContent )[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// scene\n\n\t\t\tfunction parseKinematicsScene( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tbindJointAxis: []\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'bind_joint_axis':\n\t\t\t\t\t\t\tdata.bindJointAxis.push( parseKinematicsBindJointAxis( child ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.kinematicsScenes[ parseId( xml.getAttribute( 'url' ) ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction parseKinematicsBindJointAxis( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\ttarget: xml.getAttribute( 'target' ).split( '/' ).pop()\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\t\tvar param = child.getElementsByTagName( 'param' )[ 0 ];\n\t\t\t\t\t\t\tdata.axis = param.textContent;\n\t\t\t\t\t\t\tvar tmpJointIndex = data.axis.split( 'inst_' ).pop().split( 'axis' )[ 0 ];\n\t\t\t\t\t\t\tdata.jointIndex = tmpJointIndex.substr( 0, tmpJointIndex.length - 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction buildKinematicsScene( data ) {\n\n\t\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction getKinematicsScene( id ) {\n\n\t\t\t\treturn getBuild( library.kinematicsScenes[ id ], buildKinematicsScene );\n\n\t\t\t}\n\n\t\t\tfunction setupKinematics() {\n\n\t\t\t\tvar kinematicsModelId = Object.keys( library.kinematicsModels )[ 0 ];\n\t\t\t\tvar kinematicsSceneId = Object.keys( library.kinematicsScenes )[ 0 ];\n\t\t\t\tvar visualSceneId = Object.keys( library.visualScenes )[ 0 ];\n\n\t\t\t\tif ( kinematicsModelId === undefined || kinematicsSceneId === undefined ) return;\n\n\t\t\t\tvar kinematicsModel = getKinematicsModel( kinematicsModelId );\n\t\t\t\tvar kinematicsScene = getKinematicsScene( kinematicsSceneId );\n\t\t\t\tvar visualScene = getVisualScene( visualSceneId );\n\n\t\t\t\tvar bindJointAxis = kinematicsScene.bindJointAxis;\n\t\t\t\tvar jointMap = {};\n\n\t\t\t\tfor ( var i = 0, l = bindJointAxis.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar axis = bindJointAxis[ i ];\n\n\t\t\t\t\t// the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\n\n\t\t\t\t\tvar targetElement = collada.querySelector( '[sid=\"' + axis.target + '\"]' );\n\n\t\t\t\t\tif ( targetElement ) {\n\n\t\t\t\t\t\t// get the parent of the transfrom element\n\n\t\t\t\t\t\tvar parentVisualElement = targetElement.parentElement;\n\n\t\t\t\t\t\t// connect the joint of the kinematics model with the element in the visual scene\n\n\t\t\t\t\t\tconnect( axis.jointIndex, parentVisualElement );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfunction connect( jointIndex, visualElement ) {\n\n\t\t\t\t\tvar visualElementName = visualElement.getAttribute( 'name' );\n\t\t\t\t\tvar joint = kinematicsModel.joints[ jointIndex ];\n\n\t\t\t\t\tvisualScene.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.name === visualElementName ) {\n\n\t\t\t\t\t\t\tjointMap[ jointIndex ] = {\n\t\t\t\t\t\t\t\tobject: object,\n\t\t\t\t\t\t\t\ttransforms: buildTransformList( visualElement ),\n\t\t\t\t\t\t\t\tjoint: joint,\n\t\t\t\t\t\t\t\tposition: joint.zeroPosition\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tvar m0 = new THREE.Matrix4();\n\n\t\t\t\tkinematics = {\n\n\t\t\t\t\tjoints: kinematicsModel && kinematicsModel.joints,\n\n\t\t\t\t\tgetJointValue: function ( jointIndex ) {\n\n\t\t\t\t\t\tvar jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\t\treturn jointData.position;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\n\t\t\t\t\tsetJointValue: function ( jointIndex, value ) {\n\n\t\t\t\t\t\tvar jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\t\tvar joint = jointData.joint;\n\n\t\t\t\t\t\t\tif ( value > joint.limits.max || value < joint.limits.min ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').' );\n\n\t\t\t\t\t\t\t} else if ( joint.static ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' is static.' );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar object = jointData.object;\n\t\t\t\t\t\t\t\tvar axis = joint.axis;\n\t\t\t\t\t\t\t\tvar transforms = jointData.transforms;\n\n\t\t\t\t\t\t\t\tmatrix.identity();\n\n\t\t\t\t\t\t\t\t// each update, we have to apply all transforms in the correct order\n\n\t\t\t\t\t\t\t\tfor ( var i = 0; i < transforms.length; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar transform = transforms[ i ];\n\n\t\t\t\t\t\t\t\t\t// if there is a connection of the transform node with a joint, apply the joint value\n\n\t\t\t\t\t\t\t\t\tif ( transform.sid && transform.sid.indexOf( jointIndex ) !== - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tswitch ( joint.type ) {\n\n\t\t\t\t\t\t\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( axis, THREE.MathUtils.degToRad( value ) ) );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( axis.x * value, axis.y * value, axis.z * value ) );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknown joint type: ' + joint.type );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tswitch ( transform.type ) {\n\n\t\t\t\t\t\t\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( transform.obj.x, transform.obj.y, transform.obj.z ) );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\t\t\t\t\t\tmatrix.scale( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( transform.obj, transform.angle ) );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tobject.matrix.copy( matrix );\n\t\t\t\t\t\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t\t\t\t\tjointMap[ jointIndex ].position = value;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.log( 'THREE.ColladaLoader: ' + jointIndex + ' does not exist.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction buildTransformList( node ) {\n\n\t\t\t\tvar transforms = [];\n\n\t\t\t\tvar xml = collada.querySelector( '[id=\"' + node.id + '\"]' );\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tvar matrix = new THREE.Matrix4().fromArray( array ).transpose();\n\t\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\t\tobj: matrix\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tvar vector = new THREE.Vector3().fromArray( array );\n\t\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\t\tobj: vector\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tvar vector = new THREE.Vector3().fromArray( array );\n\t\t\t\t\t\t\tvar angle = THREE.MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\t\tobj: vector,\n\t\t\t\t\t\t\t\tangle: angle\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn transforms;\n\n\t\t\t}\n\n\t\t\t// nodes\n\n\t\t\tfunction prepareNodes( xml ) {\n\n\t\t\t\tvar elements = xml.getElementsByTagName( 'node' );\n\n\t\t\t\t// ensure all node elements have id attributes\n\n\t\t\t\tfor ( var i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\t\tvar element = elements[ i ];\n\n\t\t\t\t\tif ( element.hasAttribute( 'id' ) === false ) {\n\n\t\t\t\t\t\telement.setAttribute( 'id', generateId() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\tfunction parseNode( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\t\ttype: xml.getAttribute( 'type' ),\n\t\t\t\t\tid: xml.getAttribute( 'id' ),\n\t\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\t\tmatrix: new THREE.Matrix4(),\n\t\t\t\t\tnodes: [],\n\t\t\t\t\tinstanceCameras: [],\n\t\t\t\t\tinstanceControllers: [],\n\t\t\t\t\tinstanceLights: [],\n\t\t\t\t\tinstanceGeometries: [],\n\t\t\t\t\tinstanceNodes: [],\n\t\t\t\t\ttransforms: {}\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'node':\n\t\t\t\t\t\t\tdata.nodes.push( child.getAttribute( 'id' ) );\n\t\t\t\t\t\t\tparseNode( child );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'instance_camera':\n\t\t\t\t\t\t\tdata.instanceCameras.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'instance_controller':\n\t\t\t\t\t\t\tdata.instanceControllers.push( parseNodeInstance( child ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'instance_light':\n\t\t\t\t\t\t\tdata.instanceLights.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'instance_geometry':\n\t\t\t\t\t\t\tdata.instanceGeometries.push( parseNodeInstance( child ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'instance_node':\n\t\t\t\t\t\t\tdata.instanceNodes.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tdata.matrix.multiply( matrix.fromArray( array ).transpose() );\n\t\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tvector.fromArray( array );\n\t\t\t\t\t\t\tdata.matrix.multiply( matrix.makeTranslation( vector.x, vector.y, vector.z ) );\n\t\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tvar angle = THREE.MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\t\t\tdata.matrix.multiply( matrix.makeRotationAxis( vector.fromArray( array ), angle ) );\n\t\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\t\tdata.matrix.scale( vector.fromArray( array ) );\n\t\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasNode( data.id ) ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.', data.id );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlibrary.nodes[ data.id ] = data;\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction parseNodeInstance( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tid: parseId( xml.getAttribute( 'url' ) ),\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\tskeletons: []\n\t\t\t\t};\n\n\t\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\t\tcase 'bind_material':\n\t\t\t\t\t\t\tvar instances = child.getElementsByTagName( 'instance_material' );\n\n\t\t\t\t\t\t\tfor ( var j = 0; j < instances.length; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar instance = instances[ j ];\n\t\t\t\t\t\t\t\tvar symbol = instance.getAttribute( 'symbol' );\n\t\t\t\t\t\t\t\tvar target = instance.getAttribute( 'target' );\n\n\t\t\t\t\t\t\t\tdata.materials[ symbol ] = parseId( target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'skeleton':\n\t\t\t\t\t\t\tdata.skeletons.push( parseId( child.textContent ) );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tfunction buildSkeleton( skeletons, joints ) {\n\n\t\t\t\tvar boneData = [];\n\t\t\t\tvar sortedBoneData = [];\n\n\t\t\t\tvar i, j, data;\n\n\t\t\t\t// a skeleton can have multiple root bones. collada expresses this\n\t\t\t\t// situtation with multiple \"skeleton\" tags per controller instance\n\n\t\t\t\tfor ( i = 0; i < skeletons.length; i ++ ) {\n\n\t\t\t\t\tvar skeleton = skeletons[ i ];\n\n\t\t\t\t\tvar root;\n\n\t\t\t\t\tif ( hasNode( skeleton ) ) {\n\n\t\t\t\t\t\troot = getNode( skeleton );\n\t\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t\t} else if ( hasVisualScene( skeleton ) ) {\n\n\t\t\t\t\t\t// handle case where the skeleton refers to the visual scene (#13335)\n\n\t\t\t\t\t\tvar visualScene = library.visualScenes[ skeleton ];\n\t\t\t\t\t\tvar children = visualScene.children;\n\n\t\t\t\t\t\tfor ( var j = 0; j < children.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar child = children[ j ];\n\n\t\t\t\t\t\t\tif ( child.type === 'JOINT' ) {\n\n\t\t\t\t\t\t\t\tvar root = getNode( child.id );\n\t\t\t\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.ColladaLoader: Unable to find root bone of skeleton with ID:', skeleton );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// sort bone data (the order is defined in the corresponding controller)\n\n\t\t\t\tfor ( i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\t\tfor ( j = 0; j < boneData.length; j ++ ) {\n\n\t\t\t\t\t\tdata = boneData[ j ];\n\n\t\t\t\t\t\tif ( data.bone.name === joints[ i ].name ) {\n\n\t\t\t\t\t\t\tsortedBoneData[ i ] = data;\n\t\t\t\t\t\t\tdata.processed = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// add unprocessed bone data at the end of the list\n\n\t\t\t\tfor ( i = 0; i < boneData.length; i ++ ) {\n\n\t\t\t\t\tdata = boneData[ i ];\n\n\t\t\t\t\tif ( data.processed === false ) {\n\n\t\t\t\t\t\tsortedBoneData.push( data );\n\t\t\t\t\t\tdata.processed = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// setup arrays for skeleton creation\n\n\t\t\t\tvar bones = [];\n\t\t\t\tvar boneInverses = [];\n\n\t\t\t\tfor ( i = 0; i < sortedBoneData.length; i ++ ) {\n\n\t\t\t\t\tdata = sortedBoneData[ i ];\n\n\t\t\t\t\tbones.push( data.bone );\n\t\t\t\t\tboneInverses.push( data.boneInverse );\n\n\t\t\t\t}\n\n\t\t\t\treturn new THREE.Skeleton( bones, boneInverses );\n\n\t\t\t}\n\n\t\t\tfunction buildBoneHierarchy( root, joints, boneData ) {\n\n\t\t\t\t// setup bone data from visual scene\n\n\t\t\t\troot.traverse( function ( object ) {\n\n\t\t\t\t\tif ( object.isBone === true ) {\n\n\t\t\t\t\t\tvar boneInverse;\n\n\t\t\t\t\t\t// retrieve the boneInverse from the controller data\n\n\t\t\t\t\t\tfor ( var i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\t\t\t\tvar joint = joints[ i ];\n\n\t\t\t\t\t\t\tif ( joint.name === object.name ) {\n\n\t\t\t\t\t\t\t\tboneInverse = joint.boneInverse;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( boneInverse === undefined ) {\n\n\t\t\t\t\t\t\t// Unfortunately, there can be joints in the visual scene that are not part of the\n\t\t\t\t\t\t\t// corresponding controller. In this case, we have to create a dummy boneInverse matrix\n\t\t\t\t\t\t\t// for the respective bone. This bone won't affect any vertices, because there are no skin indices\n\t\t\t\t\t\t\t// and weights defined for it. But we still have to add the bone to the sorted bone list in order to\n\t\t\t\t\t\t\t// ensure a correct animation of the model.\n\n\t\t\t\t\t\t\tboneInverse = new THREE.Matrix4();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tboneData.push( { bone: object, boneInverse: boneInverse, processed: false } );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfunction buildNode( data ) {\n\n\t\t\t\tvar objects = [];\n\n\t\t\t\tvar matrix = data.matrix;\n\t\t\t\tvar nodes = data.nodes;\n\t\t\t\tvar type = data.type;\n\t\t\t\tvar instanceCameras = data.instanceCameras;\n\t\t\t\tvar instanceControllers = data.instanceControllers;\n\t\t\t\tvar instanceLights = data.instanceLights;\n\t\t\t\tvar instanceGeometries = data.instanceGeometries;\n\t\t\t\tvar instanceNodes = data.instanceNodes;\n\n\t\t\t\t// nodes\n\n\t\t\t\tfor ( var i = 0, l = nodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tobjects.push( getNode( nodes[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\t// instance cameras\n\n\t\t\t\tfor ( var i = 0, l = instanceCameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar instanceCamera = getCamera( instanceCameras[ i ] );\n\n\t\t\t\t\tif ( instanceCamera !== null ) {\n\n\t\t\t\t\t\tobjects.push( instanceCamera.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// instance controllers\n\n\t\t\t\tfor ( var i = 0, l = instanceControllers.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar instance = instanceControllers[ i ];\n\t\t\t\t\tvar controller = getController( instance.id );\n\t\t\t\t\tvar geometries = getGeometry( controller.id );\n\t\t\t\t\tvar newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\t\tvar skeletons = instance.skeletons;\n\t\t\t\t\tvar joints = controller.skin.joints;\n\n\t\t\t\t\tvar skeleton = buildSkeleton( skeletons, joints );\n\n\t\t\t\t\tfor ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar object = newObjects[ j ];\n\n\t\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\t\tobject.bind( skeleton, controller.skin.bindMatrix );\n\t\t\t\t\t\t\tobject.normalizeSkinWeights();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// instance lights\n\n\t\t\t\tfor ( var i = 0, l = instanceLights.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar instanceLight = getLight( instanceLights[ i ] );\n\n\t\t\t\t\tif ( instanceLight !== null ) {\n\n\t\t\t\t\t\tobjects.push( instanceLight.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// instance geometries\n\n\t\t\t\tfor ( var i = 0, l = instanceGeometries.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar instance = instanceGeometries[ i ];\n\n\t\t\t\t\t// a single geometry instance in collada can lead to multiple object3Ds.\n\t\t\t\t\t// this is the case when primitives are combined like triangles and lines\n\n\t\t\t\t\tvar geometries = getGeometry( instance.id );\n\t\t\t\t\tvar newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\t\tfor ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tobjects.push( newObjects[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// instance nodes\n\n\t\t\t\tfor ( var i = 0, l = instanceNodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tobjects.push( getNode( instanceNodes[ i ] ).clone() );\n\n\t\t\t\t}\n\n\t\t\t\tvar object;\n\n\t\t\t\tif ( nodes.length === 0 && objects.length === 1 ) {\n\n\t\t\t\t\tobject = objects[ 0 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = ( type === 'JOINT' ) ? new THREE.Bone() : new THREE.Group();\n\n\t\t\t\t\tfor ( var i = 0; i < objects.length; i ++ ) {\n\n\t\t\t\t\t\tobject.add( objects[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( object.name === '' ) {\n\n\t\t\t\t\tobject.name = ( type === 'JOINT' ) ? data.sid : data.name;\n\n\t\t\t\t}\n\n\t\t\t\tobject.matrix.copy( matrix );\n\t\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t\tvar fallbackMaterial = new THREE.MeshBasicMaterial( { color: 0xff00ff } );\n\n\t\t\tfunction resolveMaterialBinding( keys, instanceMaterials ) {\n\n\t\t\t\tvar materials = [];\n\n\t\t\t\tfor ( var i = 0, l = keys.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar id = instanceMaterials[ keys[ i ] ];\n\n\t\t\t\t\tif ( id === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Material with key %s not found. Apply fallback material.', keys[ i ] );\n\t\t\t\t\t\tmaterials.push( fallbackMaterial );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials.push( getMaterial( id ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn materials;\n\n\t\t\t}\n\n\t\t\tfunction buildObjects( geometries, instanceMaterials ) {\n\n\t\t\t\tvar objects = [];\n\n\t\t\t\tfor ( var type in geometries ) {\n\n\t\t\t\t\tvar geometry = geometries[ type ];\n\n\t\t\t\t\tvar materials = resolveMaterialBinding( geometry.materialKeys, instanceMaterials );\n\n\t\t\t\t\t// handle case if no materials are defined\n\n\t\t\t\t\tif ( materials.length === 0 ) {\n\n\t\t\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\n\n\t\t\t\t\t\t\tmaterials.push( new THREE.LineBasicMaterial() );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterials.push( new THREE.MeshPhongMaterial() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// regard skinning\n\n\t\t\t\t\tvar skinning = ( geometry.data.attributes.skinIndex !== undefined );\n\n\t\t\t\t\tif ( skinning ) {\n\n\t\t\t\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tmaterials[ i ].skinning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// choose between a single or multi materials (material array)\n\n\t\t\t\t\tvar material = ( materials.length === 1 ) ? materials[ 0 ] : materials;\n\n\t\t\t\t\t// now create a specific 3D object\n\n\t\t\t\t\tvar object;\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'lines':\n\t\t\t\t\t\t\tobject = new THREE.LineSegments( geometry.data, material );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\t\tobject = new THREE.Line( geometry.data, material );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\tcase 'polylist':\n\t\t\t\t\t\t\tif ( skinning ) {\n\n\t\t\t\t\t\t\t\tobject = new THREE.SkinnedMesh( geometry.data, material );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tobject = new THREE.Mesh( geometry.data, material );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t}\n\n\t\t\t\treturn objects;\n\n\t\t\t}\n\n\t\t\tfunction hasNode( id ) {\n\n\t\t\t\treturn library.nodes[ id ] !== undefined;\n\n\t\t\t}\n\n\t\t\tfunction getNode( id ) {\n\n\t\t\t\treturn getBuild( library.nodes[ id ], buildNode );\n\n\t\t\t}\n\n\t\t\t// visual scenes\n\n\t\t\tfunction parseVisualScene( xml ) {\n\n\t\t\t\tvar data = {\n\t\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\t\tchildren: []\n\t\t\t\t};\n\n\t\t\t\tprepareNodes( xml );\n\n\t\t\t\tvar elements = getElementsByTagName( xml, 'node' );\n\n\t\t\t\tfor ( var i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\t\tdata.children.push( parseNode( elements[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tlibrary.visualScenes[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t\t}\n\n\t\t\tfunction buildVisualScene( data ) {\n\n\t\t\t\tvar group = new THREE.Group();\n\t\t\t\tgroup.name = data.name;\n\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar child = children[ i ];\n\n\t\t\t\t\tgroup.add( getNode( child.id ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t}\n\n\t\t\tfunction hasVisualScene( id ) {\n\n\t\t\t\treturn library.visualScenes[ id ] !== undefined;\n\n\t\t\t}\n\n\t\t\tfunction getVisualScene( id ) {\n\n\t\t\t\treturn getBuild( library.visualScenes[ id ], buildVisualScene );\n\n\t\t\t}\n\n\t\t\t// scenes\n\n\t\t\tfunction parseScene( xml ) {\n\n\t\t\t\tvar instance = getElementsByTagName( xml, 'instance_visual_scene' )[ 0 ];\n\t\t\t\treturn getVisualScene( parseId( instance.getAttribute( 'url' ) ) );\n\n\t\t\t}\n\n\t\t\tfunction setupAnimations() {\n\n\t\t\t\tvar clips = library.clips;\n\n\t\t\t\tif ( isEmpty( clips ) === true ) {\n\n\t\t\t\t\tif ( isEmpty( library.animations ) === false ) {\n\n\t\t\t\t\t\t// if there are animations but no clips, we create a default clip for playback\n\n\t\t\t\t\t\tvar tracks = [];\n\n\t\t\t\t\t\tfor ( var id in library.animations ) {\n\n\t\t\t\t\t\t\tvar animationTracks = getAnimation( id );\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = animationTracks.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\ttracks.push( animationTracks[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tanimations.push( new THREE.AnimationClip( 'default', - 1, tracks ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var id in clips ) {\n\n\t\t\t\t\t\tanimations.push( getAnimationClip( id ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// convert the parser error element into text with each child elements text\n\t\t\t// separated by new lines.\n\n\t\t\tfunction parserErrorToText( parserError ) {\n\n\t\t\t\tvar result = '';\n\t\t\t\tvar stack = [ parserError ];\n\n\t\t\t\twhile ( stack.length ) {\n\n\t\t\t\t\tvar node = stack.shift();\n\n\t\t\t\t\tif ( node.nodeType === Node.TEXT_NODE ) {\n\n\t\t\t\t\t\tresult += node.textContent;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tstack.push.apply( stack, node.childNodes );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result.trim();\n\n\t\t\t}\n\n\t\t\tif ( text.length === 0 ) {\n\n\t\t\t\treturn { scene: new THREE.Scene() };\n\n\t\t\t}\n\n\t\t\tvar xml = new DOMParser().parseFromString( text, 'application/xml' );\n\n\t\t\tvar collada = getElementsByTagName( xml, 'COLLADA' )[ 0 ];\n\n\t\t\tvar parserError = xml.getElementsByTagName( 'parsererror' )[ 0 ];\n\t\t\tif ( parserError !== undefined ) {\n\n\t\t\t\t// Chrome will return parser error with a div in it\n\n\t\t\t\tvar errorElement = getElementsByTagName( parserError, 'div' )[ 0 ];\n\t\t\t\tvar errorText;\n\n\t\t\t\tif ( errorElement ) {\n\n\t\t\t\t\terrorText = errorElement.textContent;\n\n\t\t\t\t} else {\n\n\t\t\t\t\terrorText = parserErrorToText( parserError );\n\n\t\t\t\t}\n\n\t\t\t\tconsole.error( 'THREE.ColladaLoader: Failed to parse collada file.\\n', errorText );\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// metadata\n\n\t\t\tvar version = collada.getAttribute( 'version' );\n\t\t\tconsole.log( 'THREE.ColladaLoader: File version', version );\n\n\t\t\tvar asset = parseAsset( getElementsByTagName( collada, 'asset' )[ 0 ] );\n\t\t\tvar textureLoader = new THREE.TextureLoader( this.manager );\n\t\t\ttextureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar tgaLoader;\n\n\t\t\tif ( THREE.TGALoader ) {\n\n\t\t\t\ttgaLoader = new THREE.TGALoader( this.manager );\n\t\t\t\ttgaLoader.setPath( this.resourcePath || path );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar animations = [];\n\t\t\tvar kinematics = {};\n\t\t\tvar count = 0;\n\n\t\t\t//\n\n\t\t\tvar library = {\n\t\t\t\tanimations: {},\n\t\t\t\tclips: {},\n\t\t\t\tcontrollers: {},\n\t\t\t\timages: {},\n\t\t\t\teffects: {},\n\t\t\t\tmaterials: {},\n\t\t\t\tcameras: {},\n\t\t\t\tlights: {},\n\t\t\t\tgeometries: {},\n\t\t\t\tnodes: {},\n\t\t\t\tvisualScenes: {},\n\t\t\t\tkinematicsModels: {},\n\t\t\t\tphysicsModels: {},\n\t\t\t\tkinematicsScenes: {}\n\t\t\t};\n\n\t\t\tparseLibrary( collada, 'library_animations', 'animation', parseAnimation );\n\t\t\tparseLibrary( collada, 'library_animation_clips', 'animation_clip', parseAnimationClip );\n\t\t\tparseLibrary( collada, 'library_controllers', 'controller', parseController );\n\t\t\tparseLibrary( collada, 'library_images', 'image', parseImage );\n\t\t\tparseLibrary( collada, 'library_effects', 'effect', parseEffect );\n\t\t\tparseLibrary( collada, 'library_materials', 'material', parseMaterial );\n\t\t\tparseLibrary( collada, 'library_cameras', 'camera', parseCamera );\n\t\t\tparseLibrary( collada, 'library_lights', 'light', parseLight );\n\t\t\tparseLibrary( collada, 'library_geometries', 'geometry', parseGeometry );\n\t\t\tparseLibrary( collada, 'library_nodes', 'node', parseNode );\n\t\t\tparseLibrary( collada, 'library_visual_scenes', 'visual_scene', parseVisualScene );\n\t\t\tparseLibrary( collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel );\n\t\t\tparseLibrary( collada, 'library_physics_models', 'physics_model', parsePhysicsModel );\n\t\t\tparseLibrary( collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene );\n\n\t\t\tbuildLibrary( library.animations, buildAnimation );\n\t\t\tbuildLibrary( library.clips, buildAnimationClip );\n\t\t\tbuildLibrary( library.controllers, buildController );\n\t\t\tbuildLibrary( library.images, buildImage );\n\t\t\tbuildLibrary( library.effects, buildEffect );\n\t\t\tbuildLibrary( library.materials, buildMaterial );\n\t\t\tbuildLibrary( library.cameras, buildCamera );\n\t\t\tbuildLibrary( library.lights, buildLight );\n\t\t\tbuildLibrary( library.geometries, buildGeometry );\n\t\t\tbuildLibrary( library.visualScenes, buildVisualScene );\n\n\t\t\tsetupAnimations();\n\t\t\tsetupKinematics();\n\n\t\t\tvar scene = parseScene( getElementsByTagName( collada, 'scene' )[ 0 ] );\n\n\t\t\tif ( asset.upAxis === 'Z_UP' ) {\n\n\t\t\t\tscene.quaternion.setFromEuler( new THREE.Euler( - Math.PI / 2, 0, 0 ) );\n\n\t\t\t}\n\n\t\t\tscene.scale.multiplyScalar( asset.unit );\n\n\t\t\treturn {\n\t\t\t\tanimations: animations,\n\t\t\t\tkinematics: kinematics,\n\t\t\t\tlibrary: library,\n\t\t\t\tscene: scene\n\t\t\t};\n\n\t\t}\n\n\t} );\n\t\n\treturn THREE.ColladaLoader;\n});\n"]}