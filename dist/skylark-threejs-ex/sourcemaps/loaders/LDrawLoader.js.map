{"version":3,"sources":["loaders/LDrawLoader.js"],"names":["define","THREE","LDrawLoader","tempVec0","Vector3","tempVec1","isPrimitiveType","type","test","LineParser","line","lineNumber","this","lineLength","length","currentCharIndex","currentChar","sortByMaterial","a","b","colourCode","createObject","elements","elementSize","isConditionalSegments","sort","positions","normals","materials","bufferGeometry","BufferGeometry","prevMaterial","index0","numGroupVerts","iElem","nElem","elem","v0","v1","push","x","y","z","v2","n0","faceNormal","n1","n2","material","addGroup","Infinity","setAttribute","Float32BufferAttribute","object3d","LineSegments","Mesh","isConditionalLine","controlArray0","Float32Array","controlArray1","directionArray","i","l","os","c0","c1","index","BufferAttribute","manager","Loader","call","parseScopesStack","subobjectCache","fileMap","setMaterials","parseColourMetaDirective","separateObjects","smoothNormals","prototype","constructor","seekNonSpace","charAt","getToken","pos0","pos1","substring","getRemainingString","isAtTheEnd","setToEnd","getLineNumberString","FINISH_TYPE_DEFAULT","FINISH_TYPE_CHROME","FINISH_TYPE_PEARLESCENT","FINISH_TYPE_RUBBER","FINISH_TYPE_MATTE_METALLIC","FINISH_TYPE_METAL","FILE_LOCATION_AS_IS","FILE_LOCATION_TRY_PARTS","FILE_LOCATION_TRY_P","FILE_LOCATION_TRY_MODELS","FILE_LOCATION_TRY_RELATIVE","FILE_LOCATION_TRY_ABSOLUTE","FILE_LOCATION_NOT_FOUND","Object","assign","create","load","url","onLoad","onProgress","onError","scope","fileLoader","FileLoader","setPath","path","text","processObject","parse","newParseScopeLevel","getCurrentParseScope","isFromParse","setFileMap","matLib","n","userData","code","topParseScope","newParseScope","lib","subobjects","numSubobjects","subobjectIndex","inverted","category","keywords","currentFileName","mainColourCode","mainEdgeColourCode","currentMatrix","Matrix4","matrix","triangles","lineSegments","conditionalSegments","startingConstructionStep","removeScopeLevel","pop","addMaterial","getMaterial","startsWith","colour","getParentParseScope","lineParser","edgeColour","alpha","isTransparent","luminance","finishType","canHaveEnvMap","edgeMaterial","name","token","toUpperCase","parseInt","isNaN","Math","max","min","MeshStandardMaterial","color","roughness","envMapIntensity","metalness","specular","Color","hsl","getHSL","h","s","setHSL","MeshPhongMaterial","shininess","reflectivity","transparent","premultipliedAlpha","opacity","depthWrite","polygonOffset","polygonOffsetFactor","emissive","set","multiplyScalar","LineBasicMaterial","conditionalEdgeMaterial","ShaderMaterial","vertexShader","fragmentShader","uniforms","diffuse","value","objectParse","parentParseScope","currentParseScope","indexOf","replace","lines","split","numLines","lineIndex","parsingEmbeddedFiles","currentEmbeddedFileName","currentEmbeddedText","bfcCertified","bfcCCW","bfcInverted","bfcCull","parseColourCode","forEdge","parseVector","lp","v","parseFloat","applyMatrix4","toLowerCase","lineType","meta","groupObject","Group","determinant","console","warn","newKeywords","forEach","keyword","trim","posX","posY","posZ","m0","m1","m2","m3","m4","m5","m6","m7","m8","fileName","originalFileName","locationState","triedLowerCase","segment","ccw","doubleSided","subVectors","crossVectors","normalize","v3","computeConstructionSteps","model","stepNumber","traverse","c","isGroup","constructionStep","numConstructionSteps","onProcessed","subobject","parseScope","multiplyMatrices","copy","undefined","finishedCount","onSubobjectFinish","hashVertex","hashEdge","hardEdges","Set","halfEdgeList","fullHalfEdgeList","ls","add","tri","i2","l2","next","hash","has","halfEdges","keys","queue","clone","reverseHash","otherTri","abs","dot","i3","otherIndex","otherNext","norm","isRoot","objGroup","decompose","position","quaternion","scale","parentLineSegments","parentConditionalSegments","parentTriangles","finalizeObject","Promise","resolve","then","loadSubobject","cached","subobjectGroup","onSubobjectLoaded","subobjectURL","newLocationState","lastIndexOf","err","onSubobjectError"],"mappings":"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","file":"../../loaders/LDrawLoader.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author yomboprime / https://github.com/yomboprime/\n\t * @author gkjohnson / https://github.com/gkjohnson/\n\t *\n\t *\n\t */\n\n\tTHREE.LDrawLoader = ( function () {\n\n\t\tvar conditionalLineVertShader = /* glsl */`\n\t\tattribute vec3 control0;\n\t\tattribute vec3 control1;\n\t\tattribute vec3 direction;\n\t\tvarying float discardFlag;\n\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\t\tvoid main() {\n\t\t\t#include <color_vertex>\n\n\t\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t\t\tgl_Position = projectionMatrix * mvPosition;\n\n\t\t\t// Transform the line segment ends and control points into camera clip space\n\t\t\tvec4 c0 = projectionMatrix * modelViewMatrix * vec4( control0, 1.0 );\n\t\t\tvec4 c1 = projectionMatrix * modelViewMatrix * vec4( control1, 1.0 );\n\t\t\tvec4 p0 = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\tvec4 p1 = projectionMatrix * modelViewMatrix * vec4( position + direction, 1.0 );\n\n\t\t\tc0.xy /= c0.w;\n\t\t\tc1.xy /= c1.w;\n\t\t\tp0.xy /= p0.w;\n\t\t\tp1.xy /= p1.w;\n\n\t\t\t// Get the direction of the segment and an orthogonal vector\n\t\t\tvec2 dir = p1.xy - p0.xy;\n\t\t\tvec2 norm = vec2( -dir.y, dir.x );\n\n\t\t\t// Get control point directions from the line\n\t\t\tvec2 c0dir = c0.xy - p1.xy;\n\t\t\tvec2 c1dir = c1.xy - p1.xy;\n\n\t\t\t// If the vectors to the controls points are pointed in different directions away\n\t\t\t// from the line segment then the line should not be drawn.\n\t\t\tfloat d0 = dot( normalize( norm ), normalize( c0dir ) );\n\t\t\tfloat d1 = dot( normalize( norm ), normalize( c1dir ) );\n\t\t\tdiscardFlag = float( sign( d0 ) != sign( d1 ) );\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\t\t}\n\t\t`;\n\n\t\tvar conditionalLineFragShader = /* glsl */`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tvarying float discardFlag;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\t\tvoid main() {\n\n\t\t\tif ( discardFlag > 0.5 ) discard;\n\n\t\t\t#include <clipping_planes_fragment>\n\t\t\tvec3 outgoingLight = vec3( 0.0 );\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\t\t\toutgoingLight = diffuseColor.rgb; // simple shader\n\t\t\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\t\t}\n\t\t`;\n\n\n\n\t\tvar tempVec0 = new THREE.Vector3();\n\t\tvar tempVec1 = new THREE.Vector3();\n\t\tfunction smoothNormals( triangles, lineSegments ) {\n\n\t\t\tfunction hashVertex( v ) {\n\n\t\t\t\t// NOTE: 1e2 is pretty coarse but was chosen because it allows edges\n\t\t\t\t// to be smoothed as expected (see minifig arms). The errors between edges\n\t\t\t\t// could be due to matrix multiplication.\n\t\t\t\tvar x = ~ ~ ( v.x * 1e2 );\n\t\t\t\tvar y = ~ ~ ( v.y * 1e2 );\n\t\t\t\tvar z = ~ ~ ( v.z * 1e2 );\n\t\t\t\treturn `${ x },${ y },${ z }`;\n\n\t\t\t}\n\n\t\t\tfunction hashEdge( v0, v1 ) {\n\n\t\t\t\treturn `${ hashVertex( v0 ) }_${ hashVertex( v1 ) }`;\n\n\t\t\t}\n\n\t\t\tvar hardEdges = new Set();\n\t\t\tvar halfEdgeList = {};\n\t\t\tvar fullHalfEdgeList = {};\n\t\t\tvar normals = [];\n\n\t\t\t// Save the list of hard edges by hash\n\t\t\tfor ( var i = 0, l = lineSegments.length; i < l; i ++ ) {\n\n\t\t\t\tvar ls = lineSegments[ i ];\n\t\t\t\tvar v0 = ls.v0;\n\t\t\t\tvar v1 = ls.v1;\n\t\t\t\thardEdges.add( hashEdge( v0, v1 ) );\n\t\t\t\thardEdges.add( hashEdge( v1, v0 ) );\n\n\t\t\t}\n\n\t\t\t// track the half edges associated with each triangle\n\t\t\tfor ( var i = 0, l = triangles.length; i < l; i ++ ) {\n\n\t\t\t\tvar tri = triangles[ i ];\n\t\t\t\tfor ( var i2 = 0, l2 = 3; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\tvar index = i2;\n\t\t\t\t\tvar next = ( i2 + 1 ) % 3;\n\t\t\t\t\tvar v0 = tri[ `v${ index }` ];\n\t\t\t\t\tvar v1 = tri[ `v${ next }` ];\n\t\t\t\t\tvar hash = hashEdge( v0, v1 );\n\n\t\t\t\t\t// don't add the triangle if the edge is supposed to be hard\n\t\t\t\t\tif ( hardEdges.has( hash ) ) continue;\n\t\t\t\t\thalfEdgeList[ hash ] = tri;\n\t\t\t\t\tfullHalfEdgeList[ hash ] = tri;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// NOTE: Some of the normals wind up being skewed in an unexpected way because\n\t\t\t// quads provide more \"influence\" to some vertex normals than a triangle due to\n\t\t\t// the fact that a quad is made up of two triangles and all triangles are weighted\n\t\t\t// equally. To fix this quads could be tracked separately so their vertex normals\n\t\t\t// are weighted appropriately or we could try only adding a normal direction\n\t\t\t// once per normal.\n\n\t\t\t// Iterate until we've tried to connect all triangles to share normals\n\t\t\twhile ( true ) {\n\n\t\t\t\t// Stop if there are no more triangles left\n\t\t\t\tvar halfEdges = Object.keys( halfEdgeList );\n\t\t\t\tif ( halfEdges.length === 0 ) break;\n\n\t\t\t\t// Exhaustively find all connected triangles\n\t\t\t\tvar i = 0;\n\t\t\t\tvar queue = [ fullHalfEdgeList[ halfEdges[ 0 ] ] ];\n\t\t\t\twhile ( i < queue.length ) {\n\n\t\t\t\t\t// initialize all vertex normals in this triangle\n\t\t\t\t\tvar tri = queue[ i ];\n\t\t\t\t\ti ++;\n\n\t\t\t\t\tvar faceNormal = tri.faceNormal;\n\t\t\t\t\tif ( tri.n0 === null ) {\n\n\t\t\t\t\t\ttri.n0 = faceNormal.clone();\n\t\t\t\t\t\tnormals.push( tri.n0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( tri.n1 === null ) {\n\n\t\t\t\t\t\ttri.n1 = faceNormal.clone();\n\t\t\t\t\t\tnormals.push( tri.n1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( tri.n2 === null ) {\n\n\t\t\t\t\t\ttri.n2 = faceNormal.clone();\n\t\t\t\t\t\tnormals.push( tri.n2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if any edge is connected to another triangle edge\n\t\t\t\t\tfor ( var i2 = 0, l2 = 3; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\t\tvar index = i2;\n\t\t\t\t\t\tvar next = ( i2 + 1 ) % 3;\n\t\t\t\t\t\tvar v0 = tri[ `v${ index }` ];\n\t\t\t\t\t\tvar v1 = tri[ `v${ next }` ];\n\n\t\t\t\t\t\t// delete this triangle from the list so it won't be found again\n\t\t\t\t\t\tvar hash = hashEdge( v0, v1 );\n\t\t\t\t\t\tdelete halfEdgeList[ hash ];\n\n\t\t\t\t\t\tvar reverseHash = hashEdge( v1, v0 );\n\t\t\t\t\t\tvar otherTri = fullHalfEdgeList[ reverseHash ];\n\t\t\t\t\t\tif ( otherTri ) {\n\n\t\t\t\t\t\t\t// NOTE: If the angle between triangles is > 67.5 degrees then assume it's\n\t\t\t\t\t\t\t// hard edge. There are some cases where the line segments do not line up exactly\n\t\t\t\t\t\t\t// with or span multiple triangle edges (see Lunar Vehicle wheels).\n\t\t\t\t\t\t\tif ( Math.abs( otherTri.faceNormal.dot( tri.faceNormal ) ) < 0.25 ) {\n\n\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// if this triangle has already been traversed then it won't be in\n\t\t\t\t\t\t\t// the halfEdgeList. If it has not then add it to the queue and delete\n\t\t\t\t\t\t\t// it so it won't be found again.\n\t\t\t\t\t\t\tif ( reverseHash in halfEdgeList ) {\n\n\t\t\t\t\t\t\t\tqueue.push( otherTri );\n\t\t\t\t\t\t\t\tdelete halfEdgeList[ reverseHash ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Find the matching edge in this triangle and copy the normal vector over\n\t\t\t\t\t\t\tfor ( var i3 = 0, l3 = 3; i3 < l3; i3 ++ ) {\n\n\t\t\t\t\t\t\t\tvar otherIndex = i3;\n\t\t\t\t\t\t\t\tvar otherNext = ( i3 + 1 ) % 3;\n\t\t\t\t\t\t\t\tvar otherV0 = otherTri[ `v${ otherIndex }` ];\n\t\t\t\t\t\t\t\tvar otherV1 = otherTri[ `v${ otherNext }` ];\n\n\t\t\t\t\t\t\t\tvar otherHash = hashEdge( otherV0, otherV1 );\n\t\t\t\t\t\t\t\tif ( otherHash === reverseHash ) {\n\n\t\t\t\t\t\t\t\t\tif ( otherTri[ `n${ otherIndex }` ] === null ) {\n\n\t\t\t\t\t\t\t\t\t\tvar norm = tri[ `n${ next }` ];\n\t\t\t\t\t\t\t\t\t\totherTri[ `n${ otherIndex }` ] = norm;\n\t\t\t\t\t\t\t\t\t\tnorm.add( otherTri.faceNormal );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( otherTri[ `n${ otherNext }` ] === null ) {\n\n\t\t\t\t\t\t\t\t\t\tvar norm = tri[ `n${ index }` ];\n\t\t\t\t\t\t\t\t\t\totherTri[ `n${ otherNext }` ] = norm;\n\t\t\t\t\t\t\t\t\t\tnorm.add( otherTri.faceNormal );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// The normals of each face have been added up so now we average them by normalizing the vector.\n\t\t\tfor ( var i = 0, l = normals.length; i < l; i ++ ) {\n\n\t\t\t\tnormals[ i ].normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isPrimitiveType( type ) {\n\n\t\t\treturn /primitive/i.test( type ) || type === 'Subpart';\n\n\t\t}\n\n\t\tfunction LineParser( line, lineNumber ) {\n\n\t\t\tthis.line = line;\n\t\t\tthis.lineLength = line.length;\n\t\t\tthis.currentCharIndex = 0;\n\t\t\tthis.currentChar = ' ';\n\t\t\tthis.lineNumber = lineNumber;\n\n\t\t}\n\n\t\tLineParser.prototype = {\n\n\t\t\tconstructor: LineParser,\n\n\t\t\tseekNonSpace: function () {\n\n\t\t\t\twhile ( this.currentCharIndex < this.lineLength ) {\n\n\t\t\t\t\tthis.currentChar = this.line.charAt( this.currentCharIndex );\n\n\t\t\t\t\tif ( this.currentChar !== ' ' && this.currentChar !== '\\t' ) {\n\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.currentCharIndex ++;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tgetToken: function () {\n\n\t\t\t\tvar pos0 = this.currentCharIndex ++;\n\n\t\t\t\t// Seek space\n\t\t\t\twhile ( this.currentCharIndex < this.lineLength ) {\n\n\t\t\t\t\tthis.currentChar = this.line.charAt( this.currentCharIndex );\n\n\t\t\t\t\tif ( this.currentChar === ' ' || this.currentChar === '\\t' ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.currentCharIndex ++;\n\n\t\t\t\t}\n\n\t\t\t\tvar pos1 = this.currentCharIndex;\n\n\t\t\t\tthis.seekNonSpace();\n\n\t\t\t\treturn this.line.substring( pos0, pos1 );\n\n\t\t\t},\n\n\t\t\tgetRemainingString: function () {\n\n\t\t\t\treturn this.line.substring( this.currentCharIndex, this.lineLength );\n\n\t\t\t},\n\n\t\t\tisAtTheEnd: function () {\n\n\t\t\t\treturn this.currentCharIndex >= this.lineLength;\n\n\t\t\t},\n\n\t\t\tsetToEnd: function () {\n\n\t\t\t\tthis.currentCharIndex = this.lineLength;\n\n\t\t\t},\n\n\t\t\tgetLineNumberString: function () {\n\n\t\t\t\treturn this.lineNumber >= 0 ? \" at line \" + this.lineNumber : \"\";\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction sortByMaterial( a, b ) {\n\n\t\t\tif ( a.colourCode === b.colourCode ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( a.colourCode < b.colourCode ) {\n\n\t\t\t\treturn - 1;\n\n\t\t\t}\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t\tfunction createObject( elements, elementSize, isConditionalSegments ) {\n\n\t\t\t// Creates a THREE.LineSegments (elementSize = 2) or a THREE.Mesh (elementSize = 3 )\n\t\t\t// With per face / segment material, implemented with mesh groups and materials array\n\n\t\t\t// Sort the triangles or line segments by colour code to make later the mesh groups\n\t\t\telements.sort( sortByMaterial );\n\n\t\t\tvar positions = [];\n\t\t\tvar normals = [];\n\t\t\tvar materials = [];\n\n\t\t\tvar bufferGeometry = new THREE.BufferGeometry();\n\t\t\tvar prevMaterial = null;\n\t\t\tvar index0 = 0;\n\t\t\tvar numGroupVerts = 0;\n\n\t\t\tfor ( var iElem = 0, nElem = elements.length; iElem < nElem; iElem ++ ) {\n\n\t\t\t\tvar elem = elements[ iElem ];\n\t\t\t\tvar v0 = elem.v0;\n\t\t\t\tvar v1 = elem.v1;\n\t\t\t\t// Note that LDraw coordinate system is rotated 180 deg. in the X axis w.r.t. Three.js's one\n\t\t\t\tpositions.push( v0.x, v0.y, v0.z, v1.x, v1.y, v1.z );\n\t\t\t\tif ( elementSize === 3 ) {\n\n\t\t\t\t\tpositions.push( elem.v2.x, elem.v2.y, elem.v2.z );\n\n\t\t\t\t\tvar n0 = elem.n0 || elem.faceNormal;\n\t\t\t\t\tvar n1 = elem.n1 || elem.faceNormal;\n\t\t\t\t\tvar n2 = elem.n2 || elem.faceNormal;\n\t\t\t\t\tnormals.push( n0.x, n0.y, n0.z );\n\t\t\t\t\tnormals.push( n1.x, n1.y, n1.z );\n\t\t\t\t\tnormals.push( n2.x, n2.y, n2.z );\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevMaterial !== elem.material ) {\n\n\t\t\t\t\tif ( prevMaterial !== null ) {\n\n\t\t\t\t\t\tbufferGeometry.addGroup( index0, numGroupVerts, materials.length - 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials.push( elem.material );\n\n\t\t\t\t\tprevMaterial = elem.material;\n\t\t\t\t\tindex0 = iElem * elementSize;\n\t\t\t\t\tnumGroupVerts = elementSize;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnumGroupVerts += elementSize;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( numGroupVerts > 0 ) {\n\n\t\t\t\tbufferGeometry.addGroup( index0, Infinity, materials.length - 1 );\n\n\t\t\t}\n\n\t\t\tbufferGeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\n\t\t\tif ( elementSize === 3 ) {\n\n\t\t\t\tbufferGeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\n\n\t\t\t}\n\n\t\t\tvar object3d = null;\n\n\t\t\tif ( elementSize === 2 ) {\n\n\t\t\t\tobject3d = new THREE.LineSegments( bufferGeometry, materials );\n\n\t\t\t} else if ( elementSize === 3 ) {\n\n\t\t\t\tobject3d = new THREE.Mesh( bufferGeometry, materials );\n\n\t\t\t}\n\n\t\t\tif ( isConditionalSegments ) {\n\n\t\t\t\tobject3d.isConditionalLine = true;\n\n\t\t\t\tvar controlArray0 = new Float32Array( elements.length * 3 * 2 );\n\t\t\t\tvar controlArray1 = new Float32Array( elements.length * 3 * 2 );\n\t\t\t\tvar directionArray = new Float32Array( elements.length * 3 * 2 );\n\t\t\t\tfor ( var i = 0, l = elements.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar os = elements[ i ];\n\t\t\t\t\tvar c0 = os.c0;\n\t\t\t\t\tvar c1 = os.c1;\n\t\t\t\t\tvar v0 = os.v0;\n\t\t\t\t\tvar v1 = os.v1;\n\t\t\t\t\tvar index = i * 3 * 2;\n\t\t\t\t\tcontrolArray0[ index + 0 ] = c0.x;\n\t\t\t\t\tcontrolArray0[ index + 1 ] = c0.y;\n\t\t\t\t\tcontrolArray0[ index + 2 ] = c0.z;\n\t\t\t\t\tcontrolArray0[ index + 3 ] = c0.x;\n\t\t\t\t\tcontrolArray0[ index + 4 ] = c0.y;\n\t\t\t\t\tcontrolArray0[ index + 5 ] = c0.z;\n\n\t\t\t\t\tcontrolArray1[ index + 0 ] = c1.x;\n\t\t\t\t\tcontrolArray1[ index + 1 ] = c1.y;\n\t\t\t\t\tcontrolArray1[ index + 2 ] = c1.z;\n\t\t\t\t\tcontrolArray1[ index + 3 ] = c1.x;\n\t\t\t\t\tcontrolArray1[ index + 4 ] = c1.y;\n\t\t\t\t\tcontrolArray1[ index + 5 ] = c1.z;\n\n\t\t\t\t\tdirectionArray[ index + 0 ] = v1.x - v0.x;\n\t\t\t\t\tdirectionArray[ index + 1 ] = v1.y - v0.y;\n\t\t\t\t\tdirectionArray[ index + 2 ] = v1.z - v0.z;\n\t\t\t\t\tdirectionArray[ index + 3 ] = v1.x - v0.x;\n\t\t\t\t\tdirectionArray[ index + 4 ] = v1.y - v0.y;\n\t\t\t\t\tdirectionArray[ index + 5 ] = v1.z - v0.z;\n\n\t\t\t\t}\n\n\t\t\t\tbufferGeometry.setAttribute( 'control0', new THREE.BufferAttribute( controlArray0, 3, false ) );\n\t\t\t\tbufferGeometry.setAttribute( 'control1', new THREE.BufferAttribute( controlArray1, 3, false ) );\n\t\t\t\tbufferGeometry.setAttribute( 'direction', new THREE.BufferAttribute( directionArray, 3, false ) );\n\n\t\t\t}\n\n\t\t\treturn object3d;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction LDrawLoader( manager ) {\n\n\t\t\tTHREE.Loader.call( this, manager );\n\n\t\t\t// This is a stack of 'parse scopes' with one level per subobject loaded file.\n\t\t\t// Each level contains a material lib and also other runtime variables passed between parent and child subobjects\n\t\t\t// When searching for a material code, the stack is read from top of the stack to bottom\n\t\t\t// Each material library is an object map keyed by colour codes.\n\t\t\tthis.parseScopesStack = null;\n\n\t\t\t// Array of THREE.Material\n\t\t\tthis.materials = [];\n\n\t\t\t// Not using THREE.Cache here because it returns the previous HTML error response instead of calling onError()\n\t\t\t// This also allows to handle the embedded text files (\"0 FILE\" lines)\n\t\t\tthis.subobjectCache = {};\n\n\t\t\t// This object is a map from file names to paths. It agilizes the paths search. If it is not set then files will be searched by trial and error.\n\t\t\tthis.fileMap = null;\n\n\t\t\t// Add default main triangle and line edge materials (used in piecess that can be coloured with a main color)\n\t\t\tthis.setMaterials( [\n\t\t\t\tthis.parseColourMetaDirective( new LineParser( \"Main_Colour CODE 16 VALUE #FF8080 EDGE #333333\" ) ),\n\t\t\t\tthis.parseColourMetaDirective( new LineParser( \"Edge_Colour CODE 24 VALUE #A0A0A0 EDGE #333333\" ) )\n\t\t\t] );\n\n\t\t\t// If this flag is set to true, each subobject will be a THREE.Object.\n\t\t\t// If not (the default), only one object which contains all the merged primitives will be created.\n\t\t\tthis.separateObjects = false;\n\n\t\t\t// If this flag is set to true the vertex normals will be smoothed.\n\t\t\tthis.smoothNormals = true;\n\n\t\t}\n\n\t\t// Special surface finish tag types.\n\t\t// Note: \"MATERIAL\" tag (e.g. GLITTER, SPECKLE) is not implemented\n\t\tLDrawLoader.FINISH_TYPE_DEFAULT = 0;\n\t\tLDrawLoader.FINISH_TYPE_CHROME = 1;\n\t\tLDrawLoader.FINISH_TYPE_PEARLESCENT = 2;\n\t\tLDrawLoader.FINISH_TYPE_RUBBER = 3;\n\t\tLDrawLoader.FINISH_TYPE_MATTE_METALLIC = 4;\n\t\tLDrawLoader.FINISH_TYPE_METAL = 5;\n\n\t\t// State machine to search a subobject path.\n\t\t// The LDraw standard establishes these various possible subfolders.\n\t\tLDrawLoader.FILE_LOCATION_AS_IS = 0;\n\t\tLDrawLoader.FILE_LOCATION_TRY_PARTS = 1;\n\t\tLDrawLoader.FILE_LOCATION_TRY_P = 2;\n\t\tLDrawLoader.FILE_LOCATION_TRY_MODELS = 3;\n\t\tLDrawLoader.FILE_LOCATION_TRY_RELATIVE = 4;\n\t\tLDrawLoader.FILE_LOCATION_TRY_ABSOLUTE = 5;\n\t\tLDrawLoader.FILE_LOCATION_NOT_FOUND = 6;\n\n\t\tLDrawLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\t\t\tconstructor: LDrawLoader,\n\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\t\tif ( ! this.fileMap ) {\n\n\t\t\t\t\tthis.fileMap = {};\n\n\t\t\t\t}\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tvar fileLoader = new THREE.FileLoader( this.manager );\n\t\t\t\tfileLoader.setPath( this.path );\n\t\t\t\tfileLoader.load( url, function ( text ) {\n\n\t\t\t\t\tscope.processObject( text, onLoad, null, url );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t},\n\n\t\t\tparse: function ( text, path, onLoad ) {\n\n\t\t\t\t// Async parse.  This function calls onParse with the parsed THREE.Object3D as parameter\n\n\t\t\t\tthis.processObject( text, onLoad, null, path );\n\n\t\t\t},\n\n\t\t\tsetMaterials: function ( materials ) {\n\n\t\t\t\t// Clears parse scopes stack, adds new scope with material library\n\n\t\t\t\tthis.parseScopesStack = [];\n\n\t\t\t\tthis.newParseScopeLevel( materials );\n\n\t\t\t\tthis.getCurrentParseScope().isFromParse = false;\n\n\t\t\t\tthis.materials = materials;\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\tsetFileMap: function ( fileMap ) {\n\n\t\t\t\tthis.fileMap = fileMap;\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\tnewParseScopeLevel: function ( materials ) {\n\n\t\t\t\t// Adds a new scope level, assign materials to it and returns it\n\n\t\t\t\tvar matLib = {};\n\n\t\t\t\tif ( materials ) {\n\n\t\t\t\t\tfor ( var i = 0, n = materials.length; i < n; i ++ ) {\n\n\t\t\t\t\t\tvar material = materials[ i ];\n\t\t\t\t\t\tmatLib[ material.userData.code ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar topParseScope = this.getCurrentParseScope();\n\t\t\t\tvar newParseScope = {\n\n\t\t\t\t\tlib: matLib,\n\t\t\t\t\turl: null,\n\n\t\t\t\t\t// Subobjects\n\t\t\t\t\tsubobjects: null,\n\t\t\t\t\tnumSubobjects: 0,\n\t\t\t\t\tsubobjectIndex: 0,\n\t\t\t\t\tinverted: false,\n\t\t\t\t\tcategory: null,\n\t\t\t\t\tkeywords: null,\n\n\t\t\t\t\t// Current subobject\n\t\t\t\t\tcurrentFileName: null,\n\t\t\t\t\tmainColourCode: topParseScope ? topParseScope.mainColourCode : '16',\n\t\t\t\t\tmainEdgeColourCode: topParseScope ? topParseScope.mainEdgeColourCode : '24',\n\t\t\t\t\tcurrentMatrix: new THREE.Matrix4(),\n\t\t\t\t\tmatrix: new THREE.Matrix4(),\n\n\t\t\t\t\t// If false, it is a root material scope previous to parse\n\t\t\t\t\tisFromParse: true,\n\n\t\t\t\t\ttriangles: null,\n\t\t\t\t\tlineSegments: null,\n\t\t\t\t\tconditionalSegments: null,\n\n\t\t\t\t\t// If true, this object is the start of a construction step\n\t\t\t\t\tstartingConstructionStep: false\n\t\t\t\t};\n\n\t\t\t\tthis.parseScopesStack.push( newParseScope );\n\n\t\t\t\treturn newParseScope;\n\n\t\t\t},\n\n\t\t\tremoveScopeLevel: function () {\n\n\t\t\t\tthis.parseScopesStack.pop();\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\taddMaterial: function ( material ) {\n\n\t\t\t\t// Adds a material to the material library which is on top of the parse scopes stack. And also to the materials array\n\n\t\t\t\tvar matLib = this.getCurrentParseScope().lib;\n\n\t\t\t\tif ( ! matLib[ material.userData.code ] ) {\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\tmatLib[ material.userData.code ] = material;\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\tgetMaterial: function ( colourCode ) {\n\n\t\t\t\t// Given a colour code search its material in the parse scopes stack\n\n\t\t\t\tif ( colourCode.startsWith( \"0x2\" ) ) {\n\n\t\t\t\t\t// Special 'direct' material value (RGB colour)\n\n\t\t\t\t\tvar colour = colourCode.substring( 3 );\n\n\t\t\t\t\treturn this.parseColourMetaDirective( new LineParser( \"Direct_Color_\" + colour + \" CODE -1 VALUE #\" + colour + \" EDGE #\" + colour + \"\" ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = this.parseScopesStack.length - 1; i >= 0; i -- ) {\n\n\t\t\t\t\tvar material = this.parseScopesStack[ i ].lib[ colourCode ];\n\n\t\t\t\t\tif ( material ) {\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Material was not found\n\t\t\t\treturn null;\n\n\t\t\t},\n\n\t\t\tgetParentParseScope: function () {\n\n\t\t\t\tif ( this.parseScopesStack.length > 1 ) {\n\n\t\t\t\t\treturn this.parseScopesStack[ this.parseScopesStack.length - 2 ];\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t},\n\n\t\t\tgetCurrentParseScope: function () {\n\n\t\t\t\tif ( this.parseScopesStack.length > 0 ) {\n\n\t\t\t\t\treturn this.parseScopesStack[ this.parseScopesStack.length - 1 ];\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t},\n\n\t\t\tparseColourMetaDirective: function ( lineParser ) {\n\n\t\t\t\t// Parses a colour definition and returns a THREE.Material or null if error\n\n\t\t\t\tvar code = null;\n\n\t\t\t\t// Triangle and line colours\n\t\t\t\tvar colour = 0xFF00FF;\n\t\t\t\tvar edgeColour = 0xFF00FF;\n\n\t\t\t\t// Transparency\n\t\t\t\tvar alpha = 1;\n\t\t\t\tvar isTransparent = false;\n\t\t\t\t// Self-illumination:\n\t\t\t\tvar luminance = 0;\n\n\t\t\t\tvar finishType = LDrawLoader.FINISH_TYPE_DEFAULT;\n\t\t\t\tvar canHaveEnvMap = true;\n\n\t\t\t\tvar edgeMaterial = null;\n\n\t\t\t\tvar name = lineParser.getToken();\n\t\t\t\tif ( ! name ) {\n\n\t\t\t\t\tthrow 'LDrawLoader: Material name was expected after \"!COLOUR tag' + lineParser.getLineNumberString() + \".\";\n\n\t\t\t\t}\n\n\t\t\t\t// Parse tag tokens and their parameters\n\t\t\t\tvar token = null;\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\ttoken = lineParser.getToken();\n\n\t\t\t\t\tif ( ! token ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch ( token.toUpperCase() ) {\n\n\t\t\t\t\t\tcase \"CODE\":\n\n\t\t\t\t\t\t\tcode = lineParser.getToken();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"VALUE\":\n\n\t\t\t\t\t\t\tcolour = lineParser.getToken();\n\t\t\t\t\t\t\tif ( colour.startsWith( '0x' ) ) {\n\n\t\t\t\t\t\t\t\tcolour = '#' + colour.substring( 2 );\n\n\t\t\t\t\t\t\t} else if ( ! colour.startsWith( '#' ) ) {\n\n\t\t\t\t\t\t\t\tthrow 'LDrawLoader: Invalid colour while parsing material' + lineParser.getLineNumberString() + \".\";\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"EDGE\":\n\n\t\t\t\t\t\t\tedgeColour = lineParser.getToken();\n\t\t\t\t\t\t\tif ( edgeColour.startsWith( '0x' ) ) {\n\n\t\t\t\t\t\t\t\tedgeColour = '#' + edgeColour.substring( 2 );\n\n\t\t\t\t\t\t\t} else if ( ! edgeColour.startsWith( '#' ) ) {\n\n\t\t\t\t\t\t\t\t// Try to see if edge colour is a colour code\n\t\t\t\t\t\t\t\tedgeMaterial = this.getMaterial( edgeColour );\n\t\t\t\t\t\t\t\tif ( ! edgeMaterial ) {\n\n\t\t\t\t\t\t\t\t\tthrow 'LDrawLoader: Invalid edge colour while parsing material' + lineParser.getLineNumberString() + \".\";\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Get the edge material for this triangle material\n\t\t\t\t\t\t\t\tedgeMaterial = edgeMaterial.userData.edgeMaterial;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ALPHA':\n\n\t\t\t\t\t\t\talpha = parseInt( lineParser.getToken() );\n\n\t\t\t\t\t\t\tif ( isNaN( alpha ) ) {\n\n\t\t\t\t\t\t\t\tthrow 'LDrawLoader: Invalid alpha value in material definition' + lineParser.getLineNumberString() + \".\";\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\talpha = Math.max( 0, Math.min( 1, alpha / 255 ) );\n\n\t\t\t\t\t\t\tif ( alpha < 1 ) {\n\n\t\t\t\t\t\t\t\tisTransparent = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LUMINANCE':\n\n\t\t\t\t\t\t\tluminance = parseInt( lineParser.getToken() );\n\n\t\t\t\t\t\t\tif ( isNaN( luminance ) ) {\n\n\t\t\t\t\t\t\t\tthrow 'LDrawLoader: Invalid luminance value in material definition' + LineParser.getLineNumberString() + \".\";\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tluminance = Math.max( 0, Math.min( 1, luminance / 255 ) );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CHROME':\n\t\t\t\t\t\t\tfinishType = LDrawLoader.FINISH_TYPE_CHROME;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'PEARLESCENT':\n\t\t\t\t\t\t\tfinishType = LDrawLoader.FINISH_TYPE_PEARLESCENT;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RUBBER':\n\t\t\t\t\t\t\tfinishType = LDrawLoader.FINISH_TYPE_RUBBER;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'MATTE_METALLIC':\n\t\t\t\t\t\t\tfinishType = LDrawLoader.FINISH_TYPE_MATTE_METALLIC;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'METAL':\n\t\t\t\t\t\t\tfinishType = LDrawLoader.FINISH_TYPE_METAL;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'MATERIAL':\n\t\t\t\t\t\t\t// Not implemented\n\t\t\t\t\t\t\tlineParser.setToEnd();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow 'LDrawLoader: Unknown token \"' + token + '\" while parsing material' + lineParser.getLineNumberString() + \".\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar material = null;\n\n\t\t\t\tswitch ( finishType ) {\n\n\t\t\t\t\tcase LDrawLoader.FINISH_TYPE_DEFAULT:\n\n\t\t\t\t\t\tmaterial = new THREE.MeshStandardMaterial( { color: colour, roughness: 0.3, envMapIntensity: 0.3, metalness: 0 } );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase LDrawLoader.FINISH_TYPE_PEARLESCENT:\n\n\t\t\t\t\t\t// Try to imitate pearlescency by setting the specular to the complementary of the color, and low shininess\n\t\t\t\t\t\tvar specular = new THREE.Color( colour );\n\t\t\t\t\t\tvar hsl = specular.getHSL( { h: 0, s: 0, l: 0 } );\n\t\t\t\t\t\thsl.h = ( hsl.h + 0.5 ) % 1;\n\t\t\t\t\t\thsl.l = Math.min( 1, hsl.l + ( 1 - hsl.l ) * 0.7 );\n\t\t\t\t\t\tspecular.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial( { color: colour, specular: specular, shininess: 10, reflectivity: 0.3 } );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase LDrawLoader.FINISH_TYPE_CHROME:\n\n\t\t\t\t\t\t// Mirror finish surface\n\t\t\t\t\t\tmaterial = new THREE.MeshStandardMaterial( { color: colour, roughness: 0, metalness: 1 } );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase LDrawLoader.FINISH_TYPE_RUBBER:\n\n\t\t\t\t\t\t// Rubber finish\n\t\t\t\t\t\tmaterial = new THREE.MeshStandardMaterial( { color: colour, roughness: 0.9, metalness: 0 } );\n\t\t\t\t\t\tcanHaveEnvMap = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase LDrawLoader.FINISH_TYPE_MATTE_METALLIC:\n\n\t\t\t\t\t\t// Brushed metal finish\n\t\t\t\t\t\tmaterial = new THREE.MeshStandardMaterial( { color: colour, roughness: 0.8, metalness: 0.4 } );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase LDrawLoader.FINISH_TYPE_METAL:\n\n\t\t\t\t\t\t// Average metal finish\n\t\t\t\t\t\tmaterial = new THREE.MeshStandardMaterial( { color: colour, roughness: 0.2, metalness: 0.85 } );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Should not happen\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.transparent = isTransparent;\n\t\t\t\tmaterial.premultipliedAlpha = true;\n\t\t\t\tmaterial.opacity = alpha;\n\t\t\t\tmaterial.depthWrite = ! isTransparent;\n\n\t\t\t\tmaterial.polygonOffset = true;\n\t\t\t\tmaterial.polygonOffsetFactor = 1;\n\n\t\t\t\tmaterial.userData.canHaveEnvMap = canHaveEnvMap;\n\n\t\t\t\tif ( luminance !== 0 ) {\n\n\t\t\t\t\tmaterial.emissive.set( material.color ).multiplyScalar( luminance );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! edgeMaterial ) {\n\n\t\t\t\t\t// This is the material used for edges\n\t\t\t\t\tedgeMaterial = new THREE.LineBasicMaterial( {\n\t\t\t\t\t\tcolor: edgeColour,\n\t\t\t\t\t\ttransparent: isTransparent,\n\t\t\t\t\t\topacity: alpha,\n\t\t\t\t\t\tdepthWrite: ! isTransparent\n\t\t\t\t\t} );\n\t\t\t\t\tedgeMaterial.userData.code = code;\n\t\t\t\t\tedgeMaterial.name = name + \" - Edge\";\n\t\t\t\t\tedgeMaterial.userData.canHaveEnvMap = false;\n\n\t\t\t\t\t// This is the material used for conditional edges\n\t\t\t\t\tedgeMaterial.userData.conditionalEdgeMaterial = new THREE.ShaderMaterial( {\n\t\t\t\t\t\tvertexShader: conditionalLineVertShader,\n\t\t\t\t\t\tfragmentShader: conditionalLineFragShader,\n\t\t\t\t\t\tuniforms: {\n\t\t\t\t\t\t\tdiffuse: {\n\t\t\t\t\t\t\t\tvalue: new THREE.Color( edgeColour )\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\topacity: {\n\t\t\t\t\t\t\t\tvalue: alpha\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttransparent: isTransparent,\n\t\t\t\t\t\tdepthWrite: ! isTransparent\n\t\t\t\t\t} );\n\t\t\t\t\tedgeMaterial.userData.conditionalEdgeMaterial.userData.canHaveEnvMap = false;\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.userData.code = code;\n\t\t\t\tmaterial.name = name;\n\n\t\t\t\tmaterial.userData.edgeMaterial = edgeMaterial;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t//\n\n\t\t\tobjectParse: function ( text ) {\n\n\t\t\t\t// Retrieve data from the parent parse scope\n\t\t\t\tvar parentParseScope = this.getParentParseScope();\n\n\t\t\t\t// Main colour codes passed to this subobject (or default codes 16 and 24 if it is the root object)\n\t\t\t\tvar mainColourCode = parentParseScope.mainColourCode;\n\t\t\t\tvar mainEdgeColourCode = parentParseScope.mainEdgeColourCode;\n\n\t\t\t\tvar currentParseScope = this.getCurrentParseScope();\n\n\t\t\t\t// Parse result variables\n\t\t\t\tvar triangles;\n\t\t\t\tvar lineSegments;\n\t\t\t\tvar conditionalSegments;\n\n\t\t\t\tvar subobjects = [];\n\n\t\t\t\tvar category = null;\n\t\t\t\tvar keywords = null;\n\n\t\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t\t}\n\n\t\t\t\tvar lines = text.split( '\\n' );\n\t\t\t\tvar numLines = lines.length;\n\t\t\t\tvar lineIndex = 0;\n\n\t\t\t\tvar parsingEmbeddedFiles = false;\n\t\t\t\tvar currentEmbeddedFileName = null;\n\t\t\t\tvar currentEmbeddedText = null;\n\n\t\t\t\tvar bfcCertified = false;\n\t\t\t\tvar bfcCCW = true;\n\t\t\t\tvar bfcInverted = false;\n\t\t\t\tvar bfcCull = true;\n\t\t\t\tvar type = '';\n\n\t\t\t\tvar startingConstructionStep = false;\n\n\t\t\t\tvar scope = this;\n\t\t\t\tfunction parseColourCode( lineParser, forEdge ) {\n\n\t\t\t\t\t// Parses next colour code and returns a THREE.Material\n\n\t\t\t\t\tvar colourCode = lineParser.getToken();\n\n\t\t\t\t\tif ( ! forEdge && colourCode === '16' ) {\n\n\t\t\t\t\t\tcolourCode = mainColourCode;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( forEdge && colourCode === '24' ) {\n\n\t\t\t\t\t\tcolourCode = mainEdgeColourCode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar material = scope.getMaterial( colourCode );\n\n\t\t\t\t\tif ( ! material ) {\n\n\t\t\t\t\t\tthrow 'LDrawLoader: Unknown colour code \"' + colourCode + '\" is used' + lineParser.getLineNumberString() + ' but it was not defined previously.';\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t}\n\n\t\t\t\tfunction parseVector( lp ) {\n\n\t\t\t\t\tvar v = new THREE.Vector3( parseFloat( lp.getToken() ), parseFloat( lp.getToken() ), parseFloat( lp.getToken() ) );\n\n\t\t\t\t\tif ( ! scope.separateObjects ) {\n\n\t\t\t\t\t\tv.applyMatrix4( currentParseScope.currentMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn v;\n\n\t\t\t\t}\n\n\t\t\t\t// Parse all line commands\n\t\t\t\tfor ( lineIndex = 0; lineIndex < numLines; lineIndex ++ ) {\n\n\t\t\t\t\tvar line = lines[ lineIndex ];\n\n\t\t\t\t\tif ( line.length === 0 ) continue;\n\n\t\t\t\t\tif ( parsingEmbeddedFiles ) {\n\n\t\t\t\t\t\tif ( line.startsWith( '0 FILE ' ) ) {\n\n\t\t\t\t\t\t\t// Save previous embedded file in the cache\n\t\t\t\t\t\t\tthis.subobjectCache[ currentEmbeddedFileName.toLowerCase() ] = currentEmbeddedText;\n\n\t\t\t\t\t\t\t// New embedded text file\n\t\t\t\t\t\t\tcurrentEmbeddedFileName = line.substring( 7 );\n\t\t\t\t\t\t\tcurrentEmbeddedText = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcurrentEmbeddedText += line + '\\n';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar lp = new LineParser( line, lineIndex + 1 );\n\n\t\t\t\t\tlp.seekNonSpace();\n\n\t\t\t\t\tif ( lp.isAtTheEnd() ) {\n\n\t\t\t\t\t\t// Empty line\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Parse the line type\n\t\t\t\t\tvar lineType = lp.getToken();\n\n\t\t\t\t\tswitch ( lineType ) {\n\n\t\t\t\t\t\t// Line type 0: Comment or META\n\t\t\t\t\t\tcase '0':\n\n\t\t\t\t\t\t\t// Parse meta directive\n\t\t\t\t\t\t\tvar meta = lp.getToken();\n\n\t\t\t\t\t\t\tif ( meta ) {\n\n\t\t\t\t\t\t\t\tswitch ( meta ) {\n\n\t\t\t\t\t\t\t\t\tcase '!LDRAW_ORG':\n\n\t\t\t\t\t\t\t\t\t\ttype = lp.getToken();\n\n\t\t\t\t\t\t\t\t\t\tcurrentParseScope.triangles = [];\n\t\t\t\t\t\t\t\t\t\tcurrentParseScope.lineSegments = [];\n\t\t\t\t\t\t\t\t\t\tcurrentParseScope.conditionalSegments = [];\n\t\t\t\t\t\t\t\t\t\tcurrentParseScope.type = type;\n\n\t\t\t\t\t\t\t\t\t\tvar isRoot = ! parentParseScope.isFromParse;\n\t\t\t\t\t\t\t\t\t\tif ( isRoot || scope.separateObjects && ! isPrimitiveType( type ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\tcurrentParseScope.groupObject = new THREE.Group();\n\n\t\t\t\t\t\t\t\t\t\t\tcurrentParseScope.groupObject.userData.startingConstructionStep = currentParseScope.startingConstructionStep;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// If the scale of the object is negated then the triangle winding order\n\t\t\t\t\t\t\t\t\t\t// needs to be flipped.\n\t\t\t\t\t\t\t\t\t\tvar matrix = currentParseScope.matrix;\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tmatrix.determinant() < 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\tscope.separateObjects && isPrimitiveType( type ) ||\n\t\t\t\t\t\t\t\t\t\t\t\t! scope.separateObjects\n\t\t\t\t\t\t\t\t\t\t\t) ) {\n\n\t\t\t\t\t\t\t\t\t\t\tcurrentParseScope.inverted = ! currentParseScope.inverted;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\ttriangles = currentParseScope.triangles;\n\t\t\t\t\t\t\t\t\t\tlineSegments = currentParseScope.lineSegments;\n\t\t\t\t\t\t\t\t\t\tconditionalSegments = currentParseScope.conditionalSegments;\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase '!COLOUR':\n\n\t\t\t\t\t\t\t\t\t\tvar material = this.parseColourMetaDirective( lp );\n\t\t\t\t\t\t\t\t\t\tif ( material ) {\n\n\t\t\t\t\t\t\t\t\t\t\tthis.addMaterial( material );\n\n\t\t\t\t\t\t\t\t\t\t}\telse {\n\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'LDrawLoader: Error parsing material' + lp.getLineNumberString() );\n\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase '!CATEGORY':\n\n\t\t\t\t\t\t\t\t\t\tcategory = lp.getToken();\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase '!KEYWORDS':\n\n\t\t\t\t\t\t\t\t\t\tvar newKeywords = lp.getRemainingString().split( ',' );\n\t\t\t\t\t\t\t\t\t\tif ( newKeywords.length > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( ! keywords ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tkeywords = [];\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tnewKeywords.forEach( function ( keyword ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tkeywords.push( keyword.trim() );\n\n\t\t\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'FILE':\n\n\t\t\t\t\t\t\t\t\t\tif ( lineIndex > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\t// Start embedded text files parsing\n\t\t\t\t\t\t\t\t\t\t\tparsingEmbeddedFiles = true;\n\t\t\t\t\t\t\t\t\t\t\tcurrentEmbeddedFileName = lp.getRemainingString();\n\t\t\t\t\t\t\t\t\t\t\tcurrentEmbeddedText = '';\n\n\t\t\t\t\t\t\t\t\t\t\tbfcCertified = false;\n\t\t\t\t\t\t\t\t\t\t\tbfcCCW = true;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'BFC':\n\n\t\t\t\t\t\t\t\t\t\t// Changes to the backface culling state\n\t\t\t\t\t\t\t\t\t\twhile ( ! lp.isAtTheEnd() ) {\n\n\t\t\t\t\t\t\t\t\t\t\tvar token = lp.getToken();\n\n\t\t\t\t\t\t\t\t\t\t\tswitch ( token ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'CERTIFY':\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NOCERTIFY':\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tbfcCertified = token === 'CERTIFY';\n\t\t\t\t\t\t\t\t\t\t\t\t\tbfcCCW = true;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'CW':\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'CCW':\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tbfcCCW = token === 'CCW';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'INVERTNEXT':\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tbfcInverted = true;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'CLIP':\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'NOCLIP':\n\n\t\t\t\t\t\t\t\t\t\t\t\t  bfcCull = token === 'CLIP';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.LDrawLoader: BFC directive \"' + token + '\" is unknown.' );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'STEP':\n\n\t\t\t\t\t\t\t\t\t\tstartingConstructionStep = true;\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t// Other meta directives are not implemented\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Line type 1: Sub-object file\n\t\t\t\t\t\tcase '1':\n\n\t\t\t\t\t\t\tvar material = parseColourCode( lp );\n\n\t\t\t\t\t\t\tvar posX = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar posY = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar posZ = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar m0 = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar m1 = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar m2 = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar m3 = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar m4 = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar m5 = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar m6 = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar m7 = parseFloat( lp.getToken() );\n\t\t\t\t\t\t\tvar m8 = parseFloat( lp.getToken() );\n\n\t\t\t\t\t\t\tvar matrix = new THREE.Matrix4().set(\n\t\t\t\t\t\t\t\tm0, m1, m2, posX,\n\t\t\t\t\t\t\t\tm3, m4, m5, posY,\n\t\t\t\t\t\t\t\tm6, m7, m8, posZ,\n\t\t\t\t\t\t\t\t0, 0, 0, 1\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tvar fileName = lp.getRemainingString().trim().replace( /\\\\/g, \"/\" );\n\n\t\t\t\t\t\t\tif ( scope.fileMap[ fileName ] ) {\n\n\t\t\t\t\t\t\t\t// Found the subobject path in the preloaded file path map\n\t\t\t\t\t\t\t\tfileName = scope.fileMap[ fileName ];\n\n\t\t\t\t\t\t\t}\telse {\n\n\t\t\t\t\t\t\t\t// Standardized subfolders\n\t\t\t\t\t\t\t\tif ( fileName.startsWith( 's/' ) ) {\n\n\t\t\t\t\t\t\t\t\tfileName = 'parts/' + fileName;\n\n\t\t\t\t\t\t\t\t} else if ( fileName.startsWith( '48/' ) ) {\n\n\t\t\t\t\t\t\t\t\tfileName = 'p/' + fileName;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsubobjects.push( {\n\t\t\t\t\t\t\t\tmaterial: material,\n\t\t\t\t\t\t\t\tmatrix: matrix,\n\t\t\t\t\t\t\t\tfileName: fileName,\n\t\t\t\t\t\t\t\toriginalFileName: fileName,\n\t\t\t\t\t\t\t\tlocationState: LDrawLoader.FILE_LOCATION_AS_IS,\n\t\t\t\t\t\t\t\turl: null,\n\t\t\t\t\t\t\t\ttriedLowerCase: false,\n\t\t\t\t\t\t\t\tinverted: bfcInverted !== currentParseScope.inverted,\n\t\t\t\t\t\t\t\tstartingConstructionStep: startingConstructionStep\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tbfcInverted = false;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Line type 2: Line segment\n\t\t\t\t\t\tcase '2':\n\n\t\t\t\t\t\t\tvar material = parseColourCode( lp, true );\n\n\t\t\t\t\t\t\tvar segment = {\n\t\t\t\t\t\t\t\tmaterial: material.userData.edgeMaterial,\n\t\t\t\t\t\t\t\tcolourCode: material.userData.code,\n\t\t\t\t\t\t\t\tv0: parseVector( lp ),\n\t\t\t\t\t\t\t\tv1: parseVector( lp )\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tlineSegments.push( segment );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Line type 5: Conditional Line segment\n\t\t\t\t\t\tcase '5':\n\n\t\t\t\t\t\t\tvar material = parseColourCode( lp, true );\n\n\t\t\t\t\t\t\tvar segment = {\n\t\t\t\t\t\t\t\tmaterial: material.userData.edgeMaterial.userData.conditionalEdgeMaterial,\n\t\t\t\t\t\t\t\tcolourCode: material.userData.code,\n\t\t\t\t\t\t\t\tv0: parseVector( lp ),\n\t\t\t\t\t\t\t\tv1: parseVector( lp ),\n\t\t\t\t\t\t\t\tc0: parseVector( lp ),\n\t\t\t\t\t\t\t\tc1: parseVector( lp )\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconditionalSegments.push( segment );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Line type 3: Triangle\n\t\t\t\t\t\tcase '3':\n\n\t\t\t\t\t\t\tvar material = parseColourCode( lp );\n\n\t\t\t\t\t\t\tvar inverted = currentParseScope.inverted;\n\t\t\t\t\t\t\tvar ccw = bfcCCW !== inverted;\n\t\t\t\t\t\t\tvar doubleSided = ! bfcCertified || ! bfcCull;\n\t\t\t\t\t\t\tvar v0, v1, v2, faceNormal;\n\n\t\t\t\t\t\t\tif ( ccw === true ) {\n\n\t\t\t\t\t\t\t\tv0 = parseVector( lp );\n\t\t\t\t\t\t\t\tv1 = parseVector( lp );\n\t\t\t\t\t\t\t\tv2 = parseVector( lp );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tv2 = parseVector( lp );\n\t\t\t\t\t\t\t\tv1 = parseVector( lp );\n\t\t\t\t\t\t\t\tv0 = parseVector( lp );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttempVec0.subVectors( v1, v0 );\n\t\t\t\t\t\t\ttempVec1.subVectors( v2, v1 );\n\t\t\t\t\t\t\tfaceNormal = new THREE.Vector3()\n\t\t\t\t\t\t\t\t.crossVectors( tempVec0, tempVec1 )\n\t\t\t\t\t\t\t\t.normalize();\n\n\t\t\t\t\t\t\ttriangles.push( {\n\t\t\t\t\t\t\t\tmaterial: material,\n\t\t\t\t\t\t\t\tcolourCode: material.userData.code,\n\t\t\t\t\t\t\t\tv0: v0,\n\t\t\t\t\t\t\t\tv1: v1,\n\t\t\t\t\t\t\t\tv2: v2,\n\t\t\t\t\t\t\t\tfaceNormal: faceNormal,\n\t\t\t\t\t\t\t\tn0: null,\n\t\t\t\t\t\t\t\tn1: null,\n\t\t\t\t\t\t\t\tn2: null\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tif ( doubleSided === true ) {\n\n\t\t\t\t\t\t\t\ttriangles.push( {\n\t\t\t\t\t\t\t\t\tmaterial: material,\n\t\t\t\t\t\t\t\t\tcolourCode: material.userData.code,\n\t\t\t\t\t\t\t\t\tv0: v0,\n\t\t\t\t\t\t\t\t\tv1: v2,\n\t\t\t\t\t\t\t\t\tv2: v1,\n\t\t\t\t\t\t\t\t\tfaceNormal: faceNormal,\n\t\t\t\t\t\t\t\t\tn0: null,\n\t\t\t\t\t\t\t\t\tn1: null,\n\t\t\t\t\t\t\t\t\tn2: null\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Line type 4: Quadrilateral\n\t\t\t\t\t\tcase '4':\n\n\t\t\t\t\t\t\tvar material = parseColourCode( lp );\n\n\t\t\t\t\t\t\tvar inverted = currentParseScope.inverted;\n\t\t\t\t\t\t\tvar ccw = bfcCCW !== inverted;\n\t\t\t\t\t\t\tvar doubleSided = ! bfcCertified || ! bfcCull;\n\t\t\t\t\t\t\tvar v0, v1, v2, v3, faceNormal;\n\n\t\t\t\t\t\t\tif ( ccw === true ) {\n\n\t\t\t\t\t\t\t\tv0 = parseVector( lp );\n\t\t\t\t\t\t\t\tv1 = parseVector( lp );\n\t\t\t\t\t\t\t\tv2 = parseVector( lp );\n\t\t\t\t\t\t\t\tv3 = parseVector( lp );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tv3 = parseVector( lp );\n\t\t\t\t\t\t\t\tv2 = parseVector( lp );\n\t\t\t\t\t\t\t\tv1 = parseVector( lp );\n\t\t\t\t\t\t\t\tv0 = parseVector( lp );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttempVec0.subVectors( v1, v0 );\n\t\t\t\t\t\t\ttempVec1.subVectors( v2, v1 );\n\t\t\t\t\t\t\tfaceNormal = new THREE.Vector3()\n\t\t\t\t\t\t\t\t.crossVectors( tempVec0, tempVec1 )\n\t\t\t\t\t\t\t\t.normalize();\n\n\t\t\t\t\t\t\ttriangles.push( {\n\t\t\t\t\t\t\t\tmaterial: material,\n\t\t\t\t\t\t\t\tcolourCode: material.userData.code,\n\t\t\t\t\t\t\t\tv0: v0,\n\t\t\t\t\t\t\t\tv1: v1,\n\t\t\t\t\t\t\t\tv2: v2,\n\t\t\t\t\t\t\t\tfaceNormal: faceNormal,\n\t\t\t\t\t\t\t\tn0: null,\n\t\t\t\t\t\t\t\tn1: null,\n\t\t\t\t\t\t\t\tn2: null\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\ttriangles.push( {\n\t\t\t\t\t\t\t\tmaterial: material,\n\t\t\t\t\t\t\t\tcolourCode: material.userData.code,\n\t\t\t\t\t\t\t\tv0: v0,\n\t\t\t\t\t\t\t\tv1: v2,\n\t\t\t\t\t\t\t\tv2: v3,\n\t\t\t\t\t\t\t\tfaceNormal: faceNormal,\n\t\t\t\t\t\t\t\tn0: null,\n\t\t\t\t\t\t\t\tn1: null,\n\t\t\t\t\t\t\t\tn2: null\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tif ( doubleSided === true ) {\n\n\t\t\t\t\t\t\t\ttriangles.push( {\n\t\t\t\t\t\t\t\t\tmaterial: material,\n\t\t\t\t\t\t\t\t\tcolourCode: material.userData.code,\n\t\t\t\t\t\t\t\t\tv0: v0,\n\t\t\t\t\t\t\t\t\tv1: v2,\n\t\t\t\t\t\t\t\t\tv2: v1,\n\t\t\t\t\t\t\t\t\tfaceNormal: faceNormal,\n\t\t\t\t\t\t\t\t\tn0: null,\n\t\t\t\t\t\t\t\t\tn1: null,\n\t\t\t\t\t\t\t\t\tn2: null\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\ttriangles.push( {\n\t\t\t\t\t\t\t\t\tmaterial: material,\n\t\t\t\t\t\t\t\t\tcolourCode: material.userData.code,\n\t\t\t\t\t\t\t\t\tv0: v0,\n\t\t\t\t\t\t\t\t\tv1: v3,\n\t\t\t\t\t\t\t\t\tv2: v2,\n\t\t\t\t\t\t\t\t\tfaceNormal: faceNormal,\n\t\t\t\t\t\t\t\t\tn0: null,\n\t\t\t\t\t\t\t\t\tn1: null,\n\t\t\t\t\t\t\t\t\tn2: null\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow 'LDrawLoader: Unknown line type \"' + lineType + '\"' + lp.getLineNumberString() + '.';\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( parsingEmbeddedFiles ) {\n\n\t\t\t\t\tthis.subobjectCache[ currentEmbeddedFileName.toLowerCase() ] = currentEmbeddedText;\n\n\t\t\t\t}\n\n\t\t\t\tcurrentParseScope.category = category;\n\t\t\t\tcurrentParseScope.keywords = keywords;\n\t\t\t\tcurrentParseScope.subobjects = subobjects;\n\t\t\t\tcurrentParseScope.numSubobjects = subobjects.length;\n\t\t\t\tcurrentParseScope.subobjectIndex = 0;\n\n\t\t\t},\n\n\t\t\tcomputeConstructionSteps: function ( model ) {\n\n\t\t\t\t// Sets userdata.constructionStep number in Group objects and userData.numConstructionSteps number in the root Group object.\n\n\t\t\t\tvar stepNumber = 0;\n\n\t\t\t\tmodel.traverse( c => {\n\n\t\t\t\t\tif ( c.isGroup ) {\n\n\t\t\t\t\t\tif ( c.userData.startingConstructionStep ) {\n\n\t\t\t\t\t\t\tstepNumber ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.userData.constructionStep = stepNumber;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tmodel.userData.numConstructionSteps = stepNumber + 1;\n\n\t\t\t},\n\n\t\t\tprocessObject: function ( text, onProcessed, subobject, url ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tvar parseScope = scope.newParseScopeLevel();\n\t\t\t\tparseScope.url = url;\n\n\t\t\t\tvar parentParseScope = scope.getParentParseScope();\n\n\t\t\t\t// Set current matrix\n\t\t\t\tif ( subobject ) {\n\n\t\t\t\t\tparseScope.currentMatrix.multiplyMatrices( parentParseScope.currentMatrix, subobject.matrix );\n\t\t\t\t\tparseScope.matrix.copy( subobject.matrix );\n\t\t\t\t\tparseScope.inverted = subobject.inverted;\n\t\t\t\t\tparseScope.startingConstructionStep = subobject.startingConstructionStep;\n\n\t\t\t\t}\n\n\t\t\t\t// Add to cache\n\t\t\t\tvar currentFileName = parentParseScope.currentFileName;\n\t\t\t\tif ( currentFileName !== null ) {\n\n\t\t\t\t\tcurrentFileName = parentParseScope.currentFileName.toLowerCase();\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.subobjectCache[ currentFileName ] === undefined ) {\n\n\t\t\t\t\tscope.subobjectCache[ currentFileName ] = text;\n\n\t\t\t\t}\n\n\n\t\t\t\t// Parse the object (returns a THREE.Group)\n\t\t\t\tscope.objectParse( text );\n\t\t\t\tvar finishedCount = 0;\n\t\t\t\tonSubobjectFinish();\n\n\t\t\t\tfunction onSubobjectFinish() {\n\n\t\t\t\t\tfinishedCount ++;\n\n\t\t\t\t\tif ( finishedCount === parseScope.subobjects.length + 1 ) {\n\n\t\t\t\t\t\tfinalizeObject();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Once the previous subobject has finished we can start processing the next one in the list.\n\t\t\t\t\t\t// The subobject processing shares scope in processing so it's important that they be loaded serially\n\t\t\t\t\t\t// to avoid race conditions.\n\t\t\t\t\t\t// Promise.resolve is used as an approach to asynchronously schedule a task _before_ this frame ends to\n\t\t\t\t\t\t// avoid stack overflow exceptions when loading many subobjects from the cache. RequestAnimationFrame\n\t\t\t\t\t\t// will work but causes the load to happen after the next frame which causes the load to take significantly longer.\n\t\t\t\t\t\tvar subobject = parseScope.subobjects[ parseScope.subobjectIndex ];\n\t\t\t\t\t\tPromise.resolve().then( function () {\n\n\t\t\t\t\t\t\tloadSubobject( subobject );\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tparseScope.subobjectIndex ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfunction finalizeObject() {\n\n\t\t\t\t\tif ( scope.smoothNormals && parseScope.type === 'Part' ) {\n\n\t\t\t\t\t\tsmoothNormals( parseScope.triangles, parseScope.lineSegments );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isRoot = ! parentParseScope.isFromParse;\n\t\t\t\t\tif ( scope.separateObjects && ! isPrimitiveType( parseScope.type ) || isRoot ) {\n\n\n\t\t\t\t\t\tconst objGroup = parseScope.groupObject;\n\t\t\t\t\t\tif ( parseScope.triangles.length > 0 ) {\n\n\t\t\t\t\t\t\tobjGroup.add( createObject( parseScope.triangles, 3 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( parseScope.lineSegments.length > 0 ) {\n\n\t\t\t\t\t\t\tobjGroup.add( createObject( parseScope.lineSegments, 2 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( parseScope.conditionalSegments.length > 0 ) {\n\n\t\t\t\t\t\t\tobjGroup.add( createObject( parseScope.conditionalSegments, 2, true ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( parentParseScope.groupObject ) {\n\n\t\t\t\t\t\t\tobjGroup.name = parseScope.fileName;\n\t\t\t\t\t\t\tobjGroup.userData.category = parseScope.category;\n\t\t\t\t\t\t\tobjGroup.userData.keywords = parseScope.keywords;\n\t\t\t\t\t\t\tparseScope.matrix.decompose( objGroup.position, objGroup.quaternion, objGroup.scale );\n\n\t\t\t\t\t\t\tparentParseScope.groupObject.add( objGroup );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar separateObjects = scope.separateObjects;\n\t\t\t\t\t\tvar parentLineSegments = parentParseScope.lineSegments;\n\t\t\t\t\t\tvar parentConditionalSegments = parentParseScope.conditionalSegments;\n\t\t\t\t\t\tvar parentTriangles = parentParseScope.triangles;\n\n\t\t\t\t\t\tvar lineSegments = parseScope.lineSegments;\n\t\t\t\t\t\tvar conditionalSegments = parseScope.conditionalSegments;\n\t\t\t\t\t\tvar triangles = parseScope.triangles;\n\n\t\t\t\t\t\tfor ( var i = 0, l = lineSegments.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar ls = lineSegments[ i ];\n\t\t\t\t\t\t\tif ( separateObjects ) {\n\n\t\t\t\t\t\t\t\tls.v0.applyMatrix4( parseScope.matrix );\n\t\t\t\t\t\t\t\tls.v1.applyMatrix4( parseScope.matrix );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparentLineSegments.push( ls );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0, l = conditionalSegments.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar os = conditionalSegments[ i ];\n\t\t\t\t\t\t\tif ( separateObjects ) {\n\n\t\t\t\t\t\t\t\tos.v0.applyMatrix4( parseScope.matrix );\n\t\t\t\t\t\t\t\tos.v1.applyMatrix4( parseScope.matrix );\n\t\t\t\t\t\t\t\tos.c0.applyMatrix4( parseScope.matrix );\n\t\t\t\t\t\t\t\tos.c1.applyMatrix4( parseScope.matrix );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparentConditionalSegments.push( os );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0, l = triangles.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar tri = triangles[ i ];\n\t\t\t\t\t\t\tif ( separateObjects ) {\n\n\t\t\t\t\t\t\t\ttri.v0 = tri.v0.clone().applyMatrix4( parseScope.matrix );\n\t\t\t\t\t\t\t\ttri.v1 = tri.v1.clone().applyMatrix4( parseScope.matrix );\n\t\t\t\t\t\t\t\ttri.v2 = tri.v2.clone().applyMatrix4( parseScope.matrix );\n\n\t\t\t\t\t\t\t\ttempVec0.subVectors( tri.v1, tri.v0 );\n\t\t\t\t\t\t\t\ttempVec1.subVectors( tri.v2, tri.v1 );\n\t\t\t\t\t\t\t\ttri.faceNormal.crossVectors( tempVec0, tempVec1 ).normalize();\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparentTriangles.push( tri );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.removeScopeLevel();\n\n\t\t\t\t\t// If it is root object, compute construction steps\n\t\t\t\t\tif ( ! parentParseScope.isFromParse ) {\n\n\t\t\t\t\t\tscope.computeConstructionSteps( parseScope.groupObject );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( onProcessed ) {\n\n\t\t\t\t\t\tonProcessed( parseScope.groupObject );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfunction loadSubobject( subobject ) {\n\n\t\t\t\t\tparseScope.mainColourCode = subobject.material.userData.code;\n\t\t\t\t\tparseScope.mainEdgeColourCode = subobject.material.userData.edgeMaterial.userData.code;\n\t\t\t\t\tparseScope.currentFileName = subobject.originalFileName;\n\n\n\t\t\t\t\t// If subobject was cached previously, use the cached one\n\t\t\t\t\tvar cached = scope.subobjectCache[ subobject.originalFileName.toLowerCase() ];\n\t\t\t\t\tif ( cached ) {\n\n\t\t\t\t\t\tscope.processObject( cached, function ( subobjectGroup ) {\n\n\t\t\t\t\t\t\tonSubobjectLoaded( subobjectGroup, subobject );\n\t\t\t\t\t\t\tonSubobjectFinish();\n\n\t\t\t\t\t\t}, subobject, url );\n\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Adjust file name to locate the subobject file path in standard locations (always under directory scope.path)\n\t\t\t\t\t// Update also subobject.locationState for the next try if this load fails.\n\t\t\t\t\tvar subobjectURL = subobject.fileName;\n\t\t\t\t\tvar newLocationState = LDrawLoader.FILE_LOCATION_NOT_FOUND;\n\n\t\t\t\t\tswitch ( subobject.locationState ) {\n\n\t\t\t\t\t\tcase LDrawLoader.FILE_LOCATION_AS_IS:\n\t\t\t\t\t\t\tnewLocationState = subobject.locationState + 1;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LDrawLoader.FILE_LOCATION_TRY_PARTS:\n\t\t\t\t\t\t\tsubobjectURL = 'parts/' + subobjectURL;\n\t\t\t\t\t\t\tnewLocationState = subobject.locationState + 1;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LDrawLoader.FILE_LOCATION_TRY_P:\n\t\t\t\t\t\t\tsubobjectURL = 'p/' + subobjectURL;\n\t\t\t\t\t\t\tnewLocationState = subobject.locationState + 1;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LDrawLoader.FILE_LOCATION_TRY_MODELS:\n\t\t\t\t\t\t\tsubobjectURL = 'models/' + subobjectURL;\n\t\t\t\t\t\t\tnewLocationState = subobject.locationState + 1;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LDrawLoader.FILE_LOCATION_TRY_RELATIVE:\n\t\t\t\t\t\t\tsubobjectURL = url.substring( 0, url.lastIndexOf( \"/\" ) + 1 ) + subobjectURL;\n\t\t\t\t\t\t\tnewLocationState = subobject.locationState + 1;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LDrawLoader.FILE_LOCATION_TRY_ABSOLUTE:\n\n\t\t\t\t\t\t\tif ( subobject.triedLowerCase ) {\n\n\t\t\t\t\t\t\t\t// Try absolute path\n\t\t\t\t\t\t\t\tnewLocationState = LDrawLoader.FILE_LOCATION_NOT_FOUND;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Next attempt is lower case\n\t\t\t\t\t\t\t\tsubobject.fileName = subobject.fileName.toLowerCase();\n\t\t\t\t\t\t\t\tsubobjectURL = subobject.fileName;\n\t\t\t\t\t\t\t\tsubobject.triedLowerCase = true;\n\t\t\t\t\t\t\t\tnewLocationState = LDrawLoader.FILE_LOCATION_AS_IS;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LDrawLoader.FILE_LOCATION_NOT_FOUND:\n\n\t\t\t\t\t\t\t// All location possibilities have been tried, give up loading this object\n\t\t\t\t\t\t\tconsole.warn( 'LDrawLoader: Subobject \"' + subobject.originalFileName + '\" could not be found.' );\n\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tsubobject.locationState = newLocationState;\n\t\t\t\t\tsubobject.url = subobjectURL;\n\n\t\t\t\t\t// Load the subobject\n\t\t\t\t\t// Use another file loader here so we can keep track of the subobject information\n\t\t\t\t\t// and use it when processing the next model.\n\t\t\t\t\tvar fileLoader = new THREE.FileLoader( scope.manager );\n\t\t\t\t\tfileLoader.setPath( scope.path );\n\t\t\t\t\tfileLoader.load( subobjectURL, function ( text ) {\n\n\t\t\t\t\t\tscope.processObject( text, function ( subobjectGroup ) {\n\n\t\t\t\t\t\t\tonSubobjectLoaded( subobjectGroup, subobject );\n\t\t\t\t\t\t\tonSubobjectFinish();\n\n\t\t\t\t\t\t}, subobject, url );\n\n\t\t\t\t\t}, undefined, function ( err ) {\n\n\t\t\t\t\t\tonSubobjectError( err, subobject );\n\n\t\t\t\t\t}, subobject );\n\n\t\t\t\t}\n\n\t\t\t\tfunction onSubobjectLoaded( subobjectGroup, subobject ) {\n\n\t\t\t\t\tif ( subobjectGroup === null ) {\n\n\t\t\t\t\t\t// Try to reload\n\t\t\t\t\t\tloadSubobject( subobject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.fileMap[ subobject.originalFileName ] = subobject.url;\n\n\t\t\t\t}\n\n\t\t\t\tfunction onSubobjectError( err, subobject ) {\n\n\t\t\t\t\t// Retry download from a different default possible location\n\t\t\t\t\tloadSubobject( subobject );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn LDrawLoader;\n\n\t} )();\n\t\n\treturn THREE.LDrawLoader;\n});\n"]}