{"version":3,"sources":["loaders/XLoader.js"],"names":["define","THREE","classCallCheck","createClass","XAnimationInfo","XAnimationObj","XKeyFrameInfo","XLoader","instance","Constructor","TypeError","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","this","animeName","boneName","targetBone","keyType","frameStartLv","keyFrames","InverseMx","_flags","fps","name","hierarchy","putFlags","undefined","putPos","putRot","putScl","value","XAnimationInfoArray","push","makeBonekeys","keys","time","assign","refObj","parent","keyFrameRefactor","copy","keyframe","pos","rot","scl","matrix","Vector3","setFromMatrixPosition","Quaternion","setFromRotationMatrix","setFromMatrixScale","index","Frame","manager","Loader","call","debug","texloader","TextureLoader","url","_putMatLength","_nowMat","_nowFrameName","frameHierarchie","Hierarchies","HieStack","_currentObject","_currentFrame","_data","onLoad","IsUvYReverse","Meshes","animations","animTicksPerSecond","_currentGeo","_currentAnime","_currentAnimeFrames","_arg","_start","arguments","options","onProgress","onError","_this","_setArgOption","loader","FileLoader","setPath","path","setResponseType","load","response","parse","line","readed","find","indexOf","foundNewLine","substr","binData","reader","DataView","getUint32","byteLength","fileLength","getUint8","buf","array_buffer","Uint8Array","charCodeAt","buffer","LoaderUtils","decodeText","data","_ensureBinary","_ensureString","_isBinary","_parseBinary","_parseASCII","resourcePath","extractUrlBase","setCrossOrigin","crossOrigin","children","_hierarchieParse","_changeRoot","shift","_mainloop","_parent","_end","endRead","find1","findEnd","findNext","nameData","_readLine","trim","word","split","type","refs","end","DataEnder","lastIndexOf","Math","min","nextStart","max","_refs","_this2","_mainProc","worked","setTimeout","models","breakFlag","parseInt","_setFrame","_setFrameTransformMatrix","parentName","_getParentName","VertexSetedBoneCount","GeometryData","vertices","normals","uvs","skinIndices","skinWeights","indices","materialIndices","Materials","normalVectors","BoneInfs","baseFrame","_makeBoneFrom_CurrentFrame","_readVertexDatas","_setMeshTextureCoords","_setMeshMaterialList","_setMaterial","_setSkinWeights","AnimeFrames","_readAnimationKey","console","log","_makeOutputGeometry","_makeOutputAnimation","_obj","FrameTransformMatrix","Matrix4","_ParseMatrixData","b","Bone","applyMatrix4","matrixWorld","putBone","frame","add","mode","mode_local","maxLength","changeMode","_readInt1","_readVertex1","_readFace1","_readNormalVector1","start","refI","parseFloat","bufferGeometry","BufferGeometry","position","l","stride2","stride3","stride4","setAttribute","Float32BufferAttribute","Uint16BufferAttribute","_computeGroups","group","groups","materialIndex","currentMaterialIndex","count","MeshPhongMaterial","color","random","side","FrontSide","r","g","shininess","data2","specular","data3","emissive","localObject","fileName","map","bumpMap","bumpScale","normalMap","normalScale","Vector2","emissiveMap","lightMap","boneInf","XboneInf","BoneIndex","Indeces","Weights","initMatrix","OffsetMatrix","_i","_RootName","_bones","putting","toArray","rotq","mesh","putBones","_makePutBoneList","bi","boneIndex","bb","vi","nowVertexID","nowVal","stride","sk","skinning","offsetList","_bi","_buildGeometry","SkinnedMesh","_initSkeleton","_bufferGeometry","Mesh","worldBaseMx","currentMxFrame","multiply","boneList","boneInverses","bone","gbone","il","bones","fromArray","quaternion","scale","updateMatrixWorld","skeleton","Skeleton","bind","nowKeyType","keyInfo","frameFound","mm","frameValue","animationObj","make","_model","_animation","model","animation","put","findAnimation","c_key","_c_key","k","set","geometry","AnimationClip","parseAnimation","animationMixer","AnimationMixer","targetMatrix"],"mappings":"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","file":"../../loaders/XLoader.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author adrs2002 / https://github.com/adrs2002\n\t */\n\n\tTHREE.XLoader = ( function () {\n\n\t\tvar classCallCheck = function ( instance, Constructor ) {\n\n\t\t\tif ( ! ( instance instanceof Constructor ) ) {\n\n\t\t\t\tthrow new TypeError( \"Cannot call a class as a function\" );\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar createClass = function () {\n\n\t\t\tfunction defineProperties( target, props ) {\n\n\t\t\t\tfor ( var i = 0; i < props.length; i ++ ) {\n\n\t\t\t\t\tvar descriptor = props[ i ];\n\t\t\t\t\tdescriptor.enumerable = descriptor.enumerable || false;\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t\tif ( \"value\" in descriptor ) descriptor.writable = true;\n\t\t\t\t\tObject.defineProperty( target, descriptor.key, descriptor );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn function ( Constructor, protoProps, staticProps ) {\n\n\t\t\t\tif ( protoProps ) defineProperties( Constructor.prototype, protoProps );\n\t\t\t\tif ( staticProps ) defineProperties( Constructor, staticProps );\n\t\t\t\treturn Constructor;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tvar XboneInf = function XboneInf() {\n\n\t\t\tclassCallCheck( this, XboneInf );\n\n\t\t\tthis.boneName = \"\";\n\t\t\tthis.BoneIndex = 0;\n\t\t\tthis.Indeces = [];\n\t\t\tthis.Weights = [];\n\t\t\tthis.initMatrix = null;\n\t\t\tthis.OffsetMatrix = null;\n\n\t\t};\n\n\t\tvar XAnimationInfo = function XAnimationInfo() {\n\n\t\t\tclassCallCheck( this, XAnimationInfo );\n\n\t\t\tthis.animeName = \"\";\n\t\t\tthis.boneName = \"\";\n\t\t\tthis.targetBone = null;\n\t\t\tthis.keyType = 4;\n\t\t\tthis.frameStartLv = 0;\n\t\t\tthis.keyFrames = [];\n\t\t\tthis.InverseMx = null;\n\n\t\t};\n\n\t\tvar XAnimationObj = function () {\n\n\t\t\tfunction XAnimationObj( _flags ) {\n\n\t\t\t\tclassCallCheck( this, XAnimationObj );\n\n\t\t\t\tthis.fps = 30;\n\t\t\t\tthis.name = 'xanimation';\n\t\t\t\tthis.length = 0;\n\t\t\t\tthis.hierarchy = [];\n\t\t\t\tthis.putFlags = _flags;\n\t\t\t\tif ( this.putFlags.putPos === undefined ) {\n\n\t\t\t\t\tthis.putFlags.putPos = true;\n\n\t\t\t\t}\n\t\t\t\tif ( this.putFlags.putRot === undefined ) {\n\n\t\t\t\t\tthis.putFlags.putRot = true;\n\n\t\t\t\t}\n\t\t\t\tif ( this.putFlags.putScl === undefined ) {\n\n\t\t\t\t\tthis.putFlags.putScl = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcreateClass( XAnimationObj, [ {\n\t\t\t\tkey: \"make\",\n\t\t\t\tvalue: function make( XAnimationInfoArray ) {\n\n\t\t\t\t\tfor ( var i = 0; i < XAnimationInfoArray.length; i ++ ) {\n\n\t\t\t\t\t\tthis.hierarchy.push( this.makeBonekeys( XAnimationInfoArray[ i ] ) );\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.length = this.hierarchy[ 0 ].keys[ this.hierarchy[ 0 ].keys.length - 1 ].time;\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: \"clone\",\n\t\t\t\tvalue: function clone() {\n\n\t\t\t\t\treturn Object.assign( {}, this );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: \"makeBonekeys\",\n\t\t\t\tvalue: function makeBonekeys( XAnimationInfo ) {\n\n\t\t\t\t\tvar refObj = {};\n\t\t\t\t\trefObj.name = XAnimationInfo.boneName;\n\t\t\t\t\trefObj.parent = \"\";\n\t\t\t\t\trefObj.keys = this.keyFrameRefactor( XAnimationInfo );\n\t\t\t\t\trefObj.copy = function () {\n\n\t\t\t\t\t\treturn Object.assign( {}, this );\n\n\t\t\t\t\t};\n\t\t\t\t\treturn refObj;\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: \"keyFrameRefactor\",\n\t\t\t\tvalue: function keyFrameRefactor( XAnimationInfo ) {\n\n\t\t\t\t\tvar keys = [];\n\t\t\t\t\tfor ( var i = 0; i < XAnimationInfo.keyFrames.length; i ++ ) {\n\n\t\t\t\t\t\tvar keyframe = {};\n\t\t\t\t\t\tkeyframe.time = XAnimationInfo.keyFrames[ i ].time * this.fps;\n\t\t\t\t\t\tif ( XAnimationInfo.keyFrames[ i ].pos && this.putFlags.putPos ) {\n\n\t\t\t\t\t\t\tkeyframe.pos = XAnimationInfo.keyFrames[ i ].pos;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( XAnimationInfo.keyFrames[ i ].rot && this.putFlags.putRot ) {\n\n\t\t\t\t\t\t\tkeyframe.rot = XAnimationInfo.keyFrames[ i ].rot;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( XAnimationInfo.keyFrames[ i ].scl && this.putFlags.putScl ) {\n\n\t\t\t\t\t\t\tkeyframe.scl = XAnimationInfo.keyFrames[ i ].scl;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( XAnimationInfo.keyFrames[ i ].matrix ) {\n\n\t\t\t\t\t\t\tkeyframe.matrix = XAnimationInfo.keyFrames[ i ].matrix;\n\t\t\t\t\t\t\tif ( this.putFlags.putPos ) {\n\n\t\t\t\t\t\t\t\tkeyframe.pos = new THREE.Vector3().setFromMatrixPosition( keyframe.matrix );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( this.putFlags.putRot ) {\n\n\t\t\t\t\t\t\t\tkeyframe.rot = new THREE.Quaternion().setFromRotationMatrix( keyframe.matrix );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( this.putFlags.putScl ) {\n\n\t\t\t\t\t\t\t\tkeyframe.scl = new THREE.Vector3().setFromMatrixScale( keyframe.matrix );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkeys.push( keyframe );\n\n\t\t\t\t\t}\n\t\t\t\t\treturn keys;\n\n\t\t\t\t}\n\t\t\t} ] );\n\t\t\treturn XAnimationObj;\n\n\t\t}();\n\n\t\tvar XKeyFrameInfo = function XKeyFrameInfo() {\n\n\t\t\tclassCallCheck( this, XKeyFrameInfo );\n\n\t\t\tthis.index = 0;\n\t\t\tthis.Frame = 0;\n\t\t\tthis.time = 0.0;\n\t\t\tthis.matrix = null;\n\n\t\t};\n\n\t\tvar XLoader = function () {\n\n\t\t\tfunction XLoader( manager ) {\n\n\t\t\t\tTHREE.Loader.call( this, manager );\n\n\t\t\t\tclassCallCheck( this, XLoader );\n\n\t\t\t\tthis.debug = false;\n\t\t\t\tthis.texloader = new THREE.TextureLoader( this.manager );\n\t\t\t\tthis.url = \"\";\n\t\t\t\tthis._putMatLength = 0;\n\t\t\t\tthis._nowMat = null;\n\t\t\t\tthis._nowFrameName = \"\";\n\t\t\t\tthis.frameHierarchie = [];\n\t\t\t\tthis.Hierarchies = {};\n\t\t\t\tthis.HieStack = [];\n\t\t\t\tthis._currentObject = {};\n\t\t\t\tthis._currentFrame = {};\n\t\t\t\tthis._data = null;\n\t\t\t\tthis.onLoad = null;\n\t\t\t\tthis.IsUvYReverse = true;\n\t\t\t\tthis.Meshes = [];\n\t\t\t\tthis.animations = [];\n\t\t\t\tthis.animTicksPerSecond = 30;\n\t\t\t\tthis._currentGeo = null;\n\t\t\t\tthis._currentAnime = null;\n\t\t\t\tthis._currentAnimeFrames = null;\n\n\t\t\t}\n\n\t\t\tcreateClass( XLoader, [ {\n\t\t\t\tkey: '_setArgOption',\n\t\t\t\tvalue: function _setArgOption( _arg ) {\n\n\t\t\t\t\tvar _start = arguments.length > 1 && arguments[ 1 ] !== undefined ? arguments[ 1 ] : 0;\n\n\t\t\t\t\tif ( ! _arg ) {\n\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\t\t\t\t\tfor ( var i = _start; i < _arg.length; i ++ ) {\n\n\t\t\t\t\t\tswitch ( i ) {\n\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tthis.url = _arg[ i ];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tthis.options = _arg[ i ];\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( this.options === undefined ) {\n\n\t\t\t\t\t\tthis.options = {};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'load',\n\t\t\t\tvalue: function load( _arg, onLoad, onProgress, onError ) {\n\n\t\t\t\t\tvar _this = this;\n\n\t\t\t\t\tthis._setArgOption( _arg );\n\t\t\t\t\tvar loader = new THREE.FileLoader( this.manager );\n\t\t\t\t\tloader.setPath( this.path );\n\t\t\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\t\t\tloader.load( this.url, function ( response ) {\n\n\t\t\t\t\t\t_this.parse( response, onLoad );\n\n\t\t\t\t\t}, onProgress, onError );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_readLine',\n\t\t\t\tvalue: function _readLine( line ) {\n\n\t\t\t\t\tvar readed = 0;\n\t\t\t\t\twhile ( true ) {\n\n\t\t\t\t\t\tvar find = - 1;\n\t\t\t\t\t\tfind = line.indexOf( '//', readed );\n\t\t\t\t\t\tif ( find === - 1 ) {\n\n\t\t\t\t\t\t\tfind = line.indexOf( '#', readed );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( find > - 1 && find < 2 ) {\n\n\t\t\t\t\t\t\tvar foundNewLine = - 1;\n\t\t\t\t\t\t\tfoundNewLine = line.indexOf( \"\\r\\n\", readed );\n\t\t\t\t\t\t\tif ( foundNewLine > 0 ) {\n\n\t\t\t\t\t\t\t\treaded = foundNewLine + 2;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tfoundNewLine = line.indexOf( \"\\r\", readed );\n\t\t\t\t\t\t\t\tif ( foundNewLine > 0 ) {\n\n\t\t\t\t\t\t\t\t\treaded = foundNewLine + 1;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\treaded = line.indexOf( \"\\n\", readed ) + 1;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn line.substr( readed );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_readLine',\n\t\t\t\tvalue: function _readLine( line ) {\n\n\t\t\t\t\tvar readed = 0;\n\t\t\t\t\twhile ( true ) {\n\n\t\t\t\t\t\tvar find = - 1;\n\t\t\t\t\t\tfind = line.indexOf( '//', readed );\n\t\t\t\t\t\tif ( find === - 1 ) {\n\n\t\t\t\t\t\t\tfind = line.indexOf( '#', readed );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( find > - 1 && find < 2 ) {\n\n\t\t\t\t\t\t\tvar foundNewLine = - 1;\n\t\t\t\t\t\t\tfoundNewLine = line.indexOf( \"\\r\\n\", readed );\n\t\t\t\t\t\t\tif ( foundNewLine > 0 ) {\n\n\t\t\t\t\t\t\t\treaded = foundNewLine + 2;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tfoundNewLine = line.indexOf( \"\\r\", readed );\n\t\t\t\t\t\t\t\tif ( foundNewLine > 0 ) {\n\n\t\t\t\t\t\t\t\t\treaded = foundNewLine + 1;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\treaded = line.indexOf( \"\\n\", readed ) + 1;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn line.substr( readed );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_isBinary',\n\t\t\t\tvalue: function _isBinary( binData ) {\n\n\t\t\t\t\tvar reader = new DataView( binData );\n\t\t\t\t\tvar face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n\t\t\t\t\tvar n_faces = reader.getUint32( 80, true );\n\t\t\t\t\tvar expect = 80 + 32 / 8 + n_faces * face_size;\n\t\t\t\t\tif ( expect === reader.byteLength ) {\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar fileLength = reader.byteLength;\n\t\t\t\t\tfor ( var index = 0; index < fileLength; index ++ ) {\n\n\t\t\t\t\t\tif ( reader.getUint8( index, false ) > 127 ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_ensureBinary',\n\t\t\t\tvalue: function _ensureBinary( buf ) {\n\n\t\t\t\t\tif ( typeof buf === \"string\" ) {\n\n\t\t\t\t\t\tvar array_buffer = new Uint8Array( buf.length );\n\t\t\t\t\t\tfor ( var i = 0; i < buf.length; i ++ ) {\n\n\t\t\t\t\t\t\tarray_buffer[ i ] = buf.charCodeAt( i ) & 0xff;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn array_buffer.buffer || array_buffer;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn buf;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_ensureString',\n\t\t\t\tvalue: function _ensureString( buf ) {\n\n\t\t\t\t\tif ( typeof buf !== \"string\" ) {\n\n\t\t\t\t\t\treturn THREE.LoaderUtils.decodeText( new Uint8Array( buf ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn buf;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'parse',\n\t\t\t\tvalue: function _parse( data, onLoad ) {\n\n\t\t\t\t\tvar binData = this._ensureBinary( data );\n\t\t\t\t\tthis._data = this._ensureString( data );\n\t\t\t\t\tthis.onLoad = onLoad;\n\t\t\t\t\treturn this._isBinary( binData ) ? this._parseBinary( binData ) : this._parseASCII();\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_parseBinary',\n\t\t\t\tvalue: function _parseBinary( data ) {\n\n\t\t\t\t\treturn this._parseASCII( THREE.LoaderUtils.decodeText( new Uint8Array( data ) ) );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_parseASCII',\n\t\t\t\tvalue: function _parseASCII() {\n\n\t\t\t\t\tvar path;\n\n\t\t\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\t\t\tpath = this.resourcePath;\n\n\t\t\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\t\t\tpath = this.path;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpath = THREE.LoaderUtils.extractUrlBase( this.url );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.texloader.setPath( path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\t\t\tvar endRead = 16;\n\t\t\t\t\tthis.Hierarchies.children = [];\n\t\t\t\t\tthis._hierarchieParse( this.Hierarchies, endRead );\n\t\t\t\t\tthis._changeRoot();\n\t\t\t\t\tthis._currentObject = this.Hierarchies.children.shift();\n\t\t\t\t\tthis._mainloop();\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_hierarchieParse',\n\t\t\t\tvalue: function _hierarchieParse( _parent, _end ) {\n\n\t\t\t\t\tvar endRead = _end;\n\t\t\t\t\twhile ( true ) {\n\n\t\t\t\t\t\tvar find1 = this._data.indexOf( '{', endRead ) + 1;\n\t\t\t\t\t\tvar findEnd = this._data.indexOf( '}', endRead );\n\t\t\t\t\t\tvar findNext = this._data.indexOf( '{', find1 ) + 1;\n\t\t\t\t\t\tif ( find1 > 0 && findEnd > find1 ) {\n\n\t\t\t\t\t\t\tvar _currentObject = {};\n\t\t\t\t\t\t\t_currentObject.children = [];\n\t\t\t\t\t\t\tvar nameData = this._readLine( this._data.substr( endRead, find1 - endRead - 1 ) ).trim();\n\t\t\t\t\t\t\tvar word = nameData.split( / /g );\n\t\t\t\t\t\t\tif ( word.length > 0 ) {\n\n\t\t\t\t\t\t\t\t_currentObject.type = word[ 0 ];\n\t\t\t\t\t\t\t\tif ( word.length >= 2 ) {\n\n\t\t\t\t\t\t\t\t\t_currentObject.name = word[ 1 ];\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t_currentObject.name = word[ 0 ] + this.Hierarchies.children.length;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_currentObject.name = nameData;\n\t\t\t\t\t\t\t\t_currentObject.type = \"\";\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( _currentObject.type === \"Animation\" ) {\n\n\t\t\t\t\t\t\t\t_currentObject.data = this._data.substr( findNext, findEnd - findNext ).trim();\n\t\t\t\t\t\t\t\tvar refs = this._hierarchieParse( _currentObject, findEnd + 1 );\n\t\t\t\t\t\t\t\tendRead = refs.end;\n\t\t\t\t\t\t\t\t_currentObject.children = refs.parent.children;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar DataEnder = this._data.lastIndexOf( ';', findNext > 0 ? Math.min( findNext, findEnd ) : findEnd );\n\t\t\t\t\t\t\t\t_currentObject.data = this._data.substr( find1, DataEnder - find1 ).trim();\n\t\t\t\t\t\t\t\tif ( findNext <= 0 || findEnd < findNext ) {\n\n\t\t\t\t\t\t\t\t\tendRead = findEnd + 1;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tvar nextStart = Math.max( DataEnder + 1, find1 );\n\t\t\t\t\t\t\t\t\tvar _refs = this._hierarchieParse( _currentObject, nextStart );\n\t\t\t\t\t\t\t\t\tendRead = _refs.end;\n\t\t\t\t\t\t\t\t\t_currentObject.children = _refs.parent.children;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_currentObject.parent = _parent;\n\t\t\t\t\t\t\tif ( _currentObject.type != \"template\" ) {\n\n\t\t\t\t\t\t\t\t_parent.children.push( _currentObject );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tendRead = find1 === - 1 ? this._data.length : findEnd + 1;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tparent: _parent,\n\t\t\t\t\t\tend: endRead\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_mainloop',\n\t\t\t\tvalue: function _mainloop() {\n\n\t\t\t\t\tvar _this2 = this;\n\n\t\t\t\t\tthis._mainProc();\n\t\t\t\t\tif ( this._currentObject.parent || this._currentObject.children.length > 0 || ! this._currentObject.worked ) {\n\n\t\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\t\t_this2._mainloop();\n\n\t\t\t\t\t\t}, 1 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\t\t_this2.onLoad( {\n\t\t\t\t\t\t\t\tmodels: _this2.Meshes,\n\t\t\t\t\t\t\t\tanimations: _this2.animations\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_mainProc',\n\t\t\t\tvalue: function _mainProc() {\n\n\t\t\t\t\tvar breakFlag = false;\n\t\t\t\t\twhile ( true ) {\n\n\t\t\t\t\t\tif ( ! this._currentObject.worked ) {\n\n\t\t\t\t\t\t\tswitch ( this._currentObject.type ) {\n\n\t\t\t\t\t\t\t\tcase \"template\":\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"AnimTicksPerSecond\":\n\t\t\t\t\t\t\t\t\tthis.animTicksPerSecond = parseInt( this._currentObject.data );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"Frame\":\n\t\t\t\t\t\t\t\t\tthis._setFrame();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"FrameTransformMatrix\":\n\t\t\t\t\t\t\t\t\tthis._setFrameTransformMatrix();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"Mesh\":\n\t\t\t\t\t\t\t\t\tthis._changeRoot();\n\t\t\t\t\t\t\t\t\tthis._currentGeo = {};\n\t\t\t\t\t\t\t\t\tthis._currentGeo.name = this._currentObject.name.trim();\n\t\t\t\t\t\t\t\t\tthis._currentGeo.parentName = this._getParentName( this._currentObject ).trim();\n\t\t\t\t\t\t\t\t\tthis._currentGeo.VertexSetedBoneCount = [];\n\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData = {\n\t\t\t\t\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\t\t\t\t\tuvs: [],\n\t\t\t\t\t\t\t\t\t\tskinIndices: [],\n\t\t\t\t\t\t\t\t\t\tskinWeights: [],\n\t\t\t\t\t\t\t\t\t\tindices: [],\n\t\t\t\t\t\t\t\t\t\tmaterialIndices: []\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tthis._currentGeo.Materials = [];\n\t\t\t\t\t\t\t\t\tthis._currentGeo.normalVectors = [];\n\t\t\t\t\t\t\t\t\tthis._currentGeo.BoneInfs = [];\n\t\t\t\t\t\t\t\t\tthis._currentGeo.baseFrame = this._currentFrame;\n\t\t\t\t\t\t\t\t\tthis._makeBoneFrom_CurrentFrame();\n\t\t\t\t\t\t\t\t\tthis._readVertexDatas();\n\t\t\t\t\t\t\t\t\tbreakFlag = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"MeshNormals\":\n\t\t\t\t\t\t\t\t\tthis._readVertexDatas();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"MeshTextureCoords\":\n\t\t\t\t\t\t\t\t\tthis._setMeshTextureCoords();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"VertexDuplicationIndices\":\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"MeshMaterialList\":\n\t\t\t\t\t\t\t\t\tthis._setMeshMaterialList();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"Material\":\n\t\t\t\t\t\t\t\t\tthis._setMaterial();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"SkinWeights\":\n\t\t\t\t\t\t\t\t\tthis._setSkinWeights();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"AnimationSet\":\n\t\t\t\t\t\t\t\t\tthis._changeRoot();\n\t\t\t\t\t\t\t\t\tthis._currentAnime = {};\n\t\t\t\t\t\t\t\t\tthis._currentAnime.name = this._currentObject.name.trim();\n\t\t\t\t\t\t\t\t\tthis._currentAnime.AnimeFrames = [];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"Animation\":\n\t\t\t\t\t\t\t\t\tif ( this._currentAnimeFrames ) {\n\n\t\t\t\t\t\t\t\t\t\tthis._currentAnime.AnimeFrames.push( this._currentAnimeFrames );\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._currentAnimeFrames = new XAnimationInfo();\n\t\t\t\t\t\t\t\t\tthis._currentAnimeFrames.boneName = this._currentObject.data.trim();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"AnimationKey\":\n\t\t\t\t\t\t\t\t\tthis._readAnimationKey();\n\t\t\t\t\t\t\t\t\tbreakFlag = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._currentObject.worked = true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( this._currentObject.children.length > 0 ) {\n\n\t\t\t\t\t\t\tthis._currentObject = this._currentObject.children.shift();\n\t\t\t\t\t\t\tif ( this.debug ) {\n\n\t\t\t\t\t\t\t\tconsole.log( 'processing ' + this._currentObject.name );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( breakFlag ) break;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( this._currentObject.worked ) {\n\n\t\t\t\t\t\t\t\tif ( this._currentObject.parent && ! this._currentObject.parent.parent ) {\n\n\t\t\t\t\t\t\t\t\tthis._changeRoot();\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( this._currentObject.parent ) {\n\n\t\t\t\t\t\t\t\tthis._currentObject = this._currentObject.parent;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tbreakFlag = true;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( breakFlag ) break;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_changeRoot',\n\t\t\t\tvalue: function _changeRoot() {\n\n\t\t\t\t\tif ( this._currentGeo != null && this._currentGeo.name ) {\n\n\t\t\t\t\t\tthis._makeOutputGeometry();\n\n\t\t\t\t\t}\n\t\t\t\t\tthis._currentGeo = {};\n\t\t\t\t\tif ( this._currentAnime != null && this._currentAnime.name ) {\n\n\t\t\t\t\t\tif ( this._currentAnimeFrames ) {\n\n\t\t\t\t\t\t\tthis._currentAnime.AnimeFrames.push( this._currentAnimeFrames );\n\t\t\t\t\t\t\tthis._currentAnimeFrames = null;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._makeOutputAnimation();\n\n\t\t\t\t\t}\n\t\t\t\t\tthis._currentAnime = {};\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_getParentName',\n\t\t\t\tvalue: function _getParentName( _obj ) {\n\n\t\t\t\t\tif ( _obj.parent ) {\n\n\t\t\t\t\t\tif ( _obj.parent.name ) {\n\n\t\t\t\t\t\t\treturn _obj.parent.name;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\treturn this._getParentName( _obj.parent );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn \"\";\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_setFrame',\n\t\t\t\tvalue: function _setFrame() {\n\n\t\t\t\t\tthis._nowFrameName = this._currentObject.name.trim();\n\t\t\t\t\tthis._currentFrame = {};\n\t\t\t\t\tthis._currentFrame.name = this._nowFrameName;\n\t\t\t\t\tthis._currentFrame.children = [];\n\t\t\t\t\tif ( this._currentObject.parent && this._currentObject.parent.name ) {\n\n\t\t\t\t\t\tthis._currentFrame.parentName = this._currentObject.parent.name;\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.frameHierarchie.push( this._nowFrameName );\n\t\t\t\t\tthis.HieStack[ this._nowFrameName ] = this._currentFrame;\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_setFrameTransformMatrix',\n\t\t\t\tvalue: function _setFrameTransformMatrix() {\n\n\t\t\t\t\tthis._currentFrame.FrameTransformMatrix = new THREE.Matrix4();\n\t\t\t\t\tvar data = this._currentObject.data.split( \",\" );\n\t\t\t\t\tthis._ParseMatrixData( this._currentFrame.FrameTransformMatrix, data );\n\t\t\t\t\tthis._makeBoneFrom_CurrentFrame();\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_makeBoneFrom_CurrentFrame',\n\t\t\t\tvalue: function _makeBoneFrom_CurrentFrame() {\n\n\t\t\t\t\tif ( ! this._currentFrame.FrameTransformMatrix ) {\n\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar b = new THREE.Bone();\n\t\t\t\t\tb.name = this._currentFrame.name;\n\t\t\t\t\tb.applyMatrix4( this._currentFrame.FrameTransformMatrix );\n\t\t\t\t\tb.matrixWorld = b.matrix;\n\t\t\t\t\tb.FrameTransformMatrix = this._currentFrame.FrameTransformMatrix;\n\t\t\t\t\tthis._currentFrame.putBone = b;\n\t\t\t\t\tif ( this._currentFrame.parentName ) {\n\n\t\t\t\t\t\tfor ( var frame in this.HieStack ) {\n\n\t\t\t\t\t\t\tif ( this.HieStack[ frame ].name === this._currentFrame.parentName ) {\n\n\t\t\t\t\t\t\t\tthis.HieStack[ frame ].putBone.add( this._currentFrame.putBone );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_readVertexDatas',\n\t\t\t\tvalue: function _readVertexDatas() {\n\n\t\t\t\t\tvar endRead = 0;\n\t\t\t\t\tvar mode = 0;\n\t\t\t\t\tvar mode_local = 0;\n\t\t\t\t\tvar maxLength = 0;\n\t\t\t\t\twhile ( true ) {\n\n\t\t\t\t\t\tvar changeMode = false;\n\t\t\t\t\t\tif ( mode_local === 0 ) {\n\n\t\t\t\t\t\t\tvar refO = this._readInt1( endRead );\n\t\t\t\t\t\t\tendRead = refO.endRead;\n\t\t\t\t\t\t\tmode_local = 1;\n\t\t\t\t\t\t\tmaxLength = this._currentObject.data.indexOf( ';;', endRead ) + 1;\n\t\t\t\t\t\t\tif ( maxLength <= 0 ) {\n\n\t\t\t\t\t\t\t\tmaxLength = this._currentObject.data.length;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar find = 0;\n\t\t\t\t\t\t\tswitch ( mode ) {\n\n\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\tfind = this._currentObject.data.indexOf( ',', endRead ) + 1;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tfind = this._currentObject.data.indexOf( ';,', endRead ) + 1;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( find === 0 || find > maxLength ) {\n\n\t\t\t\t\t\t\t\tfind = maxLength;\n\t\t\t\t\t\t\t\tmode_local = 0;\n\t\t\t\t\t\t\t\tchangeMode = true;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tswitch ( this._currentObject.type ) {\n\n\t\t\t\t\t\t\t\tcase \"Mesh\":\n\t\t\t\t\t\t\t\t\tswitch ( mode ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\t\t\tthis._readVertex1( this._currentObject.data.substr( endRead, find - endRead ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\t\t\tthis._readFace1( this._currentObject.data.substr( endRead, find - endRead ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"MeshNormals\":\n\t\t\t\t\t\t\t\t\tswitch ( mode ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\t\t\tthis._readNormalVector1( this._currentObject.data.substr( endRead, find - endRead ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tendRead = find + 1;\n\t\t\t\t\t\t\tif ( changeMode ) {\n\n\t\t\t\t\t\t\t\tmode ++;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( endRead >= this._currentObject.data.length ) {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_readInt1',\n\t\t\t\tvalue: function _readInt1( start ) {\n\n\t\t\t\t\tvar find = this._currentObject.data.indexOf( ';', start );\n\t\t\t\t\treturn {\n\t\t\t\t\t\trefI: parseInt( this._currentObject.data.substr( start, find - start ) ),\n\t\t\t\t\t\tendRead: find + 1\n\t\t\t\t\t};\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_readVertex1',\n\t\t\t\tvalue: function _readVertex1( line ) {\n\n\t\t\t\t\tvar data = this._readLine( line.trim() ).substr( 0, line.length - 2 ).split( \";\" );\n\t\t\t\t\tthis._currentGeo.GeometryData.vertices.push( parseFloat( data[ 0 ] ), parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ) );\n\t\t\t\t\tthis._currentGeo.GeometryData.skinIndices.push( 0, 0, 0, 0 );\n\t\t\t\t\tthis._currentGeo.GeometryData.skinWeights.push( 1, 0, 0, 0 );\n\t\t\t\t\tthis._currentGeo.VertexSetedBoneCount.push( 0 );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_readFace1',\n\t\t\t\tvalue: function _readFace1( line ) {\n\n\t\t\t\t\tvar data = this._readLine( line.trim() ).substr( 2, line.length - 4 ).split( \",\" );\n\t\t\t\t\tthis._currentGeo.GeometryData.indices.push( parseInt( data[ 0 ], 10 ), parseInt( data[ 1 ], 10 ), parseInt( data[ 2 ], 10 ) );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_readNormalVector1',\n\t\t\t\tvalue: function _readNormalVector1( line ) {\n\n\t\t\t\t\tvar data = this._readLine( line.trim() ).substr( 0, line.length - 2 ).split( \";\" );\n\t\t\t\t\tthis._currentGeo.GeometryData.normals.push( parseFloat( data[ 0 ] ), parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ) );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_buildGeometry',\n\t\t\t\tvalue: function _buildGeometry() {\n\n\t\t\t\t\tvar bufferGeometry = new THREE.BufferGeometry();\n\t\t\t\t\tvar position = [];\n\t\t\t\t\tvar normals = [];\n\t\t\t\t\tvar uvs = [];\n\t\t\t\t\tvar skinIndices = [];\n\t\t\t\t\tvar skinWeights = [];\n\n\t\t\t\t\t//\n\n\t\t\t\t\tvar data = this._currentGeo.GeometryData;\n\n\t\t\t\t\tfor ( var i = 0, l = data.indices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar stride2 = data.indices[ i ] * 2;\n\t\t\t\t\t\tvar stride3 = data.indices[ i ] * 3;\n\t\t\t\t\t\tvar stride4 = data.indices[ i ] * 4;\n\n\t\t\t\t\t\tposition.push( data.vertices[ stride3 ], data.vertices[ stride3 + 1 ], data.vertices[ stride3 + 2 ] );\n\t\t\t\t\t\tnormals.push( data.normals[ stride3 ], data.normals[ stride3 + 1 ], data.normals[ stride3 + 2 ] );\n\t\t\t\t\t\tskinIndices.push( data.skinIndices[ stride4 ], data.skinIndices[ stride4 + 1 ], data.skinIndices[ stride4 + 2 ], data.skinIndices[ stride4 + 3 ] );\n\t\t\t\t\t\tskinWeights.push( data.skinWeights[ stride4 ], data.skinWeights[ stride4 + 1 ], data.skinWeights[ stride4 + 2 ], data.skinWeights[ stride4 + 3 ] );\n\t\t\t\t\t\tuvs.push( data.uvs[ stride2 ], data.uvs[ stride2 + 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//\n\n\t\t\t\t\tbufferGeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( position, 3 ) );\n\t\t\t\t\tbufferGeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\n\t\t\t\t\tbufferGeometry.setAttribute( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\n\t\t\t\t\tbufferGeometry.setAttribute( 'skinIndex', new THREE.Uint16BufferAttribute( skinIndices, 4 ) );\n\t\t\t\t\tbufferGeometry.setAttribute( 'skinWeight', new THREE.Float32BufferAttribute( skinWeights, 4 ) );\n\n\t\t\t\t\tthis._computeGroups( bufferGeometry, data.materialIndices );\n\n\t\t\t\t\treturn bufferGeometry;\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_computeGroups',\n\t\t\t\tvalue: function _computeGroups( bufferGeometry, materialIndices ) {\n\n\t\t\t\t\tvar group;\n\t\t\t\t\tvar groups = [];\n\t\t\t\t\tvar materialIndex = undefined;\n\n\t\t\t\t\tfor ( var i = 0; i < materialIndices.length; i ++ ) {\n\n\t\t\t\t\t\tvar currentMaterialIndex = materialIndices[ i ];\n\n\t\t\t\t\t\tif ( currentMaterialIndex !== materialIndex ) {\n\n\t\t\t\t\t\t\tmaterialIndex = currentMaterialIndex;\n\n\t\t\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgroup = {\n\t\t\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbufferGeometry.groups = groups;\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_setMeshTextureCoords',\n\t\t\t\tvalue: function _setMeshTextureCoords() {\n\n\t\t\t\t\tvar endRead = 0;\n\t\t\t\t\tvar mode = 0;\n\t\t\t\t\tvar mode_local = 0;\n\t\t\t\t\twhile ( true ) {\n\n\t\t\t\t\t\tswitch ( mode ) {\n\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tif ( mode_local === 0 ) {\n\n\t\t\t\t\t\t\t\t\tvar refO = this._readInt1( 0 );\n\t\t\t\t\t\t\t\t\tendRead = refO.endRead;\n\t\t\t\t\t\t\t\t\tmode_local = 1;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tvar find = this._currentObject.data.indexOf( ',', endRead ) + 1;\n\t\t\t\t\t\t\t\t\tif ( find === 0 ) {\n\n\t\t\t\t\t\t\t\t\t\tfind = this._currentObject.data.length;\n\t\t\t\t\t\t\t\t\t\tmode = 2;\n\t\t\t\t\t\t\t\t\t\tmode_local = 0;\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar line = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\t\t\t\t\tvar data = this._readLine( line.trim() ).split( \";\" );\n\t\t\t\t\t\t\t\t\tif ( this.IsUvYReverse ) {\n\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.uvs.push( parseFloat( data[ 0 ] ), 1 - parseFloat( data[ 1 ] ) );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.uvs.push( parseFloat( data[ 0 ] ), parseFloat( data[ 1 ] ) );\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tendRead = find + 1;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( endRead >= this._currentObject.data.length ) {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_setMeshMaterialList',\n\t\t\t\tvalue: function _setMeshMaterialList() {\n\n\t\t\t\t\tvar endRead = 0;\n\t\t\t\t\tvar mode = 0;\n\t\t\t\t\tvar mode_local = 0;\n\t\t\t\t\twhile ( true ) {\n\n\t\t\t\t\t\tif ( mode_local < 2 ) {\n\n\t\t\t\t\t\t\tvar refO = this._readInt1( endRead );\n\t\t\t\t\t\t\tendRead = refO.endRead;\n\t\t\t\t\t\t\tmode_local ++;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar find = this._currentObject.data.indexOf( ';', endRead );\n\t\t\t\t\t\t\tif ( find === - 1 ) {\n\n\t\t\t\t\t\t\t\tfind = this._currentObject.data.length;\n\t\t\t\t\t\t\t\tmode = 3;\n\t\t\t\t\t\t\t\tmode_local = 0;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar line = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\t\t\tvar data = this._readLine( line.trim() ).split( \",\" );\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.materialIndices[ i ] = parseInt( data[ i ] );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tendRead = this._currentObject.data.length;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( endRead >= this._currentObject.data.length || mode >= 3 ) {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_setMaterial',\n\t\t\t\tvalue: function _setMaterial() {\n\n\t\t\t\t\tvar _nowMat = new THREE.MeshPhongMaterial( {\n\t\t\t\t\t\tcolor: Math.random() * 0xffffff\n\t\t\t\t\t} );\n\t\t\t\t\t_nowMat.side = THREE.FrontSide;\n\t\t\t\t\t_nowMat.name = this._currentObject.name;\n\t\t\t\t\tvar endRead = 0;\n\t\t\t\t\tvar find = this._currentObject.data.indexOf( ';;', endRead );\n\t\t\t\t\tvar line = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\tvar data = this._readLine( line.trim() ).split( \";\" );\n\t\t\t\t\t_nowMat.color.r = parseFloat( data[ 0 ] );\n\t\t\t\t\t_nowMat.color.g = parseFloat( data[ 1 ] );\n\t\t\t\t\t_nowMat.color.b = parseFloat( data[ 2 ] );\n\t\t\t\t\tendRead = find + 2;\n\t\t\t\t\tfind = this._currentObject.data.indexOf( ';', endRead );\n\t\t\t\t\tline = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\t_nowMat.shininess = parseFloat( this._readLine( line ) );\n\t\t\t\t\tendRead = find + 1;\n\t\t\t\t\tfind = this._currentObject.data.indexOf( ';;', endRead );\n\t\t\t\t\tline = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\tvar data2 = this._readLine( line.trim() ).split( \";\" );\n\t\t\t\t\t_nowMat.specular.r = parseFloat( data2[ 0 ] );\n\t\t\t\t\t_nowMat.specular.g = parseFloat( data2[ 1 ] );\n\t\t\t\t\t_nowMat.specular.b = parseFloat( data2[ 2 ] );\n\t\t\t\t\tendRead = find + 2;\n\t\t\t\t\tfind = this._currentObject.data.indexOf( ';;', endRead );\n\t\t\t\t\tif ( find === - 1 ) {\n\n\t\t\t\t\t\tfind = this._currentObject.data.length;\n\n\t\t\t\t\t}\n\t\t\t\t\tline = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\tvar data3 = this._readLine( line.trim() ).split( \";\" );\n\t\t\t\t\t_nowMat.emissive.r = parseFloat( data3[ 0 ] );\n\t\t\t\t\t_nowMat.emissive.g = parseFloat( data3[ 1 ] );\n\t\t\t\t\t_nowMat.emissive.b = parseFloat( data3[ 2 ] );\n\t\t\t\t\tvar localObject = null;\n\t\t\t\t\twhile ( true ) {\n\n\t\t\t\t\t\tif ( this._currentObject.children.length > 0 ) {\n\n\t\t\t\t\t\t\tlocalObject = this._currentObject.children.shift();\n\t\t\t\t\t\t\tif ( this.debug ) {\n\n\t\t\t\t\t\t\t\tconsole.log( 'processing ' + localObject.name );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar fileName = localObject.data.substr( 1, localObject.data.length - 2 );\n\t\t\t\t\t\t\tswitch ( localObject.type ) {\n\n\t\t\t\t\t\t\t\tcase \"TextureFilename\":\n\t\t\t\t\t\t\t\t\t_nowMat.map = this.texloader.load( fileName );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"BumpMapFilename\":\n\t\t\t\t\t\t\t\t\t_nowMat.bumpMap = this.texloader.load( fileName );\n\t\t\t\t\t\t\t\t\t_nowMat.bumpScale = 0.05;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"NormalMapFilename\":\n\t\t\t\t\t\t\t\t\t_nowMat.normalMap = this.texloader.load( fileName );\n\t\t\t\t\t\t\t\t\t_nowMat.normalScale = new THREE.Vector2( 2, 2 );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"EmissiveMapFilename\":\n\t\t\t\t\t\t\t\t\t_nowMat.emissiveMap = this.texloader.load( fileName );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"LightMapFilename\":\n\t\t\t\t\t\t\t\t\t_nowMat.lightMap = this.texloader.load( fileName );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tthis._currentGeo.Materials.push( _nowMat );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_setSkinWeights',\n\t\t\t\tvalue: function _setSkinWeights() {\n\n\t\t\t\t\tvar boneInf = new XboneInf();\n\t\t\t\t\tvar endRead = 0;\n\t\t\t\t\tvar find = this._currentObject.data.indexOf( ';', endRead );\n\t\t\t\t\tvar line = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\tendRead = find + 1;\n\t\t\t\t\tboneInf.boneName = line.substr( 1, line.length - 2 );\n\t\t\t\t\tboneInf.BoneIndex = this._currentGeo.BoneInfs.length;\n\t\t\t\t\tfind = this._currentObject.data.indexOf( ';', endRead );\n\t\t\t\t\tendRead = find + 1;\n\t\t\t\t\tfind = this._currentObject.data.indexOf( ';', endRead );\n\t\t\t\t\tline = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\tvar data = this._readLine( line.trim() ).split( \",\" );\n\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\tboneInf.Indeces.push( parseInt( data[ i ] ) );\n\n\t\t\t\t\t}\n\t\t\t\t\tendRead = find + 1;\n\t\t\t\t\tfind = this._currentObject.data.indexOf( ';', endRead );\n\t\t\t\t\tline = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\tvar data2 = this._readLine( line.trim() ).split( \",\" );\n\t\t\t\t\tfor ( var _i = 0; _i < data2.length; _i ++ ) {\n\n\t\t\t\t\t\tboneInf.Weights.push( parseFloat( data2[ _i ] ) );\n\n\t\t\t\t\t}\n\t\t\t\t\tendRead = find + 1;\n\t\t\t\t\tfind = this._currentObject.data.indexOf( ';', endRead );\n\t\t\t\t\tif ( find <= 0 ) {\n\n\t\t\t\t\t\tfind = this._currentObject.data.length;\n\n\t\t\t\t\t}\n\t\t\t\t\tline = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\tvar data3 = this._readLine( line.trim() ).split( \",\" );\n\t\t\t\t\tboneInf.OffsetMatrix = new THREE.Matrix4();\n\t\t\t\t\tthis._ParseMatrixData( boneInf.OffsetMatrix, data3 );\n\t\t\t\t\tthis._currentGeo.BoneInfs.push( boneInf );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_makePutBoneList',\n\t\t\t\tvalue: function _makePutBoneList( _RootName, _bones ) {\n\n\t\t\t\t\tvar putting = false;\n\t\t\t\t\tfor ( var frame in this.HieStack ) {\n\n\t\t\t\t\t\tif ( this.HieStack[ frame ].name === _RootName || putting ) {\n\n\t\t\t\t\t\t\tputting = true;\n\t\t\t\t\t\t\tvar b = new THREE.Bone();\n\t\t\t\t\t\t\tb.name = this.HieStack[ frame ].name;\n\t\t\t\t\t\t\tb.applyMatrix4( this.HieStack[ frame ].FrameTransformMatrix );\n\t\t\t\t\t\t\tb.matrixWorld = b.matrix;\n\t\t\t\t\t\t\tb.FrameTransformMatrix = this.HieStack[ frame ].FrameTransformMatrix;\n\t\t\t\t\t\t\tb.pos = new THREE.Vector3().setFromMatrixPosition( b.FrameTransformMatrix ).toArray();\n\t\t\t\t\t\t\tb.rotq = new THREE.Quaternion().setFromRotationMatrix( b.FrameTransformMatrix ).toArray();\n\t\t\t\t\t\t\tb.scl = new THREE.Vector3().setFromMatrixScale( b.FrameTransformMatrix ).toArray();\n\t\t\t\t\t\t\tif ( this.HieStack[ frame ].parentName && this.HieStack[ frame ].parentName.length > 0 ) {\n\n\t\t\t\t\t\t\t\tfor ( var i = 0; i < _bones.length; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tif ( this.HieStack[ frame ].parentName === _bones[ i ].name ) {\n\n\t\t\t\t\t\t\t\t\t\t_bones[ i ].add( b );\n\t\t\t\t\t\t\t\t\t\tb.parent = i;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_bones.push( b );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_makeOutputGeometry',\n\t\t\t\tvalue: function _makeOutputGeometry() {\n\n\t\t\t\t\tvar mesh = null;\n\t\t\t\t\tif ( this._currentGeo.BoneInfs.length > 0 ) {\n\n\t\t\t\t\t\tvar putBones = [];\n\t\t\t\t\t\tthis._makePutBoneList( this._currentGeo.baseFrame.parentName, putBones );\n\t\t\t\t\t\tfor ( var bi = 0; bi < this._currentGeo.BoneInfs.length; bi ++ ) {\n\n\t\t\t\t\t\t\tvar boneIndex = 0;\n\t\t\t\t\t\t\tfor ( var bb = 0; bb < putBones.length; bb ++ ) {\n\n\t\t\t\t\t\t\t\tif ( putBones[ bb ].name === this._currentGeo.BoneInfs[ bi ].boneName ) {\n\n\t\t\t\t\t\t\t\t\tboneIndex = bb;\n\t\t\t\t\t\t\t\t\tputBones[ bb ].OffsetMatrix = new THREE.Matrix4();\n\t\t\t\t\t\t\t\t\tputBones[ bb ].OffsetMatrix.copy( this._currentGeo.BoneInfs[ bi ].OffsetMatrix );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor ( var vi = 0; vi < this._currentGeo.BoneInfs[ bi ].Indeces.length; vi ++ ) {\n\n\t\t\t\t\t\t\t\tvar nowVertexID = this._currentGeo.BoneInfs[ bi ].Indeces[ vi ];\n\t\t\t\t\t\t\t\tvar nowVal = this._currentGeo.BoneInfs[ bi ].Weights[ vi ];\n\n\t\t\t\t\t\t\t\tvar stride = nowVertexID * 4;\n\n\t\t\t\t\t\t\t\tswitch ( this._currentGeo.VertexSetedBoneCount[ nowVertexID ] ) {\n\n\t\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.skinIndices[ stride ] = boneIndex;\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.skinWeights[ stride ] = nowVal;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.skinIndices[ stride + 1 ] = boneIndex;\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.skinWeights[ stride + 1 ] = nowVal;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.skinIndices[ stride + 2 ] = boneIndex;\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.skinWeights[ stride + 2 ] = nowVal;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.skinIndices[ stride + 3 ] = boneIndex;\n\t\t\t\t\t\t\t\t\t\tthis._currentGeo.GeometryData.skinWeights[ stride + 3 ] = nowVal;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._currentGeo.VertexSetedBoneCount[ nowVertexID ] ++;\n\t\t\t\t\t\t\t\tif ( this._currentGeo.VertexSetedBoneCount[ nowVertexID ] > 4 ) {\n\n\t\t\t\t\t\t\t\t\tconsole.log( 'warn! over 4 bone weight! :' + nowVertexID );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor ( var sk = 0; sk < this._currentGeo.Materials.length; sk ++ ) {\n\n\t\t\t\t\t\t\tthis._currentGeo.Materials[ sk ].skinning = true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar offsetList = [];\n\t\t\t\t\t\tfor ( var _bi = 0; _bi < putBones.length; _bi ++ ) {\n\n\t\t\t\t\t\t\tif ( putBones[ _bi ].OffsetMatrix ) {\n\n\t\t\t\t\t\t\t\toffsetList.push( putBones[ _bi ].OffsetMatrix );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\toffsetList.push( new THREE.Matrix4() );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar bufferGeometry = this._buildGeometry();\n\t\t\t\t\t\tmesh = new THREE.SkinnedMesh( bufferGeometry, this._currentGeo.Materials.length === 1 ? this._currentGeo.Materials[ 0 ] : this._currentGeo.Materials );\n\n\t\t\t\t\t\tthis._initSkeleton( mesh, putBones, offsetList );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar _bufferGeometry = this._buildGeometry();\n\t\t\t\t\t\tmesh = new THREE.Mesh( _bufferGeometry, this._currentGeo.Materials.length === 1 ? this._currentGeo.Materials[ 0 ] : this._currentGeo.Materials );\n\n\t\t\t\t\t}\n\t\t\t\t\tmesh.name = this._currentGeo.name;\n\t\t\t\t\tvar worldBaseMx = new THREE.Matrix4();\n\t\t\t\t\tvar currentMxFrame = this._currentGeo.baseFrame.putBone;\n\t\t\t\t\tif ( currentMxFrame && currentMxFrame.parent ) {\n\n\t\t\t\t\t\twhile ( true ) {\n\n\t\t\t\t\t\t\tcurrentMxFrame = currentMxFrame.parent;\n\t\t\t\t\t\t\tif ( currentMxFrame ) {\n\n\t\t\t\t\t\t\t\tworldBaseMx.multiply( currentMxFrame.FrameTransformMatrix );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmesh.applyMatrix4( worldBaseMx );\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.Meshes.push( mesh );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_initSkeleton',\n\t\t\t\tvalue: function _initSkeleton( mesh, boneList, boneInverses ) {\n\n\t\t\t\t\tvar bones = [], bone, gbone;\n\t\t\t\t\tvar i, il;\n\n\t\t\t\t\tfor ( i = 0, il = boneList.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tgbone = boneList[ i ];\n\n\t\t\t\t\t\tbone = new THREE.Bone();\n\t\t\t\t\t\tbones.push( bone );\n\n\t\t\t\t\t\tbone.name = gbone.name;\n\t\t\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0, il = boneList.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tgbone = boneList[ i ];\n\n\t\t\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh.add( bones[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.updateMatrixWorld( true );\n\n\t\t\t\t\tvar skeleton = new THREE.Skeleton( bones, boneInverses );\n\t\t\t\t\tmesh.bind( skeleton, mesh.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t}, {\n\t\t\t\tkey: '_readAnimationKey',\n\t\t\t\tvalue: function _readAnimationKey() {\n\n\t\t\t\t\tvar endRead = 0;\n\t\t\t\t\tvar find = this._currentObject.data.indexOf( ';', endRead );\n\t\t\t\t\tvar line = this._currentObject.data.substr( endRead, find - endRead );\n\t\t\t\t\tendRead = find + 1;\n\t\t\t\t\tvar nowKeyType = parseInt( this._readLine( line ) );\n\t\t\t\t\tfind = this._currentObject.data.indexOf( ';', endRead );\n\t\t\t\t\tendRead = find + 1;\n\t\t\t\t\tline = this._currentObject.data.substr( endRead );\n\t\t\t\t\tvar data = this._readLine( line.trim() ).split( \";;,\" );\n\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\tvar data2 = data[ i ].split( \";\" );\n\t\t\t\t\t\tvar keyInfo = new XKeyFrameInfo();\n\t\t\t\t\t\tkeyInfo.type = nowKeyType;\n\t\t\t\t\t\tkeyInfo.Frame = parseInt( data2[ 0 ] );\n\t\t\t\t\t\tkeyInfo.index = this._currentAnimeFrames.keyFrames.length;\n\t\t\t\t\t\tkeyInfo.time = keyInfo.Frame;\n\t\t\t\t\t\tif ( nowKeyType != 4 ) {\n\n\t\t\t\t\t\t\tvar frameFound = false;\n\t\t\t\t\t\t\tfor ( var mm = 0; mm < this._currentAnimeFrames.keyFrames.length; mm ++ ) {\n\n\t\t\t\t\t\t\t\tif ( this._currentAnimeFrames.keyFrames[ mm ].Frame === keyInfo.Frame ) {\n\n\t\t\t\t\t\t\t\t\tkeyInfo = this._currentAnimeFrames.keyFrames[ mm ];\n\t\t\t\t\t\t\t\t\tframeFound = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar frameValue = data2[ 2 ].split( \",\" );\n\t\t\t\t\t\t\tswitch ( nowKeyType ) {\n\n\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\tkeyInfo.rot = new THREE.Quaternion( parseFloat( frameValue[ 1 ] ), parseFloat( frameValue[ 2 ] ), parseFloat( frameValue[ 3 ] ), parseFloat( frameValue[ 0 ] ) * - 1 );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tkeyInfo.scl = new THREE.Vector3( parseFloat( frameValue[ 0 ] ), parseFloat( frameValue[ 1 ] ), parseFloat( frameValue[ 2 ] ) );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tkeyInfo.pos = new THREE.Vector3( parseFloat( frameValue[ 0 ] ), parseFloat( frameValue[ 1 ] ), parseFloat( frameValue[ 2 ] ) );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( ! frameFound ) {\n\n\t\t\t\t\t\t\t\tthis._currentAnimeFrames.keyFrames.push( keyInfo );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tkeyInfo.matrix = new THREE.Matrix4();\n\t\t\t\t\t\t\tthis._ParseMatrixData( keyInfo.matrix, data2[ 2 ].split( \",\" ) );\n\t\t\t\t\t\t\tthis._currentAnimeFrames.keyFrames.push( keyInfo );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_makeOutputAnimation',\n\t\t\t\tvalue: function _makeOutputAnimation() {\n\n\t\t\t\t\tvar animationObj = new XAnimationObj( this.options );\n\t\t\t\t\tanimationObj.fps = this.animTicksPerSecond;\n\t\t\t\t\tanimationObj.name = this._currentAnime.name;\n\t\t\t\t\tanimationObj.make( this._currentAnime.AnimeFrames );\n\t\t\t\t\tthis.animations.push( animationObj );\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'assignAnimation',\n\t\t\t\tvalue: function assignAnimation( _model, _animation ) {\n\n\t\t\t\t\tvar model = _model;\n\t\t\t\t\tvar animation = _animation;\n\t\t\t\t\tif ( ! model ) {\n\n\t\t\t\t\t\tmodel = this.Meshes[ 0 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ! animation ) {\n\n\t\t\t\t\t\tanimation = this.animations[ 0 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ! model || ! animation ) {\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar put = {};\n\t\t\t\t\tput.fps = animation.fps;\n\t\t\t\t\tput.name = animation.name;\n\t\t\t\t\tput.length = animation.length;\n\t\t\t\t\tput.hierarchy = [];\n\t\t\t\t\tfor ( var b = 0; b < model.skeleton.bones.length; b ++ ) {\n\n\t\t\t\t\t\tvar findAnimation = false;\n\t\t\t\t\t\tfor ( var i = 0; i < animation.hierarchy.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( model.skeleton.bones[ b ].name === animation.hierarchy[ i ].name ) {\n\n\t\t\t\t\t\t\t\tfindAnimation = true;\n\t\t\t\t\t\t\t\tvar c_key = animation.hierarchy[ i ].copy();\n\t\t\t\t\t\t\t\tc_key.parent = - 1;\n\t\t\t\t\t\t\t\tif ( model.skeleton.bones[ b ].parent && model.skeleton.bones[ b ].parent.type === \"Bone\" ) {\n\n\t\t\t\t\t\t\t\t\tfor ( var bb = 0; bb < put.hierarchy.length; bb ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( put.hierarchy[ bb ].name === model.skeleton.bones[ b ].parent.name ) {\n\n\t\t\t\t\t\t\t\t\t\t\tc_key.parent = bb;\n\t\t\t\t\t\t\t\t\t\t\tc_key.parentName = model.skeleton.bones[ b ].parent.name;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tput.hierarchy.push( c_key );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ! findAnimation ) {\n\n\t\t\t\t\t\t\tvar _c_key = animation.hierarchy[ 0 ].copy();\n\t\t\t\t\t\t\t_c_key.name = model.skeleton.bones[ b ].name;\n\t\t\t\t\t\t\t_c_key.parent = - 1;\n\t\t\t\t\t\t\tfor ( var k = 0; k < _c_key.keys.length; k ++ ) {\n\n\t\t\t\t\t\t\t\tif ( _c_key.keys[ k ].pos ) {\n\n\t\t\t\t\t\t\t\t\t_c_key.keys[ k ].pos.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( _c_key.keys[ k ].scl ) {\n\n\t\t\t\t\t\t\t\t\t_c_key.keys[ k ].scl.set( 1, 1, 1 );\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( _c_key.keys[ k ].rot ) {\n\n\t\t\t\t\t\t\t\t\t_c_key.keys[ k ].rot.set( 0, 0, 0, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tput.hierarchy.push( _c_key );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ! model.geometry.animations ) {\n\n\t\t\t\t\t\tmodel.geometry.animations = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.geometry.animations.push( THREE.AnimationClip.parseAnimation( put, model.skeleton.bones ) );\n\t\t\t\t\tif ( ! model.animationMixer ) {\n\n\t\t\t\t\t\tmodel.animationMixer = new THREE.AnimationMixer( model );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn put;\n\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_ParseMatrixData',\n\t\t\t\tvalue: function _ParseMatrixData( targetMatrix, data ) {\n\n\t\t\t\t\ttargetMatrix.set( parseFloat( data[ 0 ] ), parseFloat( data[ 4 ] ), parseFloat( data[ 8 ] ), parseFloat( data[ 12 ] ), parseFloat( data[ 1 ] ), parseFloat( data[ 5 ] ), parseFloat( data[ 9 ] ), parseFloat( data[ 13 ] ), parseFloat( data[ 2 ] ), parseFloat( data[ 6 ] ), parseFloat( data[ 10 ] ), parseFloat( data[ 14 ] ), parseFloat( data[ 3 ] ), parseFloat( data[ 7 ] ), parseFloat( data[ 11 ] ), parseFloat( data[ 15 ] ) );\n\n\t\t\t\t}\n\t\t\t} ] );\n\t\t\treturn XLoader;\n\n\t\t}();\n\n\t\treturn XLoader;\n\n\t} )();\n\t\n\treturn THREE.XLoader;\n});\n"]}