{"version":3,"sources":["loaders/GLTFLoader.js"],"names":["define","THREE","GLTFLoader","manager","Loader","call","this","dracoLoader","ddsLoader","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","LoaderUtils","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","FileLoader","setPath","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","name","body","headerView","DataView","BINARY_EXTENSION_HEADER_LENGTH","header","magic","slice","version","getUint32","length","Error","chunkView","chunkIndex","byteLength","chunkLength","chunkType","BINARY_EXTENSION_CHUNK_TYPES","JSON","contentArray","BIN","byteOffset","json","undefined","asset","extensionsUsed","i","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","Color","fromArray","range","type","DirectionalLight","target","position","set","add","PointLight","distance","SpotLight","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","MeshPhysicalMaterial","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","scale","clearcoatNormalScale","Vector2","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","get","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","repeat","texCoord","needsUpdate","copy","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","image/png","RGBAFormat","image/jpeg","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","object","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","keys","sort","options","cache","objects","key","remove","removeAll","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","setAttribute","gltfAttributeName","indices","setIndex","box","Box3","min","max","Vector3","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","TriangleFanDrawMode","getX","newGeometry","markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","y","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","DoubleSide","alphaMode","transparent","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","BufferGeometry","meshIndex","depthTest","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","LineSegments","Line","LineLoop","Points","group","Group","cameraIndex","camera","cameraDef","PerspectiveCamera","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","matrixAutoUpdate","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","sanitizeNodeName","matrix","Matrix4","applyMatrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","matrixWorld","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GAitGV,OAxsGAA,EAAMC,WAAa,WAElB,SAASA,EAAYC,GAEpBF,EAAMG,OAAOC,KAAMC,KAAMH,GAEzBG,KAAKC,YAAc,KACnBD,KAAKE,UAAY,KAIlBN,EAAWO,UAAYC,OAAOC,OAAQD,OAAOE,OAAQX,EAAMG,OAAOK,YAEjEI,YAAaX,EAEbY,KAAM,SAAWC,EAAKC,EAAQC,EAAYC,GAEzC,IAEIC,EAFAC,EAAQd,KAMXa,EAF0B,KAAtBb,KAAKa,aAEMb,KAAKa,aAEK,KAAdb,KAAKe,KAEDf,KAAKe,KAILpB,EAAMqB,YAAYC,eAAgBR,GAOlDK,EAAMjB,QAAQqB,UAAWT,GAEzB,IAAIU,EAAW,SAAWC,GAEpBR,EAEJA,EAASQ,GAITC,QAAQC,MAAOF,GAIhBN,EAAMjB,QAAQ0B,UAAWd,GACzBK,EAAMjB,QAAQ2B,QAASf,IAIpBgB,EAAS,IAAI9B,EAAM+B,WAAYZ,EAAMjB,SAEzC4B,EAAOE,QAAS3B,KAAKe,MACrBU,EAAOG,gBAAiB,eAEG,oBAAtBd,EAAMe,aAEVJ,EAAOK,oBAAoB,GAI5BL,EAAOjB,KAAMC,EAAK,SAAWsB,GAE5B,IAECjB,EAAMkB,MAAOD,EAAMlB,EAAc,SAAWoB,GAE3CvB,EAAQuB,GAERnB,EAAMjB,QAAQ2B,QAASf,IAErBU,GAEF,MAAQC,GAETD,EAAUC,KAITT,EAAYQ,IAIhBe,eAAgB,SAAWjC,GAG1B,OADAD,KAAKC,YAAcA,EACZD,MAIRmC,aAAc,SAAWjC,GAGxB,OADAF,KAAKE,UAAYA,EACVF,MAIRgC,MAAO,SAAWD,EAAMhB,EAAML,EAAQE,GAErC,IAAIwB,EACAC,KAEJ,GAAqB,iBAATN,EAEXK,EAAUL,OAMV,GAFYpC,EAAMqB,YAAYsB,WAAY,IAAIC,WAAYR,EAAM,EAAG,MAEpDS,EAAgC,CAE9C,IAECH,EAAYI,EAAWC,iBAAoB,IAoWhD,SAA8BX,GAE7B/B,KAAK2C,KAAOF,EAAWC,gBACvB1C,KAAKoC,QAAU,KACfpC,KAAK4C,KAAO,KAEZ,IAAIC,EAAa,IAAIC,SAAUf,EAAM,EAAGgB,GAQxC,GANA/C,KAAKgD,QACJC,MAAOtD,EAAMqB,YAAYsB,WAAY,IAAIC,WAAYR,EAAKmB,MAAO,EAAG,KACpEC,QAASN,EAAWO,UAAW,GAAG,GAClCC,OAAQR,EAAWO,UAAW,GAAG,IAG7BpD,KAAKgD,OAAOC,QAAUT,EAE1B,MAAM,IAAIc,MAAO,qDAEX,GAAKtD,KAAKgD,OAAOG,QAAU,EAEjC,MAAM,IAAIG,MAAO,kDAIlB,IAAIC,EAAY,IAAIT,SAAUf,EAAMgB,GAChCS,EAAa,EAEjB,KAAQA,EAAaD,EAAUE,YAAa,CAE3C,IAAIC,EAAcH,EAAUH,UAAWI,GAAY,GACnDA,GAAc,EAEd,IAAIG,EAAYJ,EAAUH,UAAWI,GAAY,GAGjD,GAFAA,GAAc,EAETG,IAAcC,EAA6BC,KAAO,CAEtD,IAAIC,EAAe,IAAIvB,WAAYR,EAAMgB,EAAiCS,EAAYE,GACtF1D,KAAKoC,QAAUzC,EAAMqB,YAAYsB,WAAYwB,QAEvC,GAAKH,IAAcC,EAA6BG,IAAM,CAE5D,IAAIC,EAAajB,EAAiCS,EAClDxD,KAAK4C,KAAOb,EAAKmB,MAAOc,EAAYA,EAAaN,GAMlDF,GAAcE,EAIf,GAAsB,OAAjB1D,KAAKoC,QAET,MAAM,IAAIkB,MAAO,6CA3Z6B,CAAyBvB,GAEnE,MAAQT,GAGT,YADKV,GAAUA,EAASU,IAKzBc,EAAUC,EAAYI,EAAWC,iBAAkBN,aAInDA,EAAUzC,EAAMqB,YAAYsB,WAAY,IAAIC,WAAYR,IAM1D,IAAIkC,EAAOJ,KAAK7B,MAAOI,GAEvB,QAAoB8B,IAAfD,EAAKE,OAAuBF,EAAKE,MAAMhB,QAAS,GAAM,EAErDvC,GAAUA,EAAS,IAAI0C,MAAO,gFAFpC,CAOA,GAAKW,EAAKG,eAET,IAAM,IAAIC,EAAI,EAAGA,EAAIJ,EAAKG,eAAef,SAAWgB,EAAI,CAEvD,IAAIC,EAAgBL,EAAKG,eAAgBC,GACrCE,EAAqBN,EAAKM,uBAE9B,OAASD,GAER,KAAK7B,EAAW+B,oBACfnC,EAAYiC,GAAkB,IAAIG,EAAqBR,GACvD,MAED,KAAKxB,EAAWiC,wBACfrC,EAAYiC,GAAkB,IAAIK,EAClC,MAED,KAAKlC,EAAWmC,oBACfvC,EAAYiC,GAAkB,IAAIO,EAClC,MAED,KAAKpC,EAAWqC,sCACfzC,EAAYiC,GAAkB,IAAIS,EAClC,MAED,KAAKtC,EAAWuC,2BACf3C,EAAYiC,GAAkB,IAAIW,EAAmChB,EAAMjE,KAAKC,aAChF,MAED,KAAKwC,EAAWyC,iBACf7C,EAAYiC,GAAkB,IAAIa,EAAyBnF,KAAKE,WAChE,MAED,KAAKuC,EAAW2C,sBACf/C,EAAYiC,GAAkB,IAAIe,EAClC,MAED,KAAK5C,EAAW6C,sBACfjD,EAAYiC,GAAkB,IAAIiB,EAClC,MAED,QAEMhB,EAAmBiB,QAASlB,IAAmB,GAEnDjD,QAAQoE,KAAM,wCAA0CnB,EAAgB,OAUhE,IAAIoB,EAAYzB,EAAM5B,GAElCtB,KAAMA,GAAQf,KAAKa,cAAgB,GACnCgB,YAAa7B,KAAK6B,YAClBhC,QAASG,KAAKH,UAIRmC,MAAOtB,EAAQE,OA8CxB,IAAI6B,GACHC,gBAAiB,kBACjBsC,2BAA4B,6BAC5BR,oBAAqB,sBACrBE,wBAAyB,0BACzBI,sCAAuC,sCACvCF,oBAAqB,sBACrBQ,sBAAuB,wBACvBE,sBAAuB,wBACvBJ,iBAAkB,oBASnB,SAASC,EAAyBjF,GAEjC,IAAOA,EAEN,MAAM,IAAIoD,MAAO,uFAIlBtD,KAAK2C,KAAOF,EAAWyC,iBACvBlF,KAAKE,UAAYA,EASlB,SAASuE,EAAqBR,GAE7BjE,KAAK2C,KAAOF,EAAW+B,oBAEvB,IAAImB,EAAc1B,EAAK5B,YAAc4B,EAAK5B,WAAYI,EAAW+B,yBACjExE,KAAK4F,UAAYD,EAAUE,WAgE5B,SAAShB,IAER7E,KAAK2C,KAAOF,EAAWmC,oBA+CxB,SAASD,IAER3E,KAAK2C,KAAOF,EAAWiC,wBA/GxBD,EAAoBtE,UAAU2F,UAAY,SAAWC,GAEpD,IACIC,EADAC,EAAWjG,KAAK4F,UAAWG,GAG3BG,EAAQ,IAAIvG,EAAMwG,MAAO,eACLjC,IAAnB+B,EAASC,OAAsBA,EAAME,UAAWH,EAASC,OAE9D,IAAIG,OAA2BnC,IAAnB+B,EAASI,MAAsBJ,EAASI,MAAQ,EAE5D,OAASJ,EAASK,MAEjB,IAAK,eACJN,EAAY,IAAIrG,EAAM4G,iBAAkBL,IAC9BM,OAAOC,SAASC,IAAK,EAAG,GAAK,GACvCV,EAAUW,IAAKX,EAAUQ,QACzB,MAED,IAAK,SACJR,EAAY,IAAIrG,EAAMiH,WAAYV,IACxBW,SAAWR,EACrB,MAED,IAAK,QACJL,EAAY,IAAIrG,EAAMmH,UAAWZ,IACvBW,SAAWR,EAErBJ,EAASc,KAAOd,EAASc,SACzBd,EAASc,KAAKC,oBAAkD9C,IAAjC+B,EAASc,KAAKC,eAA+Bf,EAASc,KAAKC,eAAiB,EAC3Gf,EAASc,KAAKE,oBAAkD/C,IAAjC+B,EAASc,KAAKE,eAA+BhB,EAASc,KAAKE,eAAiBC,KAAKC,GAAK,EACrHnB,EAAUoB,MAAQnB,EAASc,KAAKE,eAChCjB,EAAUqB,SAAW,EAAMpB,EAASc,KAAKC,eAAiBf,EAASc,KAAKE,eACxEjB,EAAUQ,OAAOC,SAASC,IAAK,EAAG,GAAK,GACvCV,EAAUW,IAAKX,EAAUQ,QACzB,MAED,QACC,MAAM,IAAIlD,MAAO,6CAA+C2C,EAASK,KAAO,MAclF,OARAN,EAAUS,SAASC,IAAK,EAAG,EAAG,GAE9BV,EAAUsB,MAAQ,OAEUpD,IAAvB+B,EAASsB,YAA0BvB,EAAUuB,UAAYtB,EAASsB,WAEvEvB,EAAUrD,KAAOsD,EAAStD,MAAU,SAAWoD,EAExCyB,QAAQC,QAASzB,IAezBnB,EAA4B1E,UAAUuH,gBAAkB,WAEvD,OAAO/H,EAAMgI,mBAId9C,EAA4B1E,UAAUyH,aAAe,SAAWC,EAAgBC,EAAaC,GAE5F,IAAIC,KAEJH,EAAe3B,MAAQ,IAAIvG,EAAMwG,MAAO,EAAK,EAAK,GAClD0B,EAAeI,QAAU,EAEzB,IAAIC,EAAoBJ,EAAYK,qBAEpC,GAAKD,EAAoB,CAExB,GAAKE,MAAMC,QAASH,EAAkBI,iBAAoB,CAEzD,IAAIC,EAAQL,EAAkBI,gBAE9BT,EAAe3B,MAAME,UAAWmC,GAChCV,EAAeI,QAAUM,EAAO,QAIWrE,IAAvCgE,EAAkBM,kBAEtBR,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,MAAOK,EAAkBM,mBAM/E,OAAOhB,QAAQmB,IAAKX,IAerBrD,EAAgCxE,UAAUuH,gBAAkB,WAE3D,OAAO/H,EAAMiJ,sBAIdjE,EAAgCxE,UAAUyH,aAAe,SAAWC,EAAgBC,EAAaC,GAEhG,IAAIC,KAEArC,EAAYmC,EAAYzF,WAAYrC,KAAK2C,MA0B7C,QAxBmCuB,IAA9ByB,EAAUkD,kBAEdhB,EAAeiB,UAAYnD,EAAUkD,sBAIF3E,IAA/ByB,EAAUoD,kBAEdf,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,eAAgBlC,EAAUoD,wBAInC7E,IAAvCyB,EAAUqD,2BAEdnB,EAAeoB,mBAAqBtD,EAAUqD,+BAIF9E,IAAxCyB,EAAUuD,2BAEdlB,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,wBAAyBlC,EAAUuD,iCAI9ChF,IAArCyB,EAAUwD,yBAEdnB,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,qBAAsBlC,EAAUwD,8BAEpCjF,IAA3CyB,EAAUwD,uBAAuBC,OAAsB,CAE3D,IAAIA,EAAQzD,EAAUwD,uBAAuBC,MAE7CvB,EAAewB,qBAAuB,IAAI1J,EAAM2J,QAASF,EAAOA,GAMlE,OAAO5B,QAAQmB,IAAKX,IAKrB,IAAIxF,EAAgC,OAChCO,EAAiC,GACjCa,GAAiCC,KAAM,WAAYE,IAAK,SAoE5D,SAASkB,EAAmChB,EAAMhE,GAEjD,IAAOA,EAEN,MAAM,IAAIqD,MAAO,uDAIlBtD,KAAK2C,KAAOF,EAAWuC,2BACvBhF,KAAKiE,KAAOA,EACZjE,KAAKC,YAAcA,EACnBD,KAAKC,YAAYsJ,UAoElB,SAASlE,IAERrF,KAAK2C,KAAOF,EAAW2C,sBAkDxB,SAASoE,EAA4BC,GAEpC9J,EAAM+J,qBAAqB3J,KAAMC,MAEjCA,KAAK2J,kCAAmC,EAGxC,IAAIC,GACH,yBACA,mCACA,UACCC,KAAM,MAEJC,GACH,2BACA,qCACA,UACCD,KAAM,MAEJE,GACH,kCACA,yBACA,wDACA,mDACA,oFACA,yCACA,UACCF,KAAM,MAEJG,GACH,uCACA,2BACA,4DACA,kFACA,2CACA,UACCH,KAAM,MAEJI,GACH,6BACA,4CACA,kFACA,+DACA,6HACA,mDACA,uEACA,gDACCJ,KAAM,MAEJK,GACHC,UAAYC,OAAO,IAAIzK,EAAMwG,OAAQkE,OAAQ,WAC7CC,YAAcF,MAAO,GACrBG,aAAeH,MAAO,MACtBI,eAAiBJ,MAAO,OAGzBpK,KAAKyK,eAAiBP,EAGtBlK,KAAK0K,gBAAkB,SAAWC,GAEjC,IAAM,IAAIC,KAAeV,EAExBS,EAAOT,SAAUU,GAAgBV,EAAUU,GAI5CD,EAAOE,eAAiBF,EAAOE,eAAeC,QAAS,2BAA4B,0BACnFH,EAAOE,eAAiBF,EAAOE,eAAeC,QAAS,2BAA4B,6BACnFH,EAAOE,eAAiBF,EAAOE,eAAeC,QAAS,wCAAyClB,GAChGe,EAAOE,eAAiBF,EAAOE,eAAeC,QAAS,wCAAyChB,GAChGa,EAAOE,eAAiBF,EAAOE,eAAeC,QAAS,mCAAoCf,GAC3FY,EAAOE,eAAiBF,EAAOE,eAAeC,QAAS,mCAAoCd,GAC3FW,EAAOE,eAAiBF,EAAOE,eAAeC,QAAS,sCAAuCb,IAK/F7J,OAAO2K,iBACN/K,MAECmK,UACCa,IAAK,WAAc,OAAOd,EAASC,SAASC,OAC5C1D,IAAK,SAAWuE,GAAMf,EAASC,SAASC,MAAQa,IAEjDV,aACCS,IAAK,WAAc,OAAOd,EAASK,YAAYH,OAC/C1D,IAAK,SAAWuE,GAAMf,EAASK,YAAYH,MAAQa,IAEpDX,YACCU,IAAK,WAAc,OAAOd,EAASI,WAAWF,OAC9C1D,IAAK,SAAWuE,GAAMf,EAASI,WAAWF,MAAQa,IAEnDT,eACCQ,IAAK,WAAc,OAAOd,EAASM,cAAcJ,OACjD1D,IAAK,SAAWuE,GAEff,EAASM,cAAcJ,MAAQa,EAE1BA,GAEJjL,KAAKkL,QAAQC,kBAAoB,GAEjCnL,KAAKkL,QAAQE,iBAAmB,YAIzBpL,KAAKkL,QAAQE,wBACbpL,KAAKkL,QAAQC,8BAUlBnL,KAAKqL,iBACLrL,KAAKsL,iBACLtL,KAAKuL,oBACLvL,KAAKwL,aAEZxL,KAAKyL,UAAWhC,GAsBjB,SAAS1E,IAER,OAECpC,KAAMF,EAAWqC,sCAEjB4G,0BACC,QACA,MACA,WACA,oBACA,QACA,iBACA,WACA,oBACA,cACA,UACA,YACA,YACA,gBACA,kBACA,oBACA,mBACA,cACA,WACA,gBACA,aACA,WACA,SACA,kBACA,mBAGDhE,gBAAiB,WAEhB,OAAO8B,GAIR5B,aAAc,SAAWC,EAAgBC,EAAaC,GAErD,IAAI4D,EAAwB7D,EAAYzF,WAAYrC,KAAK2C,MAEzDkF,EAAe3B,MAAQ,IAAIvG,EAAMwG,MAAO,EAAK,EAAK,GAClD0B,EAAeI,QAAU,EAEzB,IAAID,KAEJ,GAAKI,MAAMC,QAASsD,EAAsBC,eAAkB,CAE3D,IAAIrD,EAAQoD,EAAsBC,cAElC/D,EAAe3B,MAAME,UAAWmC,GAChCV,EAAeI,QAAUM,EAAO,GAoBjC,QAhB8CrE,IAAzCyH,EAAsBE,gBAE1B7D,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,MAAO8D,EAAsBE,iBAIlFhE,EAAeiE,SAAW,IAAInM,EAAMwG,MAAO,EAAK,EAAK,GACrD0B,EAAeyC,gBAAwDpG,IAA3CyH,EAAsBI,iBAAiCJ,EAAsBI,iBAAmB,EAC5HlE,EAAesC,SAAW,IAAIxK,EAAMwG,MAAO,EAAK,EAAK,GAEhDiC,MAAMC,QAASsD,EAAsBK,iBAEzCnE,EAAesC,SAAS/D,UAAWuF,EAAsBK,qBAID9H,IAApDyH,EAAsBM,0BAA0C,CAEpE,IAAIC,EAAkBP,EAAsBM,0BAC5CjE,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,gBAAiBqE,IACrElE,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,cAAeqE,IAIpE,OAAO1E,QAAQmB,IAAKX,IAIrBmE,eAAgB,SAAWtE,GAE1B,IAAIuE,EAAW,IAAI5C,EAA4B3B,GA0C/C,OAzCAuE,EAASC,KAAM,EAEfD,EAASlG,MAAQ2B,EAAe3B,MAEhCkG,EAASE,SAA6BpI,IAAvB2D,EAAeyE,IAAoB,KAAOzE,EAAeyE,IAExEF,EAASG,SAAW,KACpBH,EAASI,kBAAoB,EAE7BJ,EAASK,WAAiCvI,IAAzB2D,EAAe4E,MAAsB,KAAO5E,EAAe4E,MAC5EL,EAASM,eAAiB,EAE1BN,EAASN,SAAWjE,EAAeiE,SACnCM,EAASO,kBAAoB,EAC7BP,EAASQ,iBAA6C1I,IAA/B2D,EAAe+E,YAA4B,KAAO/E,EAAe+E,YAExFR,EAASS,aAAqC3I,IAA3B2D,EAAegF,QAAwB,KAAOhF,EAAegF,QAChFT,EAASU,UAAY,EAErBV,EAASW,eAAyC7I,IAA7B2D,EAAekF,UAA0B,KAAOlF,EAAekF,UACpFX,EAASY,cAAgBrN,EAAMsN,sBAE1BpF,EAAeqF,cAAcd,EAASc,YAAcrF,EAAeqF,aAExEd,EAASe,gBAAkB,KAC3Bf,EAASgB,kBAAoB,EAC7BhB,EAASiB,iBAAmB,EAE5BjB,EAAS7B,iBAA6CrG,IAA/B2D,EAAe0C,YAA4B,KAAO1C,EAAe0C,YACxF6B,EAASjC,SAAWtC,EAAesC,SAEnCiC,EAAS5B,mBAAiDtG,IAAjC2D,EAAe2C,cAA8B,KAAO3C,EAAe2C,cAC5F4B,EAAS9B,WAAazC,EAAeyC,WAErC8B,EAASkB,SAAW,KAEpBlB,EAASmB,YAAmCrJ,IAA1B2D,EAAe0F,OAAuB,KAAO1F,EAAe0F,OAC9EnB,EAASoB,gBAAkB,EAE3BpB,EAASqB,gBAAkB,IAEpBrB,IAaV,SAAS7G,IAERvF,KAAK2C,KAAOF,EAAW6C,sBAUxB,SAASoI,EAA4BC,EAAoBC,EAAcC,EAAYC,GAElFnO,EAAMoO,YAAYhO,KAAMC,KAAM2N,EAAoBC,EAAcC,EAAYC,GAja7E7I,EAAkC9E,UAAU6N,gBAAkB,SAAWC,EAAWlG,GAEnF,IAAI9D,EAAOjE,KAAKiE,KACZhE,EAAcD,KAAKC,YACnBiO,EAAkBD,EAAU5L,WAAYrC,KAAK2C,MAAOwL,WACpDC,EAAmBH,EAAU5L,WAAYrC,KAAK2C,MAAO0L,WACrDC,KACAC,KACAC,KAEJ,IAAM,IAAIC,KAAiBL,EAAmB,CAE7C,IAAIM,EAAqBC,EAAYF,IAAmBA,EAAcG,cAEtEN,EAAmBI,GAAuBN,EAAkBK,GAI7D,IAAMA,KAAiBR,EAAUI,WAAa,CAEzCK,EAAqBC,EAAYF,IAAmBA,EAAcG,cAEtE,QAA2C1K,IAAtCkK,EAAkBK,GAAgC,CAEtD,IAAII,EAAc5K,EAAK6K,UAAWb,EAAUI,WAAYI,IACpDM,EAAgBC,EAAuBH,EAAYE,eAEvDP,EAAkBE,GAAuBK,EACzCR,EAAwBG,IAAkD,IAA3BG,EAAYI,YAM7D,OAAOlH,EAAOmH,cAAe,aAAchB,GAAkBiB,KAAM,SAAWhB,GAE7E,OAAO,IAAI3G,QAAS,SAAWC,GAE9BxH,EAAYmP,gBAAiBjB,EAAY,SAAWkB,GAEnD,IAAM,IAAIZ,KAAiBY,EAAShB,WAAa,CAEhD,IAAIiB,EAAYD,EAAShB,WAAYI,GACjCQ,EAAaV,EAAwBE,QAErBvK,IAAf+K,IAA2BK,EAAUL,WAAaA,GAIxDxH,EAAS4H,IAEPf,EAAmBE,QAmBzBnJ,EAA8BlF,UAAUoP,cAAgB,SAAWC,EAASC,GA8B3E,OA5BAD,EAAUA,EAAQE,aAEQxL,IAArBuL,EAAUE,QAEdH,EAAQG,OAAOvJ,UAAWqJ,EAAUE,aAITzL,IAAvBuL,EAAUG,WAEdJ,EAAQI,SAAWH,EAAUG,eAIL1L,IAApBuL,EAAUrG,OAEdoG,EAAQK,OAAOzJ,UAAWqJ,EAAUrG,YAITlF,IAAvBuL,EAAUK,UAEdzO,QAAQoE,KAAM,wCAA0CzF,KAAK2C,KAAO,kCAIrE6M,EAAQO,aAAc,EAEfP,GA+IRhG,EAA2BrJ,UAAYC,OAAOE,OAAQX,EAAM+J,qBAAqBvJ,WACjFqJ,EAA2BrJ,UAAUI,YAAciJ,EAEnDA,EAA2BrJ,UAAU6P,KAAO,SAAWC,GAWtD,OATAtQ,EAAM+J,qBAAqBvJ,UAAU6P,KAAKjQ,KAAMC,KAAMiQ,GACtDjQ,KAAKuK,YAAc0F,EAAO1F,YAC1BvK,KAAKmK,SAAS6F,KAAMC,EAAO9F,UAC3BnK,KAAKwK,cAAgByF,EAAOzF,cAC5BxK,KAAKsK,WAAa2F,EAAO3F,kBAClBtK,KAAKqL,iBACLrL,KAAKsL,iBACLtL,KAAKuL,oBACLvL,KAAKwL,aACLxL,MAoKR0N,EAA2BvN,UAAYC,OAAOE,OAAQX,EAAMoO,YAAY5N,WACxEuN,EAA2BvN,UAAUI,YAAcmN,EAEnDA,EAA2BvN,UAAU+P,iBAAmB,SAAWC,GAUlE,IALA,IAAIC,EAASpQ,KAAK8N,aACjBuC,EAASrQ,KAAK4N,aACd0C,EAAYtQ,KAAKsQ,UACjBX,EAASQ,EAAQG,EAAY,EAAIA,EAExBjM,EAAI,EAAGA,IAAMiM,EAAWjM,IAEjC+L,EAAQ/L,GAAMgM,EAAQV,EAAStL,GAIhC,OAAO+L,GAIR1C,EAA2BvN,UAAUoQ,aAAe7C,EAA2BvN,UAAU+P,iBAEzFxC,EAA2BvN,UAAUqQ,UAAY9C,EAA2BvN,UAAU+P,iBAEtFxC,EAA2BvN,UAAUsQ,aAAe,SAAWC,EAAIC,EAAIC,EAAGC,GAyBzE,IAvBA,IAAIT,EAASpQ,KAAK8N,aACduC,EAASrQ,KAAK4N,aACdkD,EAAS9Q,KAAKsQ,UAEdS,EAAmB,EAATD,EACVE,EAAmB,EAATF,EAEVG,EAAKJ,EAAKF,EAEVO,GAAMN,EAAID,GAAOM,EACjBE,EAAKD,EAAIA,EACTE,EAAMD,EAAKD,EAEXG,EAAUX,EAAKM,EACfM,EAAUD,EAAUL,EAEpBO,GAAO,EAAIH,EAAM,EAAID,EACrBK,EAAKJ,EAAMD,EACXM,EAAK,EAAIF,EACTG,EAAKF,EAAKL,EAAKD,EAIT7M,EAAI,EAAGA,IAAMyM,EAAQzM,IAAO,CAErC,IAAIsN,EAAKtB,EAAQiB,EAAUjN,EAAIyM,GAC3Bc,EAAKvB,EAAQiB,EAAUjN,EAAI0M,GAAYE,EACvCY,EAAKxB,EAAQgB,EAAUhN,EAAIyM,GAC3BgB,EAAKzB,EAAQgB,EAAUhN,GAAM4M,EAEjCb,EAAQ/L,GAAMoN,EAAKE,EAAKD,EAAKE,EAAKL,EAAKM,EAAKL,EAAKM,EAIlD,OAAO1B,GAUR,IAAI2B,EAWK,EAXLA,EAYI,EAZJA,EAaQ,EAbRA,EAcS,EAdTA,EAeQ,EAfRA,EAgBa,EAhBbA,EAiBW,EAKX/C,GACHgD,KAAMC,UACNC,KAAM3P,WACN4P,KAAMC,WACNC,KAAMC,YACNC,KAAMC,YACNC,KAAMC,cAGHC,GACHC,KAAMjT,EAAMkT,cACZC,KAAMnT,EAAMoT,aACZC,KAAMrT,EAAMsT,2BACZC,KAAMvT,EAAMwT,0BACZC,KAAMzT,EAAM0T,0BACZC,KAAM3T,EAAM4T,0BAGTC,GACHC,MAAO9T,EAAM+T,oBACbC,MAAOhU,EAAMiU,uBACbC,MAAOlU,EAAMmU,gBAGVC,GACHC,OAAU,EACVC,KAAQ,EACRC,KAAQ,EACRC,KAAQ,EACRC,KAAQ,EACRC,KAAQ,EACRC,KAAQ,IAGL3F,GACH4F,SAAU,WACVC,OAAQ,SACRC,QAAS,UACTC,WAAY,KACZC,WAAY,MACZC,QAAS,QACTC,UAAW,aACXC,SAAU,aAGPC,GACH3L,MAAO,QACP4L,YAAa,WACbpF,SAAU,aACVqF,QAAS,yBAGNC,GACHC,iBAAajR,EAEbkR,OAAQzV,EAAM0V,kBACdC,KAAM3V,EAAM4V,qBAGTC,EACK,SADLA,EAEG,OAFHA,EAGI,QAGJC,GACHC,YAAa/V,EAAMgW,WACnBC,aAAcjW,EAAMkW,WAKrB,SAASC,EAAYrV,EAAKM,GAGzB,MAAoB,iBAARN,GAA4B,KAARA,EAAoB,IAG/C,gBAAgBsV,KAAMhV,IAAU,MAAMgV,KAAMtV,KAEhDM,EAAOA,EAAK+J,QAAS,0BAA2B,OAK5C,mBAAmBiL,KAAMtV,GAAeA,EAGxC,gBAAgBsV,KAAMtV,GAAeA,EAGrC,aAAasV,KAAMtV,GAAeA,EAGhCM,EAAON,GA2Bf,SAASuV,EAAgCC,EAAiBC,EAAQC,GAIjE,IAAM,IAAIxT,KAAQwT,EAAU9T,gBAEM6B,IAA5B+R,EAAiBtT,KAErBuT,EAAOE,SAASC,eAAiBH,EAAOE,SAASC,mBACjDH,EAAOE,SAASC,eAAgB1T,GAASwT,EAAU9T,WAAYM,IAYlE,SAAS2T,EAAwBJ,EAAQK,QAEhBrS,IAAnBqS,EAAQC,SAEmB,iBAAnBD,EAAQC,OAEnBpW,OAAOC,OAAQ6V,EAAOE,SAAUG,EAAQC,QAIxCnV,QAAQoE,KAAM,sDAAwD8Q,EAAQC,SAqFjF,SAASC,EAAoBC,EAAMC,GAIlC,GAFAD,EAAKD,0BAEoBvS,IAApByS,EAAQ1B,QAEZ,IAAM,IAAI5Q,EAAI,EAAGuS,EAAKD,EAAQ1B,QAAQ5R,OAAQgB,EAAIuS,EAAIvS,IAErDqS,EAAKG,sBAAuBxS,GAAMsS,EAAQ1B,QAAS5Q,GAOrD,GAAKsS,EAAQH,QAAUpO,MAAMC,QAASsO,EAAQH,OAAOM,aAAgB,CAEpE,IAAIA,EAAcH,EAAQH,OAAOM,YAEjC,GAAKJ,EAAKG,sBAAsBxT,SAAWyT,EAAYzT,OAAS,CAE/DqT,EAAKK,yBAEL,IAAU1S,EAAI,EAAGuS,EAAKE,EAAYzT,OAAQgB,EAAIuS,EAAIvS,IAEjDqS,EAAKK,sBAAuBD,EAAazS,IAAQA,OAMlDhD,QAAQoE,KAAM,yEA6BjB,SAASuR,EAAqB3I,GAM7B,IAJA,IAAI4I,EAAgB,GAEhBC,EAAO9W,OAAO8W,KAAM7I,GAAa8I,OAE3B9S,EAAI,EAAGuS,EAAKM,EAAK7T,OAAQgB,EAAIuS,EAAIvS,IAE1C4S,GAAiBC,EAAM7S,GAAM,IAAMgK,EAAY6I,EAAM7S,IAAQ,IAI9D,OAAO4S,EAMR,SAASvR,EAAYzB,EAAM5B,EAAY+U,GAEtCpX,KAAKiE,KAAOA,MACZjE,KAAKqC,WAAaA,MAClBrC,KAAKoX,QAAUA,MAGfpX,KAAKqX,MAAQ,IAxpCd,WAEC,IAAIC,KAEJ,OAECtM,IAAK,SAAWuM,GAEf,OAAOD,EAASC,IAIjB5Q,IAAK,SAAW4Q,EAAKrB,GAEpBoB,EAASC,GAAQrB,GAIlBsB,OAAQ,SAAWD,UAEXD,EAASC,IAIjBE,UAAW,WAEVH,QAioCFtX,KAAK0X,kBAEL1X,KAAK2X,cAAgB,IAAIhY,EAAMiY,cAAe5X,KAAKoX,QAAQvX,SAC3DG,KAAK2X,cAAcE,eAAgB7X,KAAKoX,QAAQvV,aAEhD7B,KAAK8X,WAAa,IAAInY,EAAM+B,WAAY1B,KAAKoX,QAAQvX,SACrDG,KAAK8X,WAAWlW,gBAAiB,eAEC,oBAA7B5B,KAAKoX,QAAQvV,aAEjB7B,KAAK8X,WAAWhW,oBAAoB,GA07BtC,SAASiW,EAAwB1I,EAAU2I,EAAcjQ,GAExD,IAAIsG,EAAa2J,EAAa3J,WAE1BrG,KAEJ,SAASiQ,EAAyBC,EAAezJ,GAEhD,OAAO1G,EAAOmH,cAAe,WAAYgJ,GACvC/I,KAAM,SAAWgJ,GAEjB9I,EAAS+I,aAAc3J,EAAe0J,KAMzC,IAAM,IAAIE,KAAqBhK,EAAa,CAE3C,IAAIK,EAAqBC,EAAY0J,IAAuBA,EAAkBzJ,cAGzEF,KAAsBW,EAAShB,YAEpCrG,EAAQS,KAAMwP,EAAyB5J,EAAYgK,GAAqB3J,IAIzE,QAA8BxK,IAAzB8T,EAAaM,UAA2BjJ,EAASc,MAAQ,CAE7D,IAAIgI,EAAWpQ,EAAOmH,cAAe,WAAY8I,EAAaM,SAAUnJ,KAAM,SAAWgJ,GAExF9I,EAASkJ,SAAUJ,KAIpBnQ,EAAQS,KAAM0P,GAQf,OAJA7B,EAAwBjH,EAAU2I,GA3InC,SAAwB3I,EAAU2I,EAAcjQ,GAE/C,IAAIsG,EAAa2J,EAAa3J,WAE1BmK,EAAM,IAAI7Y,EAAM8Y,KAEpB,QAA6BvU,IAAxBmK,EAAWkG,SAAhB,CAEC,IAEImE,GAFAP,EAAWpQ,EAAO9D,KAAK6K,UAAWT,EAAWkG,WAE9BmE,IACfC,EAAMR,EAASQ,IAInB,QAAazU,IAARwU,QAA6BxU,IAARyU,EAA1B,CAECH,EAAI9R,IACH,IAAI/G,EAAMiZ,QAASF,EAAK,GAAKA,EAAK,GAAKA,EAAK,IAC5C,IAAI/Y,EAAMiZ,QAASD,EAAK,GAAKA,EAAK,GAAKA,EAAK,KAgB/C,IAAIE,EAAUb,EAAaa,QAE3B,QAAiB3U,IAAZ2U,EAAwB,CAK5B,IAHA,IAAIC,EAAkB,IAAInZ,EAAMiZ,QAC5BG,EAAS,IAAIpZ,EAAMiZ,QAEbvU,EAAI,EAAGuS,EAAKiC,EAAQxV,OAAQgB,EAAIuS,EAAIvS,IAAO,CAEpD,IAIK8T,EAJD3R,EAASqS,EAASxU,GAEtB,QAAyBH,IAApBsC,EAAO+N,SAGPmE,GADAP,EAAWpQ,EAAO9D,KAAK6K,UAAWtI,EAAO+N,WAC1BmE,IACfC,EAAMR,EAASQ,SAINzU,IAARwU,QAA6BxU,IAARyU,GAGzBI,EAAOC,KAAM9R,KAAKyR,IAAKzR,KAAK+R,IAAKP,EAAK,IAAOxR,KAAK+R,IAAKN,EAAK,MAC5DI,EAAOG,KAAMhS,KAAKyR,IAAKzR,KAAK+R,IAAKP,EAAK,IAAOxR,KAAK+R,IAAKN,EAAK,MAC5DI,EAAOI,KAAMjS,KAAKyR,IAAKzR,KAAK+R,IAAKP,EAAK,IAAOxR,KAAK+R,IAAKN,EAAK,MAM5DG,EAAgBH,IAAKI,IAIrB1X,QAAQoE,KAAM,uEASjB+S,EAAIY,eAAgBN,GAIrBzJ,EAASgK,YAAcb,EAEvB,IAAIc,EAAS,IAAI3Z,EAAM4Z,OAEvBf,EAAIgB,UAAWF,EAAOG,QACtBH,EAAOI,OAASlB,EAAIE,IAAIiB,WAAYnB,EAAIG,KAAQ,EAEhDtJ,EAASuK,eAAiBN,OAlExBjY,QAAQoE,KAAM,wEAsHhBoU,CAAexK,EAAU2I,EAAcjQ,GAEhCP,QAAQmB,IAAKX,GAAUmH,KAAM,WAEnC,YAAgCjL,IAAzB8T,EAAaa,QA/oCtB,SAA0BxJ,EAAUwJ,EAAS9Q,GAK5C,IAHA,IAAI+R,GAAmB,EACnBC,GAAiB,EAEX1V,EAAI,EAAGuS,EAAKiC,EAAQxV,OAAQgB,EAAIuS,SAIhB1S,KAFrBsC,EAASqS,EAASxU,IAEVkQ,WAAyBuF,GAAmB,QACjC5V,IAAlBsC,EAAOgO,SAAuBuF,GAAiB,IAE/CD,IAAoBC,GAPoB1V,KAW9C,IAAOyV,IAAsBC,EAAiB,OAAOvS,QAAQC,QAAS4H,GAEtE,IAAI2K,KACAC,KAEJ,IAAU5V,EAAI,EAAGuS,EAAKiC,EAAQxV,OAAQgB,EAAIuS,EAAIvS,IAAO,CAEpD,IAAImC,EAASqS,EAASxU,GAEtB,GAAKyV,EAAmB,CAEvB,IAAII,OAAsChW,IAApBsC,EAAO+N,SAC1BxM,EAAOmH,cAAe,WAAY1I,EAAO+N,UACzClF,EAAShB,WAAW5H,SAEvBuT,EAAyBvR,KAAMyR,GAI3BH,IAEAG,OAAoChW,IAAlBsC,EAAOgO,OAC1BzM,EAAOmH,cAAe,WAAY1I,EAAOgO,QACzCnF,EAAShB,WAAW8L,OAEvBF,EAAuBxR,KAAMyR,IAM/B,OAAO1S,QAAQmB,KACdnB,QAAQmB,IAAKqR,GACbxS,QAAQmB,IAAKsR,KACV9K,KAAM,SAAWL,GAEpB,IAAIsL,EAAiBtL,EAAW,GAC5BuL,EAAevL,EAAW,GAM9B,OAJKgL,IAAmBzK,EAASiL,gBAAgB7T,SAAW2T,GACvDL,IAAiB1K,EAASiL,gBAAgBH,OAASE,GACxDhL,EAASkL,sBAAuB,EAEzBlL,IAqlCJmL,CAAiBnL,EAAU2I,EAAaa,QAAS9Q,GACjDsH,IAWL,SAASoL,EAAqBpL,EAAUqL,GAEvC,IAAIvK,EAAQd,EAASsL,WAIrB,GAAe,OAAVxK,EAAiB,CAErB,IAAImI,KAEA7R,EAAW4I,EAASuL,aAAc,YAEtC,QAAkB1W,IAAbuC,EAcJ,OADApF,QAAQC,MAAO,kGACR+N,EAZP,IAAM,IAAIhL,EAAI,EAAGA,EAAIoC,EAASoU,MAAOxW,IAEpCiU,EAAQ7P,KAAMpE,GAIfgL,EAASkJ,SAAUD,GACnBnI,EAAQd,EAASsL,WAanB,IAAIG,EAAoB3K,EAAM0K,MAAQ,EAClCE,KAEJ,GAAKL,IAAa/a,EAAMqb,oBAIvB,IAAU3W,EAAI,EAAGA,GAAKyW,EAAmBzW,IAExC0W,EAAWtS,KAAM0H,EAAM8K,KAAM,IAC7BF,EAAWtS,KAAM0H,EAAM8K,KAAM5W,IAC7B0W,EAAWtS,KAAM0H,EAAM8K,KAAM5W,EAAI,SAQlC,IAAUA,EAAI,EAAGA,EAAIyW,EAAmBzW,IAElCA,EAAI,GAAM,GAEd0W,EAAWtS,KAAM0H,EAAM8K,KAAM5W,IAC7B0W,EAAWtS,KAAM0H,EAAM8K,KAAM5W,EAAI,IACjC0W,EAAWtS,KAAM0H,EAAM8K,KAAM5W,EAAI,MAKjC0W,EAAWtS,KAAM0H,EAAM8K,KAAM5W,EAAI,IACjC0W,EAAWtS,KAAM0H,EAAM8K,KAAM5W,EAAI,IACjC0W,EAAWtS,KAAM0H,EAAM8K,KAAM5W,KAQzB0W,EAAW1X,OAAS,IAAQyX,GAElCzZ,QAAQC,MAAO,2FAMhB,IAAI4Z,EAAc7L,EAASK,QAG3B,OAFAwL,EAAY3C,SAAUwC,GAEfG,EAyvBR,OA7zDAxV,EAAWvF,UAAU6B,MAAQ,SAAWtB,EAAQE,GAE/C,IAAImH,EAAS/H,KACTiE,EAAOjE,KAAKiE,KACZ5B,EAAarC,KAAKqC,WAGtBrC,KAAKqX,MAAMI,YAGXzX,KAAKmb,WAEL3T,QAAQmB,KAEP3I,KAAKob,gBAAiB,SACtBpb,KAAKob,gBAAiB,aACtBpb,KAAKob,gBAAiB,YAEnBjM,KAAM,SAAWkM,GAEpB,IAAIjL,GACHkL,MAAOD,EAAc,GAAKpX,EAAKqX,OAAS,GACxCC,OAAQF,EAAc,GACtBG,WAAYH,EAAc,GAC1BI,QAASJ,EAAc,GACvBlX,MAAOF,EAAKE,MACZ4D,OAAQA,EACRqO,aAGDJ,EAAgC3T,EAAY+N,EAAQnM,GAEpDqS,EAAwBlG,EAAQnM,GAEhCvD,EAAQ0P,KAELsL,MAAO9a,IAOZ8E,EAAWvF,UAAUgb,SAAW,WAW/B,IATA,IAAIQ,EAAW3b,KAAKiE,KAAK2X,UACrBC,EAAW7b,KAAKiE,KAAK6X,UACrBC,EAAW/b,KAAKiE,KAAK+X,WAErBC,KACAC,KAIMC,EAAY,EAAGC,EAAaP,EAASxY,OAAQ8Y,EAAYC,EAAYD,IAI9E,IAFA,IAAIE,EAASR,EAAUM,GAAYE,OAEzBhY,EAAI,EAAGuS,EAAKyF,EAAOhZ,OAAQgB,EAAIuS,EAAIvS,IAE5CsX,EAAUU,EAAQhY,IAAMiY,QAAS,EAWnC,IAAM,IAAIC,EAAY,EAAGC,EAAab,EAAStY,OAAQkZ,EAAYC,EAAYD,IAAe,CAE7F,IAAIE,EAAUd,EAAUY,QAEFrY,IAAjBuY,EAAQ/F,YAE4BxS,IAAnC+X,EAAgBQ,EAAQ/F,QAE5BuF,EAAgBQ,EAAQ/F,MAASwF,EAAUO,EAAQ/F,MAAS,GAI7DuF,EAAgBQ,EAAQ/F,aAKFxS,IAAjBuY,EAAQC,OAEZX,EAAUU,EAAQ/F,MAAOiG,eAAgB,IAQ5C3c,KAAKiE,KAAKgY,eAAiBA,EAC3Bjc,KAAKiE,KAAKiY,SAAWA,GAUtBxW,EAAWvF,UAAU+O,cAAgB,SAAW5I,EAAM6J,GAErD,IAAIyM,EAAWtW,EAAO,IAAM6J,EACxB0M,EAAa7c,KAAKqX,MAAMrM,IAAK4R,GAEjC,IAAOC,EAAa,CAEnB,OAASvW,GAER,IAAK,QACJuW,EAAa7c,KAAK8c,UAAW3M,GAC7B,MAED,IAAK,OACJ0M,EAAa7c,KAAK+c,SAAU5M,GAC5B,MAED,IAAK,OACJ0M,EAAa7c,KAAKgd,SAAU7M,GAC5B,MAED,IAAK,WACJ0M,EAAa7c,KAAKid,aAAc9M,GAChC,MAED,IAAK,aACJ0M,EAAa7c,KAAKkd,eAAgB/M,GAClC,MAED,IAAK,SACJ0M,EAAa7c,KAAKmd,WAAYhN,GAC9B,MAED,IAAK,WACJ0M,EAAa7c,KAAKod,aAAcjN,GAChC,MAED,IAAK,UACJ0M,EAAa7c,KAAKqd,YAAalN,GAC/B,MAED,IAAK,OACJ0M,EAAa7c,KAAKsd,SAAUnN,GAC5B,MAED,IAAK,YACJ0M,EAAa7c,KAAKud,cAAepN,GACjC,MAED,IAAK,SACJ0M,EAAa7c,KAAKwd,WAAYrN,GAC9B,MAED,IAAK,QACJ0M,EAAa7c,KAAKqC,WAAYI,EAAW+B,qBAAsBsB,UAAWqK,GAC1E,MAED,QACC,MAAM,IAAI7M,MAAO,iBAAmBgD,GAItCtG,KAAKqX,MAAM1Q,IAAKiW,EAAUC,GAI3B,OAAOA,GASRnX,EAAWvF,UAAUib,gBAAkB,SAAW9U,GAEjD,IAAI+U,EAAerb,KAAKqX,MAAMrM,IAAK1E,GAEnC,IAAO+U,EAAe,CAErB,IAAItT,EAAS/H,KACTyd,EAAOzd,KAAKiE,KAAMqC,GAAkB,SAATA,EAAkB,KAAO,UAExD+U,EAAe7T,QAAQmB,IAAK8U,EAAKnR,IAAK,SAAWoR,EAAKvN,GAErD,OAAOpI,EAAOmH,cAAe5I,EAAM6J,MAIpCnQ,KAAKqX,MAAM1Q,IAAKL,EAAM+U,GAIvB,OAAOA,GASR3V,EAAWvF,UAAUgd,WAAa,SAAWQ,GAE5C,IAAIC,EAAY5d,KAAKiE,KAAK4Z,QAASF,GAC/Blc,EAASzB,KAAK8X,WAElB,GAAK8F,EAAUtX,MAA2B,gBAAnBsX,EAAUtX,KAEhC,MAAM,IAAIhD,MAAO,qBAAuBsa,EAAUtX,KAAO,kCAK1D,QAAuBpC,IAAlB0Z,EAAUE,KAAqC,IAAhBH,EAEnC,OAAOnW,QAAQC,QAASzH,KAAKqC,WAAYI,EAAWC,iBAAkBE,MAIvE,IAAIwU,EAAUpX,KAAKoX,QAEnB,OAAO,IAAI5P,QAAS,SAAWC,EAASsW,GAEvCtc,EAAOjB,KAAMsV,EAAY8H,EAAUE,IAAK1G,EAAQrW,MAAQ0G,OAASvD,EAAW,WAE3E6Z,EAAQ,IAAIza,MAAO,4CAA8Csa,EAAUE,IAAM,YAapFpY,EAAWvF,UAAU+c,eAAiB,SAAWhP,GAEhD,IAAI8P,EAAgBhe,KAAKiE,KAAKga,YAAa/P,GAE3C,OAAOlO,KAAKkP,cAAe,SAAU8O,EAAcE,QAAS/O,KAAM,SAAW+O,GAE5E,IAAIza,EAAaua,EAAcva,YAAc,EACzCO,EAAaga,EAAcha,YAAc,EAC7C,OAAOka,EAAOhb,MAAOc,EAAYA,EAAaP,MAWhDiC,EAAWvF,UAAU8c,aAAe,SAAW/E,GAE9C,IAAInQ,EAAS/H,KACTiE,EAAOjE,KAAKiE,KAEZ4K,EAAc7O,KAAKiE,KAAK6K,UAAWoJ,GAEvC,QAAgChU,IAA3B2K,EAAYV,iBAAmDjK,IAAvB2K,EAAYsP,OAKxD,OAAO3W,QAAQC,QAAS,MAIzB,IAAI2W,KAmBJ,YAjBgCla,IAA3B2K,EAAYV,WAEhBiQ,EAAmB3V,KAAMzI,KAAKkP,cAAe,aAAcL,EAAYV,aAIvEiQ,EAAmB3V,KAAM,WAIEvE,IAAvB2K,EAAYsP,SAEhBC,EAAmB3V,KAAMzI,KAAKkP,cAAe,aAAcL,EAAYsP,OAAO7F,QAAQnK,aACtFiQ,EAAmB3V,KAAMzI,KAAKkP,cAAe,aAAcL,EAAYsP,OAAO9N,OAAOlC,cAI/E3G,QAAQmB,IAAKyV,GAAqBjP,KAAM,SAAW8O,GAEzD,IAWI1V,EAAO8V,EAXPlQ,EAAa8P,EAAa,GAE1BK,EAAWvK,EAAkBlF,EAAYvI,MACzCiY,EAAavP,EAAuBH,EAAYE,eAGhDyP,EAAeD,EAAWE,kBAC1BC,EAAYF,EAAeF,EAC3Bta,EAAa6K,EAAY7K,YAAc,EACvC2a,OAAwCza,IAA3B2K,EAAYV,WAA2BlK,EAAKga,YAAapP,EAAYV,YAAawQ,gBAAaza,EAC5G+K,GAAwC,IAA3BJ,EAAYI,WAI7B,GAAK0P,GAAcA,IAAeD,EAAY,CAI7C,IAAIE,EAAU1X,KAAK2X,MAAO7a,EAAa2a,GACnCG,EAAa,qBAAuBjQ,EAAYV,WAAa,IAAMU,EAAYE,cAAgB,IAAM6P,EAAU,IAAM/P,EAAYgM,MACjIkE,EAAKhX,EAAOsP,MAAMrM,IAAK8T,GAEpBC,IAENxW,EAAQ,IAAIgW,EAAYpQ,EAAYyQ,EAAUD,EAAY9P,EAAYgM,MAAQ8D,EAAaH,GAG3FO,EAAK,IAAIpf,EAAMqf,kBAAmBzW,EAAOoW,EAAaH,GAEtDzW,EAAOsP,MAAM1Q,IAAKmY,EAAYC,IAI/BV,EAAkB,IAAI1e,EAAMsf,2BAA4BF,EAAIT,EAAYta,EAAa2a,EAAeH,EAAcvP,QAMjH1G,EAFmB,OAAf4F,EAEI,IAAIoQ,EAAY1P,EAAYgM,MAAQyD,GAIpC,IAAIC,EAAYpQ,EAAYnK,EAAY6K,EAAYgM,MAAQyD,GAIrED,EAAkB,IAAI1e,EAAMuf,gBAAiB3W,EAAO+V,EAAUrP,GAK/D,QAA4B/K,IAAvB2K,EAAYsP,OAAuB,CAEvC,IAAIgB,EAAkBpL,EAAiBC,OACnCoL,EAAoBpQ,EAAuBH,EAAYsP,OAAO7F,QAAQvJ,eAEtEsQ,EAAoBxQ,EAAYsP,OAAO7F,QAAQtU,YAAc,EAC7Dsb,EAAmBzQ,EAAYsP,OAAO9N,OAAOrM,YAAc,EAE3Dub,EAAgB,IAAIH,EAAmBnB,EAAa,GAAKoB,EAAmBxQ,EAAYsP,OAAOtD,MAAQsE,GACvGK,EAAe,IAAIjB,EAAYN,EAAa,GAAKqB,EAAkBzQ,EAAYsP,OAAOtD,MAAQyD,GAE9E,OAAfnQ,IAGJkQ,EAAkB,IAAI1e,EAAMuf,gBAAiBb,EAAgB9V,MAAMrF,QAASmb,EAAgBC,SAAUD,EAAgBpP,aAIvH,IAAM,IAAI5K,EAAI,EAAGuS,EAAK2I,EAAclc,OAAQgB,EAAIuS,EAAIvS,IAAO,CAE1D,IAAI8L,EAAQoP,EAAelb,GAM3B,GAJAga,EAAgBrF,KAAM7I,EAAOqP,EAAcnb,EAAIia,IAC1CA,GAAY,GAAID,EAAgBnF,KAAM/I,EAAOqP,EAAcnb,EAAIia,EAAW,IAC1EA,GAAY,GAAID,EAAgBlF,KAAMhJ,EAAOqP,EAAcnb,EAAIia,EAAW,IAC1EA,GAAY,GAAID,EAAgBoB,KAAMtP,EAAOqP,EAAcnb,EAAIia,EAAW,IAC1EA,GAAY,EAAI,MAAM,IAAIhb,MAAO,sEAMxC,OAAO+a,KAWT3Y,EAAWvF,UAAUkd,YAAc,SAAWqC,GAE7C,IAWIzP,EAXAlI,EAAS/H,KACTiE,EAAOjE,KAAKiE,KACZmT,EAAUpX,KAAKoX,QACfO,EAAgB3X,KAAK2X,cAErBgI,EAAMC,KAAKD,KAAOC,KAAKC,UAEvBC,EAAa7b,EAAK8b,SAAUL,GAE5BM,EAAoBF,EAAWzd,eAc/B4d,GARHhQ,EAFI+P,EAAmBvd,EAAWyC,kBAEzBjB,EAAKic,OAAQF,EAAmBvd,EAAWyC,kBAAmB+K,QAI9DhM,EAAKic,OAAQJ,EAAW7P,SAIX6N,IACnBqC,GAAc,EAiBlB,YAf2Bjc,IAAtB+L,EAAO9B,aAIX8R,EAAYlY,EAAOmH,cAAe,aAAce,EAAO9B,YAAagB,KAAM,SAAWhB,GAEpFgS,GAAc,EACd,IAAIC,EAAO,IAAIC,MAAQlS,IAAgB7H,KAAM2J,EAAOqQ,WAEpD,OADAL,EAAYN,EAAIY,gBAAiBH,MAO5B5Y,QAAQC,QAASwY,GAAY9Q,KAAM,SAAW8Q,GAIpD,IAAIxe,EAAS2V,EAAQvX,QAAQ2gB,WAAYP,GAUzC,OAROxe,IAENA,EAASue,EAAmBvd,EAAWyC,kBACpC6C,EAAO1F,WAAYI,EAAWyC,kBAAmBhF,UACjDyX,GAIG,IAAInQ,QAAS,SAAWC,EAASsW,GAEvCtc,EAAOjB,KAAMsV,EAAYmK,EAAW7I,EAAQrW,MAAQ0G,OAASvD,EAAW6Z,OAItE5O,KAAM,SAAWK,IAIC,IAAhB2Q,GAEJR,EAAIc,gBAAiBR,GAItBzQ,EAAQkR,OAAQ,EAEXZ,EAAWnd,OAAO6M,EAAQ7M,KAAOmd,EAAWnd,MAG5CsN,EAAOqQ,YAAY7K,IAEvBjG,EAAQmR,OAASlL,EAAmBxF,EAAOqQ,WAI5C,IACIM,GADW3c,EAAK4c,cACIf,EAAWc,aAOnC,OALApR,EAAQsR,UAAYnO,EAAeiO,EAAQE,YAAenhB,EAAMoT,aAChEvD,EAAQuR,UAAYpO,EAAeiO,EAAQG,YAAephB,EAAM4T,yBAChE/D,EAAQwR,MAAQxN,EAAiBoN,EAAQI,QAAWrhB,EAAMmU,eAC1DtE,EAAQyR,MAAQzN,EAAiBoN,EAAQK,QAAWthB,EAAMmU,eAEnDtE,KAaT9J,EAAWvF,UAAUuI,cAAgB,SAAWb,EAAgBqZ,EAASC,GAExE,IAAIpZ,EAAS/H,KAEb,OAAOA,KAAKkP,cAAe,UAAWiS,EAAOhR,OAAQhB,KAAM,SAAWK,GAErE,IAAOA,EAAQ4R,oBAEd,OAASF,GAER,IAAK,QACL,IAAK,cACL,IAAK,eACL,IAAK,YACL,IAAK,eACJ1R,EAAQmR,OAAShhB,EAAMkW,UAe1B,QANyB3R,IAApBid,EAAOrR,UAA6C,GAAnBqR,EAAOrR,UAAiC,UAAZoR,GAA0C,GAAnBC,EAAOrR,UAE/FzO,QAAQoE,KAAM,mCAAqC0b,EAAOrR,SAAW,gBAAkBoR,EAAU,uBAI7FnZ,EAAO1F,WAAYI,EAAW2C,uBAA0B,CAE5D,IAAIqK,OAAkCvL,IAAtBid,EAAO9e,WAA2B8e,EAAO9e,WAAYI,EAAW2C,4BAA0BlB,EAErGuL,IAEJD,EAAUzH,EAAO1F,WAAYI,EAAW2C,uBAAwBmK,cAAeC,EAASC,IAM1F5H,EAAgBqZ,GAAY1R,KAc9B9J,EAAWvF,UAAUkhB,oBAAsB,SAAW3K,GAErD,IAAIrH,EAAWqH,EAAKrH,SAChBjD,EAAWsK,EAAKtK,SAEhBkV,OAAoDpd,IAAhCmL,EAAShB,WAAWkT,QACxCC,OAAgDtd,IAA9BmL,EAAShB,WAAWnI,MACtCub,OAAgDvd,IAA/BmL,EAAShB,WAAW8L,OACrCuH,GAAqC,IAAvBhL,EAAKiG,cACnBgF,EAAkBvhB,OAAO8W,KAAM7H,EAASiL,iBAAkBjX,OAAS,EACnEue,EAAkBD,QAAuDzd,IAApCmL,EAASiL,gBAAgBH,OAElE,GAAKzD,EAAKmL,SAAW,CAEpB,IAAIjF,EAAW,kBAAoBxQ,EAAS0V,KAExCC,EAAiB/hB,KAAKqX,MAAMrM,IAAK4R,GAE9BmF,IAENA,EAAiB,IAAIpiB,EAAMqiB,eAC3BriB,EAAMsiB,SAAS9hB,UAAU6P,KAAKjQ,KAAMgiB,EAAgB3V,GACpD2V,EAAe7b,MAAM8J,KAAM5D,EAASlG,OACpC6b,EAAezV,IAAMF,EAASE,IAC9ByV,EAAeG,iBAAkB,EAEjCliB,KAAKqX,MAAM1Q,IAAKiW,EAAUmF,IAI3B3V,EAAW2V,OAEL,GAAKrL,EAAKyL,OAAS,CAErBvF,EAAW,qBAAuBxQ,EAAS0V,KAA/C,IAEIM,EAAepiB,KAAKqX,MAAMrM,IAAK4R,GAE5BwF,IAENA,EAAe,IAAIziB,EAAM0iB,kBACzB1iB,EAAMsiB,SAAS9hB,UAAU6P,KAAKjQ,KAAMqiB,EAAchW,GAClDgW,EAAalc,MAAM8J,KAAM5D,EAASlG,OAElClG,KAAKqX,MAAM1Q,IAAKiW,EAAUwF,IAI3BhW,EAAWgW,EAKZ,GAAKd,GAAqBE,GAAmBC,GAAkBC,GAAeC,EAAkB,CAE3F/E,EAAW,kBAAoBxQ,EAAS0V,KAAO,IAE9C1V,EAASzC,mCAAmCiT,GAAY,wBACxD8E,IAAc9E,GAAY,aAC1B0E,IAAoB1E,GAAY,oBAChC4E,IAAkB5E,GAAY,kBAC9B6E,IAAiB7E,GAAY,iBAC7B+E,IAAkB/E,GAAY,kBAC9BgF,IAAkBhF,GAAY,kBAEnC,IAAI0F,EAAiBtiB,KAAKqX,MAAMrM,IAAK4R,GAE9B0F,IAENA,EAAiBlW,EAASsD,QAErBgS,IAAcY,EAAeC,UAAW,GACxCjB,IAAoBgB,EAAeE,gBAAiB,GACpDhB,IAAkBc,EAAeG,cAAe,GAChDhB,IAAiBa,EAAeI,aAAc,GAC9Cf,IAAkBW,EAAeK,cAAe,GAChDf,IAAkBU,EAAejI,cAAe,GAErDra,KAAKqX,MAAM1Q,IAAKiW,EAAU0F,IAI3BlW,EAAWkW,EAMPlW,EAASK,YAAqCvI,IAA5BmL,EAAShB,WAAWuU,UAAgD1e,IAA3BmL,EAAShB,WAAWwU,IAEnFxT,EAAS+I,aAAc,MAAO,IAAIzY,EAAMuf,gBAAiB7P,EAAShB,WAAWwU,GAAGta,MAAO,IAKnF6D,EAASc,cAAiBoU,IAE9BlV,EAASc,YAAY4V,GAAM1W,EAASc,YAAY4V,GAI5C1W,EAAS/C,uBAA0BiY,IAEvClV,EAAS/C,qBAAqByZ,GAAM1W,EAAS/C,qBAAqByZ,GAInEpM,EAAKtK,SAAWA,GASjB1G,EAAWvF,UAAUid,aAAe,SAAW2F,GAE9C,IAKIC,EAJA/e,EAAOjE,KAAKiE,KACZ5B,EAAarC,KAAKqC,WAClByF,EAAc7D,EAAKgf,UAAWF,GAG9Blb,KACAqb,EAAqBpb,EAAYzF,eAEjC2F,KAEJ,GAAKkb,EAAoBzgB,EAAWqC,uCAA0C,CAE7E,IAAIqe,EAAc9gB,EAAYI,EAAWqC,uCACzCke,EAAeG,EAAYzb,kBAC3BM,EAAQS,KAAM0a,EAAYvb,aAAcC,EAAgBC,EAf5C9H,YAiBN,GAAKkjB,EAAoBzgB,EAAWmC,qBAAwB,CAElE,IAAIwe,EAAe/gB,EAAYI,EAAWmC,qBAC1Coe,EAAeI,EAAa1b,kBAC5BM,EAAQS,KAAM2a,EAAaxb,aAAcC,EAAgBC,EArB7C9H,WAuBN,CAKNgjB,EAAerjB,EAAM+J,qBAErB,IAAIxB,EAAoBJ,EAAYK,yBAKpC,GAHAN,EAAe3B,MAAQ,IAAIvG,EAAMwG,MAAO,EAAK,EAAK,GAClD0B,EAAeI,QAAU,EAEpBG,MAAMC,QAASH,EAAkBI,iBAAoB,CAEzD,IAAIC,EAAQL,EAAkBI,gBAE9BT,EAAe3B,MAAME,UAAWmC,GAChCV,EAAeI,QAAUM,EAAO,QAIWrE,IAAvCgE,EAAkBM,kBAEtBR,EAAQS,KA9CGzI,KA8CU0I,cAAeb,EAAgB,MAAOK,EAAkBM,mBAI9EX,EAAewD,eAAiDnH,IAArCgE,EAAkBmb,eAA+Bnb,EAAkBmb,eAAiB,EAC/Gxb,EAAeyD,eAAkDpH,IAAtCgE,EAAkBob,gBAAgCpb,EAAkBob,gBAAkB,OAE7Dpf,IAA/CgE,EAAkBqb,2BAEtBvb,EAAQS,KAvDGzI,KAuDU0I,cAAeb,EAAgB,eAAgBK,EAAkBqb,2BACtFvb,EAAQS,KAxDGzI,KAwDU0I,cAAeb,EAAgB,eAAgBK,EAAkBqb,6BAMvD,IAA5Bzb,EAAY0b,cAEhB3b,EAAe4b,KAAO9jB,EAAM+jB,YAI7B,IAAIC,EAAY7b,EAAY6b,WAAanO,EA2DzC,GAzDKmO,IAAcnO,GAElB3N,EAAe+b,aAAc,EAG7B/b,EAAegc,YAAa,IAI5Bhc,EAAe+b,aAAc,EAExBD,IAAcnO,IAElB3N,EAAeic,eAAwC5f,IAA5B4D,EAAYic,YAA4Bjc,EAAYic,YAAc,UAM5D7f,IAA9B4D,EAAYkc,eAA+BhB,IAAiBrjB,EAAMgI,oBAEtEK,EAAQS,KA3FIzI,KA2FS0I,cAAeb,EAAgB,YAAaC,EAAYkc,gBAE7Enc,EAAeqF,YAAc,IAAIvN,EAAM2J,QAAS,EAAG,QAEVpF,IAApC4D,EAAYkc,cAAc5a,OAE9BvB,EAAeqF,YAAYxG,IAAKoB,EAAYkc,cAAc5a,MAAOtB,EAAYkc,cAAc5a,aAMvDlF,IAAjC4D,EAAYmc,kBAAkCjB,IAAiBrjB,EAAMgI,oBAEzEK,EAAQS,KAzGIzI,KAyGS0I,cAAeb,EAAgB,QAASC,EAAYmc,wBAE1B/f,IAA1C4D,EAAYmc,iBAAiBC,WAEjCrc,EAAe6E,eAAiB5E,EAAYmc,iBAAiBC,gBAM3BhgB,IAA/B4D,EAAYqc,gBAAgCnB,IAAiBrjB,EAAMgI,oBAEvEE,EAAeiE,UAAW,IAAInM,EAAMwG,OAAQC,UAAW0B,EAAYqc,sBAI/BjgB,IAAhC4D,EAAYsc,iBAAiCpB,IAAiBrjB,EAAMgI,mBAExEK,EAAQS,KA3HIzI,KA2HS0I,cAAeb,EAAgB,cAAeC,EAAYsc,kBAI3ElB,EAAoBzgB,EAAWiC,yBAA4B,CAE/D,IAAI2f,EAAqBhiB,EAAYI,EAAWiC,yBAChDse,EAAeqB,EAAmB3c,kBAClCM,EAAQS,KAAM4b,EAAmBzc,aAAcC,GAAkBxF,WAAY6gB,GAnIjEljB,OAuIb,OAAOwH,QAAQmB,IAAKX,GAAUmH,KAAM,WAEnC,IAAI/C,EAsBJ,OAlBCA,EAFI4W,IAAiBxZ,EAEVnH,EAAYI,EAAWqC,uCAAwCqH,eAAgBtE,GAI/E,IAAImb,EAAcnb,GAIzBC,EAAYnF,OAAOyJ,EAASzJ,KAAOmF,EAAYnF,MAG/CyJ,EAASE,MAAMF,EAASE,IAAIgY,SAAW3kB,EAAM4kB,cAC7CnY,EAASQ,cAAcR,EAASQ,YAAY0X,SAAW3kB,EAAM4kB,cAElEjO,EAAwBlK,EAAUtE,GAE7BA,EAAYzF,YAAa2T,EAAgC3T,EAAY+J,EAAUtE,GAE7EsE,KA0QT1G,EAAWvF,UAAUqkB,eAAiB,SAAWC,GAEhD,IAAI1c,EAAS/H,KACTqC,EAAarC,KAAKqC,WAClBgV,EAAQrX,KAAK0X,eAEjB,SAASgN,EAAsBzW,GAE9B,OAAO5L,EAAYI,EAAWuC,4BAC5BgJ,gBAAiBC,EAAWlG,GAC5BoH,KAAM,SAAWE,GAEjB,OAAO0I,EAAwB1I,EAAUpB,EAAWlG,KAQvD,IAFA,IAnqC4BiQ,EAExB2M,EAiqCA3c,KAEM3D,EAAI,EAAGuS,EAAK6N,EAAWphB,OAAQgB,EAAIuS,EAAIvS,IAAO,CAEvD,IAaKugB,EAbD3W,EAAYwW,EAAYpgB,GACxBuY,QAtqCD+H,GAAAA,GAFwB3M,EAwqCQ/J,GAtqCF5L,YAAc2V,EAAa3V,WAAYI,EAAWuC,6BAKrE,SAAW2f,EAAexW,WACrC,IAAMwW,EAAerM,QACrB,IAAMtB,EAAqB2N,EAAetW,YAI/B2J,EAAaM,QAAU,IAAMtB,EAAqBgB,EAAa3J,YAAe,IAAM2J,EAAa6M,MA8pC3GC,EAASzN,EAAOuF,GAEpB,GAAKkI,EAGJ9c,EAAQS,KAAMqc,EAAOC,cASpBH,EAHI3W,EAAU5L,YAAc4L,EAAU5L,WAAYI,EAAWuC,4BAG3C0f,EAAsBzW,GAKtB8J,EAAwB,IAAIpY,EAAMqlB,eAAkB/W,EAAWlG,GAKlFsP,EAAOuF,IAAe3O,UAAWA,EAAW8W,QAASH,GAErD5c,EAAQS,KAAMmc,GAMhB,OAAOpd,QAAQmB,IAAKX,IASrBtC,EAAWvF,UAAU6c,SAAW,SAAWiI,GAU1C,IARA,IAr4C+B5N,EAq4C3BtP,EAAS/H,KAGT2W,EAFO3W,KAAKiE,KAEG+X,OAAQiJ,GACvBR,EAAa9N,EAAQ8N,WAErBzc,KAEM3D,EAAI,EAAGuS,EAAK6N,EAAWphB,OAAQgB,EAAIuS,EAAIvS,IAAO,CAEvD,IAAI+H,OAAwClI,IAA7BugB,EAAYpgB,GAAI+H,eA74CIlI,KAFLmT,EAg5CJrX,KAAKqX,OA94CF,kBAE7BA,EAAyB,gBAAI,IAAI1X,EAAM+J,sBACtCxD,MAAO,SACP4F,SAAU,EACVT,UAAW,EACXC,UAAW,EACXsY,aAAa,EACbsB,WAAW,EACXzB,KAAM9jB,EAAMwlB,aAKP9N,EAAyB,iBAi4C5BrX,KAAKkP,cAAe,WAAYuV,EAAYpgB,GAAI+H,UAEnDpE,EAAQS,KAAM2D,GAMf,OAFApE,EAAQS,KAAMV,EAAOyc,eAAgBC,IAE9Bjd,QAAQmB,IAAKX,GAAUmH,KAAM,SAAWiW,GAO9C,IALA,IAAInC,EAAYmC,EAAQliB,MAAO,EAAGkiB,EAAQ/hB,OAAS,GAC/CgiB,EAAaD,EAASA,EAAQ/hB,OAAS,GAEvC2Y,KAEM3X,EAAI,EAAGuS,EAAKyO,EAAWhiB,OAAQgB,EAAIuS,EAAIvS,IAAO,CAEvD,IAKIqS,EALArH,EAAWgW,EAAYhhB,GACvB4J,EAAYwW,EAAYpgB,GAMxB+H,EAAW6W,EAAW5e,GAE1B,GAAK4J,EAAU4W,OAAS9S,GACvB9D,EAAU4W,OAAS9S,GACnB9D,EAAU4W,OAAS9S,QACA7N,IAAnB+J,EAAU4W,MAOkB,KAJ5BnO,GAAiC,IAA1BC,EAAQgG,cACZ,IAAIhd,EAAM2lB,YAAajW,EAAUjD,GACjC,IAAIzM,EAAM4lB,KAAMlW,EAAUjD,IAEnBuQ,eAA4BjG,EAAKrH,SAAShB,WAAWmX,WAAWvW,YAIzEyH,EAAK+O,uBAIDxX,EAAU4W,OAAS9S,EAEvB2E,EAAKrH,SAAWoL,EAAqB/D,EAAKrH,SAAU1P,EAAM+lB,uBAE/CzX,EAAU4W,OAAS9S,IAE9B2E,EAAKrH,SAAWoL,EAAqB/D,EAAKrH,SAAU1P,EAAMqb,2BAIrD,GAAK/M,EAAU4W,OAAS9S,EAE9B2E,EAAO,IAAI/W,EAAMgmB,aAActW,EAAUjD,QAEnC,GAAK6B,EAAU4W,OAAS9S,EAE9B2E,EAAO,IAAI/W,EAAMimB,KAAMvW,EAAUjD,QAE3B,GAAK6B,EAAU4W,OAAS9S,EAE9B2E,EAAO,IAAI/W,EAAMkmB,SAAUxW,EAAUjD,OAE/B,CAAA,GAAK6B,EAAU4W,OAAS9S,EAM9B,MAAM,IAAIzO,MAAO,iDAAmD2K,EAAU4W,MAJ9EnO,EAAO,IAAI/W,EAAMmmB,OAAQzW,EAAUjD,GAQ/BhM,OAAO8W,KAAMR,EAAKrH,SAASiL,iBAAkBjX,OAAS,GAE1DoT,EAAoBC,EAAMC,GAI3BD,EAAK/T,KAAOgU,EAAQhU,MAAU,QAAUsiB,EAEnCI,EAAWhiB,OAAS,IAAIqT,EAAK/T,MAAQ,IAAM0B,GAEhDiS,EAAwBI,EAAMC,GAE9B5O,EAAOsZ,oBAAqB3K,GAE5BsF,EAAOvT,KAAMiO,GAId,GAAuB,IAAlBsF,EAAO3Y,OAEX,OAAO2Y,EAAQ,GAIhB,IAAI+J,EAAQ,IAAIpmB,EAAMqmB,MAEtB,IAAU3hB,EAAI,EAAGuS,EAAKoF,EAAO3Y,OAAQgB,EAAIuS,EAAIvS,IAE5C0hB,EAAMpf,IAAKqV,EAAQ3X,IAIpB,OAAO0hB,KAWTrgB,EAAWvF,UAAUqd,WAAa,SAAWyI,GAE5C,IAAIC,EACAC,EAAYnmB,KAAKiE,KAAKwX,QAASwK,GAC/Bxc,EAAS0c,EAAWA,EAAU7f,MAElC,GAAOmD,EAqBP,MAdwB,gBAAnB0c,EAAU7f,KAEd4f,EAAS,IAAIvmB,EAAMymB,kBAAmBzmB,EAAM0mB,UAAUC,SAAU7c,EAAO8c,MAAQ9c,EAAO+c,aAAe,EAAG/c,EAAOgd,OAAS,EAAGhd,EAAOid,MAAQ,KAE5G,iBAAnBP,EAAU7f,OAErB4f,EAAS,IAAIvmB,EAAMgnB,mBAAoBld,EAAOmd,MAAS,EAAGnd,EAAOmd,KAAO,EAAGnd,EAAOod,KAAO,EAAGpd,EAAOod,MAAS,EAAGpd,EAAOgd,MAAOhd,EAAOid,OAIhIP,EAAUxjB,OAAOujB,EAAOvjB,KAAOwjB,EAAUxjB,MAE9C2T,EAAwB4P,EAAQC,GAEzB3e,QAAQC,QAASye,GAnBvB7kB,QAAQoE,KAAM,iDA4BhBC,EAAWvF,UAAUmd,SAAW,SAAWnB,GAE1C,IAAI2K,EAAU9mB,KAAKiE,KAAK6X,MAAOK,GAE3B4K,GAAc1K,OAAQyK,EAAQzK,QAElC,YAAqCnY,IAAhC4iB,EAAQE,oBAELxf,QAAQC,QAASsf,GAIlB/mB,KAAKkP,cAAe,WAAY4X,EAAQE,qBAAsB7X,KAAM,SAAWgJ,GAIrF,OAFA4O,EAAUC,oBAAsB7O,EAEzB4O,KAWTrhB,EAAWvF,UAAUod,cAAgB,SAAW0J,GAY/C,IAVA,IAEIC,EAFOlnB,KAAKiE,KAEQuX,WAAYyL,GAEhCE,KACAC,KACAC,KACAC,KACAC,KAEMljB,EAAI,EAAGuS,EAAKsQ,EAAaM,SAASnkB,OAAQgB,EAAIuS,EAAIvS,IAAO,CAElE,IAAIojB,EAAUP,EAAaM,SAAUnjB,GACjCuc,EAAUsG,EAAarG,SAAU4G,EAAQ7G,SACzCpa,EAASihB,EAAQjhB,OACjB7D,OAAuBuB,IAAhBsC,EAAOkhB,KAAqBlhB,EAAOkhB,KAAOlhB,EAAOmhB,GACxDC,OAAoC1jB,IAA5BgjB,EAAaW,WAA2BX,EAAaW,WAAYjH,EAAQgH,OAAUhH,EAAQgH,MACnGE,OAAqC5jB,IAA5BgjB,EAAaW,WAA2BX,EAAaW,WAAYjH,EAAQkH,QAAWlH,EAAQkH,OAEzGX,EAAa1e,KAAMzI,KAAKkP,cAAe,OAAQvM,IAC/CykB,EAAsB3e,KAAMzI,KAAKkP,cAAe,WAAY0Y,IAC5DP,EAAuB5e,KAAMzI,KAAKkP,cAAe,WAAY4Y,IAC7DR,EAAgB7e,KAAMmY,GACtB2G,EAAe9e,KAAMjC,GAItB,OAAOgB,QAAQmB,KAEdnB,QAAQmB,IAAKwe,GACb3f,QAAQmB,IAAKye,GACb5f,QAAQmB,IAAK0e,GACb7f,QAAQmB,IAAK2e,GACb9f,QAAQmB,IAAK4e,KAEVpY,KAAM,SAAWkM,GAUpB,IARA,IAAIO,EAAQP,EAAc,GACtB0M,EAAiB1M,EAAc,GAC/B2M,EAAkB3M,EAAc,GAChCwF,EAAWxF,EAAc,GACzBxC,EAAUwC,EAAc,GAExB4M,KAEM5jB,EAAI,EAAGuS,EAAKgF,EAAMvY,OAAQgB,EAAIuS,EAAIvS,IAAO,CAElD,IAAIqjB,EAAO9L,EAAOvX,GACd6jB,EAAgBH,EAAgB1jB,GAChC8jB,EAAiBH,EAAiB3jB,GAClCuc,EAAUC,EAAUxc,GACpBmC,EAASqS,EAASxU,GAEtB,QAAcH,IAATwjB,EAAL,CAKA,IAAIU,EAEJ,OALAV,EAAKW,eACLX,EAAKY,kBAAmB,EAIfvT,EAAiBvO,EAAOzF,OAEhC,KAAKgU,EAAgBE,QAEpBmT,EAAqBzoB,EAAM4oB,oBAC3B,MAED,KAAKxT,EAAgBnF,SAEpBwY,EAAqBzoB,EAAM6oB,wBAC3B,MAED,KAAKzT,EAAgBtO,SACrB,KAAKsO,EAAgB3L,MACrB,QAECgf,EAAqBzoB,EAAM8oB,oBAK7B,IAAIC,EAAahB,EAAK/kB,KAAO+kB,EAAK/kB,KAAO+kB,EAAK5F,KAE1C6G,OAA0CzkB,IAA1B0c,EAAQ+H,cAA8BzT,EAAe0L,EAAQ+H,eAAkBhpB,EAAM0V,kBAErGyB,KAEC/B,EAAiBvO,EAAOzF,QAAWgU,EAAgBE,QAGvDyS,EAAKkB,SAAU,SAAW1S,IAEF,IAAlBA,EAAO2S,QAAmB3S,EAAOW,uBAErCC,EAAYrO,KAAMyN,EAAOvT,KAAOuT,EAAOvT,KAAOuT,EAAO4L,QAQvDhL,EAAYrO,KAAMigB,GAInB,IAAII,EAAcX,EAAe5f,MAEjC,GAAK4f,EAAelZ,WAAa,CAEhC,IAAI7F,EAEJ,GAAK0f,EAAYvoB,cAAgB0R,UAEhC7I,EAAQ,EAAI,SAEN,GAAK0f,EAAYvoB,cAAgBgC,WAEvC6G,EAAQ,EAAI,SAEN,GAAK0f,EAAYvoB,aAAe6R,WAEtChJ,EAAQ,EAAI,UAEN,CAAA,GAAK0f,EAAYvoB,cAAgB+R,YAMvC,MAAM,IAAIhP,MAAO,iEAJjB8F,EAAQ,EAAI,MAUb,IAFA,IAAI2f,EAAS,IAAIrW,aAAcoW,EAAYzlB,QAEjC2lB,EAAI,EAAGC,EAAKH,EAAYzlB,OAAQ2lB,EAAIC,EAAID,IAEjDD,EAAQC,GAAMF,EAAaE,GAAM5f,EAIlC0f,EAAcC,EAIf,IAAUC,EAAI,EAAGC,EAAKnS,EAAYzT,OAAQ2lB,EAAIC,EAAID,IAAO,CAExD,IAAIE,EAAQ,IAAId,EACftR,EAAakS,GAAM,IAAMjU,EAAiBvO,EAAOzF,MACjDmnB,EAAc3f,MACdugB,EACAH,GAI8B,gBAA1B/H,EAAQ+H,gBAEZO,EAAMC,kBAAoB,SAAkD/Y,GAM3E,OAAO,IAAI1C,EAA4B1N,KAAKopB,MAAOppB,KAAKqQ,OAAQrQ,KAAKqpB,eAAiB,EAAGjZ,IAK1F8Y,EAAMC,kBAAkBG,2CAA4C,GAIrErB,EAAOxf,KAAMygB,KAMf,IAAIvmB,EAAOukB,EAAavkB,KAAOukB,EAAavkB,KAAO,aAAeskB,EAElE,OAAO,IAAItnB,EAAM4pB,cAAe5mB,OAAMuB,EAAW+jB,MAWnDviB,EAAWvF,UAAU4c,SAAW,SAAWR,GAE1C,IAWKvU,EAXD/D,EAAOjE,KAAKiE,KACZ5B,EAAarC,KAAKqC,WAClB0F,EAAS/H,KAETic,EAAiBhY,EAAKgY,eACtBC,EAAWjY,EAAKiY,SAEhBO,EAAUxY,EAAK2X,MAAOW,GAE1B,OAEKvU,UAEkB9D,IAAjBuY,EAAQ/F,MAEZ1O,EAAQS,KAAMV,EAAOmH,cAAe,OAAQuN,EAAQ/F,MAAOvH,KAAM,SAAWuH,GAE3E,IAAIgR,EAEJ,GAAKzL,EAAgBQ,EAAQ/F,MAAS,EAAI,CAEzC,IAAI8S,EAActN,EAAUO,EAAQ/F,SAEpCgR,EAAOhR,EAAKhH,SACP/M,MAAQ,aAAe6mB,OAI5B9B,EAAOhR,EAqBR,YAhByBxS,IAApBuY,EAAQxH,SAEZyS,EAAKkB,SAAU,SAAWa,GAEzB,GAAOA,EAAEZ,OAET,IAAM,IAAIxkB,EAAI,EAAGuS,EAAK6F,EAAQxH,QAAQ5R,OAAQgB,EAAIuS,EAAIvS,IAErDolB,EAAE5S,sBAAuBxS,GAAMoY,EAAQxH,QAAS5Q,KAQ5CqjB,UAMexjB,IAAnBuY,EAAQyJ,QAEZle,EAAQS,KAAMV,EAAOmH,cAAe,SAAUuN,EAAQyJ,SAIlDzJ,EAAQpa,YACToa,EAAQpa,WAAYI,EAAW+B,2BACgCN,IAA/DuY,EAAQpa,WAAYI,EAAW+B,qBAAsBklB,OAExD1hB,EAAQS,KAAMV,EAAOmH,cAAe,QAASuN,EAAQpa,WAAYI,EAAW+B,qBAAsBklB,QAI5FliB,QAAQmB,IAAKX,IAEfmH,KAAM,SAAWmI,GAEtB,IAAIoQ,EAqBJ,IAhBCA,GAFuB,IAAnBjL,EAAQH,OAEL,IAAI3c,EAAMgqB,KAENrS,EAAQjU,OAAS,EAErB,IAAI1D,EAAMqmB,MAEa,IAAnB1O,EAAQjU,OAEZiU,EAAS,GAIT,IAAI3X,EAAMiqB,YAIJtS,EAAS,GAEtB,IAAM,IAAIjT,EAAI,EAAGuS,EAAKU,EAAQjU,OAAQgB,EAAIuS,EAAIvS,IAE7CqjB,EAAK/gB,IAAK2Q,EAASjT,IAiBrB,GAXKoY,EAAQ9Z,OAEZ+kB,EAAKtR,SAASzT,KAAO8Z,EAAQ9Z,KAC7B+kB,EAAK/kB,KAAOhD,EAAMkqB,gBAAgBC,iBAAkBrN,EAAQ9Z,OAI7D2T,EAAwBoR,EAAMjL,GAEzBA,EAAQpa,YAAa2T,EAAgC3T,EAAYqlB,EAAMjL,QAEpDvY,IAAnBuY,EAAQsN,OAAuB,CAEnC,IAAIA,EAAS,IAAIpqB,EAAMqqB,QACvBD,EAAO3jB,UAAWqW,EAAQsN,QAC1BrC,EAAKuC,aAAcF,aAIU7lB,IAAxBuY,EAAQzH,aAEZ0S,EAAKjhB,SAASL,UAAWqW,EAAQzH,kBAIR9Q,IAArBuY,EAAQ7M,UAEZ8X,EAAKwC,WAAW9jB,UAAWqW,EAAQ7M,eAIb1L,IAAlBuY,EAAQrT,OAEZse,EAAKte,MAAMhD,UAAWqW,EAAQrT,OAMhC,OAAOse,KAWThiB,EAAWvF,UAAU2c,UAAY,WAIhC,SAASqN,EAAmBC,EAAQC,EAAcpmB,EAAM8D,GAEvD,IAAI0U,EAAUxY,EAAK2X,MAAOwO,GAE1B,OAAOriB,EAAOmH,cAAe,OAAQkb,GAASjb,KAAM,SAAWuY,GAE9D,YAAsBxjB,IAAjBuY,EAAQC,KAA4BgL,EAMlC3f,EAAOmH,cAAe,OAAQuN,EAAQC,MAAOvN,KAAM,SAAWuN,GAMpE,IAFA,IAAI4N,KAEMjmB,EAAI,EAAGuS,GAJjBmQ,EAAYrK,GAIoBL,OAAOhZ,OAAQgB,EAAIuS,EAAIvS,IAEtDimB,EAAc7hB,KAAMV,EAAOmH,cAAe,OAAQ6X,EAAU1K,OAAQhY,KAIrE,OAAOmD,QAAQmB,IAAK2hB,KAEjBnb,KAAM,SAAWob,GAuCpB,OArCA7C,EAAKkB,SAAU,SAAWlS,GAEzB,GAAOA,EAAKmS,OAAZ,CAKA,IAHA,IAAI2B,KACAC,KAEMzB,EAAI,EAAGC,EAAKsB,EAAWlnB,OAAQ2lB,EAAIC,EAAID,IAAO,CAEvD,IAAI0B,EAAYH,EAAYvB,GAE5B,GAAK0B,EAAY,CAEhBF,EAAM/hB,KAAMiiB,GAEZ,IAAIC,EAAM,IAAIhrB,EAAMqqB,aAEmB9lB,IAAlC6iB,EAAUC,qBAEd2D,EAAIvkB,UAAW2gB,EAAUC,oBAAoBze,MAAW,GAAJygB,GAIrDyB,EAAahiB,KAAMkiB,QAInBtpB,QAAQoE,KAAM,mDAAoDshB,EAAU1K,OAAQ2M,IAMtFtS,EAAKkU,KAAM,IAAIjrB,EAAMkrB,SAAUL,EAAOC,GAAgB/T,EAAKoU,gBAIrDpD,IAvDR,IAAIX,IA2DD5X,KAAM,SAAWuY,GAIpB2C,EAAa1jB,IAAK+gB,GAElB,IAAI1f,KAEJ,GAAKyU,EAAQsO,SAIZ,IAFA,IAAIA,EAAWtO,EAAQsO,SAEb1mB,EAAI,EAAGuS,EAAKmU,EAAS1nB,OAAQgB,EAAIuS,EAAIvS,IAAO,CAErD,IAAI2mB,EAAQD,EAAU1mB,GACtB2D,EAAQS,KAAM0hB,EAAmBa,EAAOtD,EAAMzjB,EAAM8D,IAMtD,OAAOP,QAAQmB,IAAKX,KAMtB,OAAO,SAAoBijB,GAE1B,IAAIhnB,EAAOjE,KAAKiE,KACZ5B,EAAarC,KAAKqC,WAClB6oB,EAAWlrB,KAAKiE,KAAKsX,OAAQ0P,GAK7B3P,EAAQ,IAAI3b,EAAMqmB,MACjBkF,EAASvoB,OAAO2Y,EAAM3Y,KAAOuoB,EAASvoB,MAE3C2T,EAAwBgF,EAAO4P,GAE1BA,EAAS7oB,YAAa2T,EAAgC3T,EAAYiZ,EAAO4P,GAM9E,IAJA,IAAIC,EAAUD,EAAStP,UAEnB5T,KAEM3D,EAAI,EAAGuS,EAAKuU,EAAQ9nB,OAAQgB,EAAIuS,EAAIvS,IAE7C2D,EAAQS,KAAM0hB,EAAmBgB,EAAS9mB,GAAKiX,EAAOrX,EAjB1CjE,OAqBb,OAAOwH,QAAQmB,IAAKX,GAAUmH,KAAM,WAEnC,OAAOmM,KAhIuB,GAwI1B1b,EApsGW,GAwsGZD,EAAMC","file":"../../loaders/GLTFLoader.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author Rich Tibbett / https://github.com/richtr\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Tony Parisi / http://www.tonyparisi.com/\n\t * @author Takahiro / https://github.com/takahirox\n\t * @author Don McCurdy / https://www.donmccurdy.com\n\t */\n\n\tTHREE.GLTFLoader = ( function () {\n\n\t\tfunction GLTFLoader( manager ) {\n\n\t\t\tTHREE.Loader.call( this, manager );\n\n\t\t\tthis.dracoLoader = null;\n\t\t\tthis.ddsLoader = null;\n\n\t\t}\n\n\t\tGLTFLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\t\t\tconstructor: GLTFLoader,\n\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tvar resourcePath;\n\n\t\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\t\tresourcePath = this.path;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\t\t}\n\n\t\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t};\n\n\t\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\t\tloader.setPath( this.path );\n\t\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t\t}\n\n\t\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t\t}, _onError );\n\n\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t_onError( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, _onError );\n\n\t\t\t},\n\n\t\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\t\tvar content;\n\t\t\t\tvar extensions = {};\n\n\t\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\t\tcontent = data;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar json = JSON.parse( content );\n\n\t\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n\t\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsClearcoatExtension();\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\t\tmanager: this.manager\n\n\t\t\t\t} );\n\n\t\t\t\tparser.parse( onLoad, onError );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t/* GLTFREGISTRY */\n\n\t\tfunction GLTFRegistry() {\n\n\t\t\tvar objects = {};\n\n\t\t\treturn\t{\n\n\t\t\t\tget: function ( key ) {\n\n\t\t\t\t\treturn objects[ key ];\n\n\t\t\t\t},\n\n\t\t\t\tadd: function ( key, object ) {\n\n\t\t\t\t\tobjects[ key ] = object;\n\n\t\t\t\t},\n\n\t\t\t\tremove: function ( key ) {\n\n\t\t\t\t\tdelete objects[ key ];\n\n\t\t\t\t},\n\n\t\t\t\tremoveAll: function () {\n\n\t\t\t\t\tobjects = {};\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t/*********************************/\n\t\t/********** EXTENSIONS ***********/\n\t\t/*********************************/\n\n\t\tvar EXTENSIONS = {\n\t\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t\t};\n\n\t\t/**\n\t\t * DDS Texture Extension\n\t\t *\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t\t *\n\t\t */\n\t\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\t\tif ( ! ddsLoader ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t\t}\n\n\t\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\t\tthis.ddsLoader = ddsLoader;\n\n\t\t}\n\n\t\t/**\n\t\t * Punctual Lights Extension\n\t\t *\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t\t */\n\t\tfunction GLTFLightsExtension( json ) {\n\n\t\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\t\tthis.lightDefs = extension.lights || [];\n\n\t\t}\n\n\t\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\t\tvar lightNode;\n\n\t\t\tvar color = new THREE.Color( 0xffffff );\n\t\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\t\tswitch ( lightDef.type ) {\n\n\t\t\t\tcase 'directional':\n\t\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'point':\n\t\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\t\tlightNode.distance = range;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'spot':\n\t\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\t\tlightNode.distance = range;\n\t\t\t\t\t// Handle spotlight properties.\n\t\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t\t}\n\n\t\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\t\tlightNode.decay = 2;\n\n\t\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\t\treturn Promise.resolve( lightNode );\n\n\t\t};\n\n\t\t/**\n\t\t * Unlit Materials Extension\n\t\t *\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t\t */\n\t\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t\t}\n\n\t\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\t\treturn THREE.MeshBasicMaterial;\n\n\t\t};\n\n\t\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\t\tvar pending = [];\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\t\tif ( metallicRoughness ) {\n\n\t\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t};\n\n\t\t/**\n\t\t * Clearcoat Materials Extension\n\t\t *\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t\t */\n\t\tfunction GLTFMaterialsClearcoatExtension() {\n\n\t\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t\t}\n\n\t\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n\n\t\t\treturn THREE.MeshPhysicalMaterial;\n\n\t\t};\n\n\t\tGLTFMaterialsClearcoatExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\t\tvar pending = [];\n\n\t\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t\t}\n\n\t\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t\t}\n\n\t\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t\t}\n\n\t\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\t\tmaterialParams.clearcoatNormalScale = new THREE.Vector2( scale, scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t};\n\n\t\t/* BINARY EXTENSION */\n\t\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\t\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\t\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\t\tfunction GLTFBinaryExtension( data ) {\n\n\t\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\t\tthis.content = null;\n\t\t\tthis.body = null;\n\n\t\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\t\tthis.header = {\n\t\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\t\tlength: headerView.getUint32( 8, true )\n\t\t\t};\n\n\t\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t\t}\n\n\t\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\t\tvar chunkIndex = 0;\n\n\t\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\t\tchunkIndex += 4;\n\n\t\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\t\tchunkIndex += 4;\n\n\t\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t\t}\n\n\t\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\t\tchunkIndex += chunkLength;\n\n\t\t\t}\n\n\t\t\tif ( this.content === null ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * DRACO Mesh Compression Extension\n\t\t *\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t\t */\n\t\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\t\tif ( ! dracoLoader ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t\t}\n\n\t\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\t\tthis.json = json;\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\tthis.dracoLoader.preload();\n\n\t\t}\n\n\t\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar dracoLoader = this.dracoLoader;\n\t\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\t\tvar threeAttributeMap = {};\n\t\t\tvar attributeNormalizedMap = {};\n\t\t\tvar attributeTypeMap = {};\n\n\t\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t\t}\n\n\t\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Texture Transform Extension\n\t\t *\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t\t */\n\t\tfunction GLTFTextureTransformExtension() {\n\n\t\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t\t}\n\n\t\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\t\ttexture = texture.clone();\n\n\t\t\tif ( transform.offset !== undefined ) {\n\n\t\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t\t}\n\n\t\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\t\ttexture.rotation = transform.rotation;\n\n\t\t\t}\n\n\t\t\tif ( transform.scale !== undefined ) {\n\n\t\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t\t}\n\n\t\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\treturn texture;\n\n\t\t};\n\n\t\t/**\n\t\t * Specular-Glossiness Extension\n\t\t *\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t\t */\n\n\t\t/**\n\t\t * A sub class of THREE.StandardMaterial with some of the functionality\n\t\t * changed via the `onBeforeCompile` callback\n\t\t * @pailhead\n\t\t */\n\n\t\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\t\tTHREE.MeshStandardMaterial.call( this );\n\n\t\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t//various chunks that need replacing\n\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t'#endif'\n\t\t\t].join( '\\n' );\n\n\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t'#endif'\n\t\t\t].join( '\\n' );\n\n\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t'#endif'\n\t\t\t].join( '\\n' );\n\n\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t'#endif'\n\t\t\t].join( '\\n' );\n\n\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t].join( '\\n' );\n\n\t\t\tvar uniforms = {\n\t\t\t\tspecular: { value: new THREE.Color().setHex( 0xffffff ) },\n\t\t\t\tglossiness: { value: 1 },\n\t\t\t\tspecularMap: { value: null },\n\t\t\t\tglossinessMap: { value: null }\n\t\t\t};\n\n\t\t\tthis._extraUniforms = uniforms;\n\n\t\t\t// please see #14031 or #13198 for an alternate approach\n\t\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t\t}\n\n\t\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t};\n\n\t\t\t/*eslint-disable*/\n\t\t\tObject.defineProperties(\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\tspecular: {\n\t\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t\t},\n\t\t\t\t\tspecularMap: {\n\t\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t\t},\n\t\t\t\t\tglossiness: {\n\t\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t\t},\n\t\t\t\t\tglossinessMap: {\n\t\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t/*eslint-enable*/\n\t\t\tdelete this.metalness;\n\t\t\tdelete this.roughness;\n\t\t\tdelete this.metalnessMap;\n\t\t\tdelete this.roughnessMap;\n\n\t\t\tthis.setValues( params );\n\n\t\t}\n\n\t\tGLTFMeshStandardSGMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\n\t\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\t\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\t\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.specular.copy( source.specular );\n\t\t\tthis.glossinessMap = source.glossinessMap;\n\t\t\tthis.glossiness = source.glossiness;\n\t\t\tdelete this.metalness;\n\t\t\tdelete this.roughness;\n\t\t\tdelete this.metalnessMap;\n\t\t\tdelete this.roughnessMap;\n\t\t\treturn this;\n\n\t\t};\n\n\t\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\t\treturn {\n\n\t\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\t\tspecularGlossinessParams: [\n\t\t\t\t\t'color',\n\t\t\t\t\t'map',\n\t\t\t\t\t'lightMap',\n\t\t\t\t\t'lightMapIntensity',\n\t\t\t\t\t'aoMap',\n\t\t\t\t\t'aoMapIntensity',\n\t\t\t\t\t'emissive',\n\t\t\t\t\t'emissiveIntensity',\n\t\t\t\t\t'emissiveMap',\n\t\t\t\t\t'bumpMap',\n\t\t\t\t\t'bumpScale',\n\t\t\t\t\t'normalMap',\n\t\t\t\t\t'normalMapType',\n\t\t\t\t\t'displacementMap',\n\t\t\t\t\t'displacementScale',\n\t\t\t\t\t'displacementBias',\n\t\t\t\t\t'specularMap',\n\t\t\t\t\t'specular',\n\t\t\t\t\t'glossinessMap',\n\t\t\t\t\t'glossiness',\n\t\t\t\t\t'alphaMap',\n\t\t\t\t\t'envMap',\n\t\t\t\t\t'envMapIntensity',\n\t\t\t\t\t'refractionRatio',\n\t\t\t\t],\n\n\t\t\t\tgetMaterialType: function () {\n\n\t\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t\t},\n\n\t\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\t\tvar pending = [];\n\n\t\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterialParams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\t\tmaterialParams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pending );\n\n\t\t\t\t},\n\n\t\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\t\tmaterial.fog = true;\n\n\t\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\t\tmaterial.lightMap = null;\n\t\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\t\tmaterial.normalMapType = THREE.TangentSpaceNormalMap;\n\n\t\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t};\n\n\t\t}\n\n\t\t/**\n\t\t * Mesh Quantization Extension\n\t\t *\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t\t */\n\t\tfunction GLTFMeshQuantizationExtension() {\n\n\t\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t\t}\n\n\t\t/*********************************/\n\t\t/********** INTERPOLATION ********/\n\t\t/*********************************/\n\n\t\t// Spline Interpolation\n\t\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\t\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\t}\n\n\t\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\t\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\t\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tvalueSize = this.valueSize,\n\t\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\t\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\t\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer;\n\t\t\tvar values = this.sampleValues;\n\t\t\tvar stride = this.valueSize;\n\n\t\t\tvar stride2 = stride * 2;\n\t\t\tvar stride3 = stride * 3;\n\n\t\t\tvar td = t1 - t0;\n\n\t\t\tvar p = ( t - t0 ) / td;\n\t\t\tvar pp = p * p;\n\t\t\tvar ppp = pp * p;\n\n\t\t\tvar offset1 = i1 * stride3;\n\t\t\tvar offset0 = offset1 - stride3;\n\n\t\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\t\tvar s3 = ppp - pp;\n\t\t\tvar s0 = 1 - s2;\n\t\t\tvar s1 = s3 - pp + p;\n\n\t\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t\t/*********************************/\n\t\t/********** INTERNALS ************/\n\t\t/*********************************/\n\n\t\t/* CONSTANTS */\n\n\t\tvar WEBGL_CONSTANTS = {\n\t\t\tFLOAT: 5126,\n\t\t\t//FLOAT_MAT2: 35674,\n\t\t\tFLOAT_MAT3: 35675,\n\t\t\tFLOAT_MAT4: 35676,\n\t\t\tFLOAT_VEC2: 35664,\n\t\t\tFLOAT_VEC3: 35665,\n\t\t\tFLOAT_VEC4: 35666,\n\t\t\tLINEAR: 9729,\n\t\t\tREPEAT: 10497,\n\t\t\tSAMPLER_2D: 35678,\n\t\t\tPOINTS: 0,\n\t\t\tLINES: 1,\n\t\t\tLINE_LOOP: 2,\n\t\t\tLINE_STRIP: 3,\n\t\t\tTRIANGLES: 4,\n\t\t\tTRIANGLE_STRIP: 5,\n\t\t\tTRIANGLE_FAN: 6,\n\t\t\tUNSIGNED_BYTE: 5121,\n\t\t\tUNSIGNED_SHORT: 5123\n\t\t};\n\n\t\tvar WEBGL_COMPONENT_TYPES = {\n\t\t\t5120: Int8Array,\n\t\t\t5121: Uint8Array,\n\t\t\t5122: Int16Array,\n\t\t\t5123: Uint16Array,\n\t\t\t5125: Uint32Array,\n\t\t\t5126: Float32Array\n\t\t};\n\n\t\tvar WEBGL_FILTERS = {\n\t\t\t9728: THREE.NearestFilter,\n\t\t\t9729: THREE.LinearFilter,\n\t\t\t9984: THREE.NearestMipmapNearestFilter,\n\t\t\t9985: THREE.LinearMipmapNearestFilter,\n\t\t\t9986: THREE.NearestMipmapLinearFilter,\n\t\t\t9987: THREE.LinearMipmapLinearFilter\n\t\t};\n\n\t\tvar WEBGL_WRAPPINGS = {\n\t\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t\t10497: THREE.RepeatWrapping\n\t\t};\n\n\t\tvar WEBGL_TYPE_SIZES = {\n\t\t\t'SCALAR': 1,\n\t\t\t'VEC2': 2,\n\t\t\t'VEC3': 3,\n\t\t\t'VEC4': 4,\n\t\t\t'MAT2': 4,\n\t\t\t'MAT3': 9,\n\t\t\t'MAT4': 16\n\t\t};\n\n\t\tvar ATTRIBUTES = {\n\t\t\tPOSITION: 'position',\n\t\t\tNORMAL: 'normal',\n\t\t\tTANGENT: 'tangent',\n\t\t\tTEXCOORD_0: 'uv',\n\t\t\tTEXCOORD_1: 'uv2',\n\t\t\tCOLOR_0: 'color',\n\t\t\tWEIGHTS_0: 'skinWeight',\n\t\t\tJOINTS_0: 'skinIndex',\n\t\t};\n\n\t\tvar PATH_PROPERTIES = {\n\t\t\tscale: 'scale',\n\t\t\ttranslation: 'position',\n\t\t\trotation: 'quaternion',\n\t\t\tweights: 'morphTargetInfluences'\n\t\t};\n\n\t\tvar INTERPOLATION = {\n\t\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\t\tLINEAR: THREE.InterpolateLinear,\n\t\t\tSTEP: THREE.InterpolateDiscrete\n\t\t};\n\n\t\tvar ALPHA_MODES = {\n\t\t\tOPAQUE: 'OPAQUE',\n\t\t\tMASK: 'MASK',\n\t\t\tBLEND: 'BLEND'\n\t\t};\n\n\t\tvar MIME_TYPE_FORMATS = {\n\t\t\t'image/png': THREE.RGBAFormat,\n\t\t\t'image/jpeg': THREE.RGBFormat\n\t\t};\n\n\t\t/* UTILITY FUNCTIONS */\n\n\t\tfunction resolveURL( url, path ) {\n\n\t\t\t// Invalid URL\n\t\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t\t// Host Relative URL\n\t\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t\t}\n\n\t\t\t// Absolute URL http://,https://,//\n\t\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t\t// Data URI\n\t\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t\t// Blob URL\n\t\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t\t// Relative URL\n\t\t\treturn path + url;\n\n\t\t}\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t\t */\n\t\tfunction createDefaultMaterial( cache ) {\n\n\t\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\t\tcache[ 'DefaultMaterial' ] = new THREE.MeshStandardMaterial( {\n\t\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\t\temissive: 0x000000,\n\t\t\t\t\tmetalness: 1,\n\t\t\t\t\troughness: 1,\n\t\t\t\t\ttransparent: false,\n\t\t\t\t\tdepthTest: true,\n\t\t\t\t\tside: THREE.FrontSide\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn cache[ 'DefaultMaterial' ];\n\n\t\t}\n\n\t\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t\t * @param {GLTF.definition} gltfDef\n\t\t */\n\t\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t\t *\n\t\t * @param {THREE.BufferGeometry} geometry\n\t\t * @param {Array<GLTF.Target>} targets\n\t\t * @param {GLTFParser} parser\n\t\t * @return {Promise<THREE.BufferGeometry>}\n\t\t */\n\t\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\t\tvar hasMorphPosition = false;\n\t\t\tvar hasMorphNormal = false;\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t\t}\n\n\t\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\t\tvar pendingPositionAccessors = [];\n\t\t\tvar pendingNormalAccessors = [];\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn Promise.all( [\n\t\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\t\tPromise.all( pendingNormalAccessors )\n\t\t\t] ).then( function ( accessors ) {\n\n\t\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\t\treturn geometry;\n\n\t\t\t} );\n\n\t\t}\n\n\t\t/**\n\t\t * @param {THREE.Mesh} mesh\n\t\t * @param {GLTF.Mesh} meshDef\n\t\t */\n\t\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\t\tmesh.updateMorphTargets();\n\n\t\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\t\tvar geometryKey;\n\n\t\t\tif ( dracoExtension ) {\n\n\t\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t\t} else {\n\n\t\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t\t}\n\n\t\t\treturn geometryKey;\n\n\t\t}\n\n\t\tfunction createAttributesKey( attributes ) {\n\n\t\t\tvar attributesKey = '';\n\n\t\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t\t}\n\n\t\t\treturn attributesKey;\n\n\t\t}\n\n\t\t/* GLTF PARSER */\n\n\t\tfunction GLTFParser( json, extensions, options ) {\n\n\t\t\tthis.json = json || {};\n\t\t\tthis.extensions = extensions || {};\n\t\t\tthis.options = options || {};\n\n\t\t\t// loader object cache\n\t\t\tthis.cache = new GLTFRegistry();\n\n\t\t\t// BufferGeometry caching\n\t\t\tthis.primitiveCache = {};\n\n\t\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t}\n\n\t\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\n\t\t\t// Clear the loader cache\n\t\t\tthis.cache.removeAll();\n\n\t\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\t\tthis.markDefs();\n\n\t\t\tPromise.all( [\n\n\t\t\t\tthis.getDependencies( 'scene' ),\n\t\t\t\tthis.getDependencies( 'animation' ),\n\t\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t\t] ).then( function ( dependencies ) {\n\n\t\t\t\tvar result = {\n\t\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\t\tasset: json.asset,\n\t\t\t\t\tparser: parser,\n\t\t\t\t\tuserData: {}\n\t\t\t\t};\n\n\t\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\t\tonLoad( result );\n\n\t\t\t} ).catch( onError );\n\n\t\t};\n\n\t\t/**\n\t\t * Marks the special nodes/meshes in json for efficient parse.\n\t\t */\n\t\tGLTFParser.prototype.markDefs = function () {\n\n\t\t\tvar nodeDefs = this.json.nodes || [];\n\t\t\tvar skinDefs = this.json.skins || [];\n\t\t\tvar meshDefs = this.json.meshes || [];\n\n\t\t\tvar meshReferences = {};\n\t\t\tvar meshUses = {};\n\n\t\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t\t// references and rename instances below.\n\t\t\t//\n\t\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.json.meshReferences = meshReferences;\n\t\t\tthis.json.meshUses = meshUses;\n\n\t\t};\n\n\t\t/**\n\t\t * Requests the specified dependency asynchronously, with caching.\n\t\t * @param {string} type\n\t\t * @param {number} index\n\t\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t\t */\n\t\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\t\tvar cacheKey = type + ':' + index;\n\t\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\t\tif ( ! dependency ) {\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'scene':\n\t\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'node':\n\t\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'mesh':\n\t\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'accessor':\n\t\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bufferView':\n\t\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'buffer':\n\t\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'material':\n\t\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'skin':\n\t\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'animation':\n\t\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'camera':\n\t\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'light':\n\t\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t\t}\n\n\t\t\treturn dependency;\n\n\t\t};\n\n\t\t/**\n\t\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t\t * @param {string} type\n\t\t * @return {Promise<Array<Object>>}\n\t\t */\n\t\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\t\tvar dependencies = this.cache.get( type );\n\n\t\t\tif ( ! dependencies ) {\n\n\t\t\t\tvar parser = this;\n\t\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t\t} ) );\n\n\t\t\t\tthis.cache.add( type, dependencies );\n\n\t\t\t}\n\n\t\t\treturn dependencies;\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t\t * @param {number} bufferIndex\n\t\t * @return {Promise<ArrayBuffer>}\n\t\t */\n\t\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\t\tvar loader = this.fileLoader;\n\n\t\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t\t}\n\n\t\t\t// If present, GLB container is required to be the first buffer.\n\t\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t\t}\n\n\t\t\tvar options = this.options;\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t\t * @param {number} bufferViewIndex\n\t\t * @return {Promise<ArrayBuffer>}\n\t\t */\n\t\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t\t * @param {number} accessorIndex\n\t\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t\t */\n\t\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar json = this.json;\n\n\t\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t\t// compression extension).\n\t\t\t\treturn Promise.resolve( null );\n\n\t\t\t}\n\n\t\t\tvar pendingBufferViews = [];\n\n\t\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t\t} else {\n\n\t\t\t\tpendingBufferViews.push( null );\n\n\t\t\t}\n\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\t\tvar array, bufferAttribute;\n\n\t\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t\t}\n\n\t\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\t\tbufferAttribute = new THREE.BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn bufferAttribute;\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t\t * @param {number} textureIndex\n\t\t * @return {Promise<THREE.Texture>}\n\t\t */\n\t\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar json = this.json;\n\t\t\tvar options = this.options;\n\t\t\tvar textureLoader = this.textureLoader;\n\n\t\t\tvar URL = self.URL || self.webkitURL;\n\n\t\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\t\tvar source;\n\n\t\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t\t} else {\n\n\t\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t\t}\n\n\t\t\tvar sourceURI = source.uri;\n\t\t\tvar isObjectURL = false;\n\n\t\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\t\tisObjectURL = true;\n\t\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\t\treturn sourceURI;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t\t// Load Texture resource.\n\n\t\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\t\tif ( ! loader ) {\n\n\t\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t\t: textureLoader;\n\n\t\t\t\t}\n\n\t\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( texture ) {\n\n\t\t\t\t// Clean up resources and configure Texture.\n\n\t\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.flipY = false;\n\n\t\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t\t}\n\n\t\t\t\tvar samplers = json.samplers || {};\n\t\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipmapLinearFilter;\n\t\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\t\treturn texture;\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Asynchronously assigns a texture to the given material parameters.\n\t\t * @param {Object} materialParams\n\t\t * @param {string} mapName\n\t\t * @param {Object} mapDef\n\t\t * @return {Promise}\n\t\t */\n\t\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\t\tvar parser = this;\n\n\t\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\t\ttexture.format = THREE.RGBFormat;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\t\tif ( transform ) {\n\n\t\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t\t * already has a material (generated from the glTF material options alone)\n\t\t * but reuse of the same glTF material may require multiple threejs materials\n\t\t * to accomodate different primitive types, defines, etc. New materials will\n\t\t * be created if necessary, and reused from a cache.\n\t\t * @param  {THREE.Object3D} mesh Mesh, Line, or Points instance.\n\t\t */\n\t\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\t\tvar geometry = mesh.geometry;\n\t\t\tvar material = mesh.material;\n\n\t\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\t\tif ( mesh.isPoints ) {\n\n\t\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial = pointsMaterial;\n\n\t\t\t} else if ( mesh.isLine ) {\n\n\t\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial = lineMaterial;\n\n\t\t\t}\n\n\t\t\t// Clone the material if it will be modified\n\t\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial = cachedMaterial;\n\n\t\t\t}\n\n\t\t\t// workarounds for mesh and geometry\n\n\t\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\t\tgeometry.setAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t\t}\n\n\t\t\tmesh.material = material;\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t\t * @param {number} materialIndex\n\t\t * @return {Promise<THREE.Material>}\n\t\t */\n\t\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\t\tvar materialType;\n\t\t\tvar materialParams = {};\n\t\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t\t} else {\n\n\t\t\t\t// Specification:\n\t\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t\t}\n\n\t\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\t\tmaterialParams.transparent = true;\n\n\t\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\t\tmaterialParams.depthWrite = false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterialParams.transparent = false;\n\n\t\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t\t}\n\n\t\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ] ) {\n\n\t\t\t\tvar clearcoatExtension = extensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ];\n\t\t\t\tmaterialType = clearcoatExtension.getMaterialType();\n\t\t\t\tpending.push( clearcoatExtension.extendParams( materialParams, { extensions: materialExtensions }, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\tvar material;\n\n\t\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\n\t\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\t\treturn material;\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * @param {THREE.BufferGeometry} geometry\n\t\t * @param {GLTF.Primitive} primitiveDef\n\t\t * @param {GLTFParser} parser\n\t\t */\n\t\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\t\tvar attributes = primitiveDef.attributes;\n\n\t\t\tvar box = new THREE.Box3();\n\n\t\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\t\tvar min = accessor.min;\n\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\tbox.set(\n\t\t\t\t\t\tnew THREE.Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\t\tnew THREE.Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar targets = primitiveDef.targets;\n\n\t\t\tif ( targets !== undefined ) {\n\n\t\t\t\tvar maxDisplacement = new THREE.Vector3();\n\t\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingBox = box;\n\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\tbox.getCenter( sphere.center );\n\t\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\t\tgeometry.boundingSphere = sphere;\n\n\t\t}\n\n\t\t/**\n\t\t * @param {THREE.BufferGeometry} geometry\n\t\t * @param {GLTF.Primitive} primitiveDef\n\t\t * @param {GLTFParser} parser\n\t\t * @return {Promise<THREE.BufferGeometry>}\n\t\t */\n\t\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\t\tvar attributes = primitiveDef.attributes;\n\n\t\t\tvar pending = [];\n\n\t\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t\t}\n\n\t\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t\t} );\n\n\t\t\t\tpending.push( accessor );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t\t: geometry;\n\n\t\t\t} );\n\n\t\t}\n\n\t\t/**\n\t\t * @param {THREE.BufferGeometry} geometry\n\t\t * @param {Number} drawMode\n\t\t * @return {THREE.BufferGeometry}\n\t\t */\n\t\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\t\tvar index = geometry.getIndex();\n\n\t\t\t// generate index if not present\n\n\t\t\tif ( index === null ) {\n\n\t\t\t\tvar indices = [];\n\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\t\tif ( position !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\t\tindices.push( i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\t\treturn geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar numberOfTriangles = index.count - 2;\n\t\t\tvar newIndices = [];\n\n\t\t\tif ( drawMode === THREE.TriangleFanDrawMode ) {\n\n\t\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t\t}\n\n\t\t\t// build final geometry\n\n\t\t\tvar newGeometry = geometry.clone();\n\t\t\tnewGeometry.setIndex( newIndices );\n\n\t\t\treturn newGeometry;\n\n\t\t}\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t\t *\n\t\t * Creates BufferGeometries from primitives.\n\t\t *\n\t\t * @param {Array<GLTF.Primitive>} primitives\n\t\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t\t */\n\t\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar cache = this.primitiveCache;\n\n\t\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\t\tvar primitive = primitives[ i ];\n\t\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t\t// See if we've already created this geometry\n\t\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\t\tif ( cached ) {\n\n\t\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\t\tpending.push( cached.promise );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar geometryPromise;\n\n\t\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Cache this geometry\n\t\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t\t * @param {number} meshIndex\n\t\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t\t */\n\t\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar json = this.json;\n\n\t\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\t\tvar primitives = meshDef.primitives;\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\t\tpending.push( material );\n\n\t\t\t}\n\n\t\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\t\tvar meshes = [];\n\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\t// 1. create Mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, THREE.TriangleStripDrawMode );\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, THREE.TriangleFanDrawMode );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar group = new THREE.Group();\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t\t * @param {number} cameraIndex\n\t\t * @return {Promise<THREE.Camera>}\n\t\t */\n\t\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\t\tvar camera;\n\t\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\t\tif ( ! params ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\t\tcamera = new THREE.PerspectiveCamera( THREE.MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t\t}\n\n\t\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\t\treturn Promise.resolve( camera );\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t\t * @param {number} skinIndex\n\t\t * @return {Promise<Object>}\n\t\t */\n\t\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t\t}\n\n\t\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\t\treturn skinEntry;\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t\t * @param {number} animationIndex\n\t\t * @return {Promise<THREE.AnimationClip>}\n\t\t */\n\t\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\t\tvar json = this.json;\n\n\t\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\t\tvar pendingNodes = [];\n\t\t\tvar pendingInputAccessors = [];\n\t\t\tvar pendingOutputAccessors = [];\n\t\t\tvar pendingSamplers = [];\n\t\t\tvar pendingTargets = [];\n\n\t\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\t\tvar target = channel.target;\n\t\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\t\tpendingSamplers.push( sampler );\n\t\t\t\tpendingTargets.push( target );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( [\n\n\t\t\t\tPromise.all( pendingNodes ),\n\t\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\t\tPromise.all( pendingSamplers ),\n\t\t\t\tPromise.all( pendingTargets )\n\n\t\t\t] ).then( function ( dependencies ) {\n\n\t\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\t\tvar tracks = [];\n\n\t\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar node = nodes[ i ];\n\t\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\t\tnode.updateMatrix();\n\t\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\t\tvar targetNames = [];\n\n\t\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t\t// Node may be a THREE.Group (glTF mesh with several primitives) or a THREE.Mesh.\n\t\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\t\tvar scale;\n\n\t\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\t\tinterpolation\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t\t * @param {number} nodeIndex\n\t\t * @return {Promise<THREE.Object3D>}\n\t\t */\n\t\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar parser = this;\n\n\t\t\tvar meshReferences = json.meshReferences;\n\t\t\tvar meshUses = json.meshUses;\n\n\t\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\t\treturn ( function () {\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\t\tvar node;\n\n\t\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn node;\n\n\t\t\t\t\t} ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.extensions\n\t\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t}() ).then( function ( objects ) {\n\n\t\t\t\tvar node;\n\n\t\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\t\tnode = new THREE.Bone();\n\n\t\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\t\tnode = new THREE.Group();\n\n\t\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode = new THREE.Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t\t}\n\n\t\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn node;\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t\t * @param {number} sceneIndex\n\t\t * @return {Promise<THREE.Group>}\n\t\t */\n\t\tGLTFParser.prototype.loadScene = function () {\n\n\t\t\t// scene node hierachy builder\n\n\t\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t\t// build skeleton here as well\n\n\t\t\t\t\tvar skinEntry;\n\n\t\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\treturn node;\n\n\t\t\t\t\t} );\n\n\t\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t\t// build node hierachy\n\n\t\t\t\t\tparentObject.add( node );\n\n\t\t\t\t\tvar pending = [];\n\n\t\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pending );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\t\tvar json = this.json;\n\t\t\t\tvar extensions = this.extensions;\n\t\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\t\tvar parser = this;\n\n\t\t\t\t// Loader returns Group, not Scene.\n\t\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\t\tvar scene = new THREE.Group();\n\t\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\t\treturn scene;\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}();\n\n\t\treturn GLTFLoader;\n\n\t} )();\n\t\n\treturn THREE.GLTFLoader;\n});\n"]}