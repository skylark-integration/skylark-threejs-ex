{"version":3,"sources":["cameras/CinematicCamera.js"],"names":["define","THREE","CinematicCamera","fov","aspect","near","far","PerspectiveCamera","call","this","type","postprocessing","enabled","shaderSettings","rings","samples","depthShader","BokehDepthShader","materialDepth","ShaderMaterial","uniforms","vertexShader","fragmentShader","value","setLens","initPostProcessing","prototype","Object","create","constructor","focalLength","filmGauge","fNumber","coc","undefined","setFocalLength","aperture","hyperFocal","linearize","depth","zfar","znear","smoothstep","x","saturate","Math","max","min","focusAt","focusDistance","getFocalLength","focus","nearPoint","farPoint","depthOfField","sdistance","ldistance","bokeh_uniforms","scene","Scene","camera","OrthographicCamera","window","innerWidth","innerHeight","add","pars","minFilter","LinearFilter","magFilter","format","RGBFormat","rtTextureDepth","WebGLRenderTarget","rtTextureColor","bokeh_shader","BokehShader","UniformsUtils","clone","texture","materialBokeh","defines","RINGS","SAMPLES","DEPTH_PACKING","quad","Mesh","PlaneBufferGeometry","position","z","renderCinematic","renderer","currentRenderTarget","getRenderTarget","clear","overrideMaterial","setRenderTarget","render"],"mappings":"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","file":"../../cameras/CinematicCamera.js","sourcesContent":["define([\n\t\"skylark-threejs\",\n\t\"../shaders/BokehShader2\",\n\t\"../shaders/BokehShader2\"\n],function(THREE){\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author kaypiKun\n\t */\n\n\tTHREE.CinematicCamera = function ( fov, aspect, near, far ) {\n\n\t\tTHREE.PerspectiveCamera.call( this, fov, aspect, near, far );\n\n\t\tthis.type = 'CinematicCamera';\n\n\t\tthis.postprocessing = { enabled: true };\n\t\tthis.shaderSettings = {\n\t\t\trings: 3,\n\t\t\tsamples: 4\n\t\t};\n\n\t\tvar depthShader = THREE.BokehDepthShader;\n\n\t\tthis.materialDepth = new THREE.ShaderMaterial( {\n\t\t\tuniforms: depthShader.uniforms,\n\t\t\tvertexShader: depthShader.vertexShader,\n\t\t\tfragmentShader: depthShader.fragmentShader\n\t\t} );\n\n\t\tthis.materialDepth.uniforms[ 'mNear' ].value = near;\n\t\tthis.materialDepth.uniforms[ 'mFar' ].value = far;\n\n\t\t// In case of cinematicCamera, having a default lens set is important\n\t\tthis.setLens();\n\n\t\tthis.initPostProcessing();\n\n\t};\n\n\tTHREE.CinematicCamera.prototype = Object.create( THREE.PerspectiveCamera.prototype );\n\tTHREE.CinematicCamera.prototype.constructor = THREE.CinematicCamera;\n\n\n\t// providing fnumber and coc(Circle of Confusion) as extra arguments\n\tTHREE.CinematicCamera.prototype.setLens = function ( focalLength, filmGauge, fNumber, coc ) {\n\n\t\t// In case of cinematicCamera, having a default lens set is important\n\t\tif ( focalLength === undefined ) focalLength = 35;\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\n\t\tthis.setFocalLength( focalLength );\n\n\t\t// if fnumber and coc are not provided, cinematicCamera tries to act as a basic PerspectiveCamera\n\t\tif ( fNumber === undefined ) fNumber = 8;\n\t\tif ( coc === undefined ) coc = 0.019;\n\n\t\tthis.fNumber = fNumber;\n\t\tthis.coc = coc;\n\n\t\t// fNumber is focalLength by aperture\n\t\tthis.aperture = focalLength / this.fNumber;\n\n\t\t// hyperFocal is required to calculate depthOfField when a lens tries to focus at a distance with given fNumber and focalLength\n\t\tthis.hyperFocal = ( focalLength * focalLength ) / ( this.aperture * this.coc );\n\n\t};\n\n\tTHREE.CinematicCamera.prototype.linearize = function ( depth ) {\n\n\t\tvar zfar = this.far;\n\t\tvar znear = this.near;\n\t\treturn - zfar * znear / ( depth * ( zfar - znear ) - zfar );\n\n\t};\n\n\tTHREE.CinematicCamera.prototype.smoothstep = function ( near, far, depth ) {\n\n\t\tvar x = this.saturate( ( depth - near ) / ( far - near ) );\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t};\n\n\tTHREE.CinematicCamera.prototype.saturate = function ( x ) {\n\n\t\treturn Math.max( 0, Math.min( 1, x ) );\n\n\t};\n\n\t// function for focusing at a distance from the camera\n\tTHREE.CinematicCamera.prototype.focusAt = function ( focusDistance ) {\n\n\t\tif ( focusDistance === undefined ) focusDistance = 20;\n\n\t\tvar focalLength = this.getFocalLength();\n\n\t\t// distance from the camera (normal to frustrum) to focus on\n\t\tthis.focus = focusDistance;\n\n\t\t// the nearest point from the camera which is in focus (unused)\n\t\tthis.nearPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal + ( this.focus - focalLength ) );\n\n\t\t// the farthest point from the camera which is in focus (unused)\n\t\tthis.farPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal - ( this.focus - focalLength ) );\n\n\t\t// the gap or width of the space in which is everything is in focus (unused)\n\t\tthis.depthOfField = this.farPoint - this.nearPoint;\n\n\t\t// Considering minimum distance of focus for a standard lens (unused)\n\t\tif ( this.depthOfField < 0 ) this.depthOfField = 0;\n\n\t\tthis.sdistance = this.smoothstep( this.near, this.far, this.focus );\n\n\t\tthis.ldistance = this.linearize( 1 -\tthis.sdistance );\n\n\t\tthis.postprocessing.bokeh_uniforms[ 'focalDepth' ].value = this.ldistance;\n\n\t};\n\n\tTHREE.CinematicCamera.prototype.initPostProcessing = function () {\n\n\t\tif ( this.postprocessing.enabled ) {\n\n\t\t\tthis.postprocessing.scene = new THREE.Scene();\n\n\t\t\tthis.postprocessing.camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2,\twindow.innerHeight / 2, window.innerHeight / - 2, - 10000, 10000 );\n\n\t\t\tthis.postprocessing.scene.add( this.postprocessing.camera );\n\n\t\t\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\t\t\tthis.postprocessing.rtTextureDepth = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, pars );\n\t\t\tthis.postprocessing.rtTextureColor = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, pars );\n\n\t\t\tvar bokeh_shader = THREE.BokehShader;\n\n\t\t\tthis.postprocessing.bokeh_uniforms = THREE.UniformsUtils.clone( bokeh_shader.uniforms );\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"tColor\" ].value = this.postprocessing.rtTextureColor.texture;\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"tDepth\" ].value = this.postprocessing.rtTextureDepth.texture;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"manualdof\" ].value = 0;\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"shaderFocus\" ].value = 0;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"fstop\" ].value = 2.8;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"showFocus\" ].value = 1;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value = 0.1;\n\n\t\t\t//console.log( this.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value );\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"znear\" ].value = this.near;\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"zfar\" ].value = this.near;\n\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"textureWidth\" ].value = window.innerWidth;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ \"textureHeight\" ].value = window.innerHeight;\n\n\t\t\tthis.postprocessing.materialBokeh = new THREE.ShaderMaterial( {\n\t\t\t\tuniforms: this.postprocessing.bokeh_uniforms,\n\t\t\t\tvertexShader: bokeh_shader.vertexShader,\n\t\t\t\tfragmentShader: bokeh_shader.fragmentShader,\n\t\t\t\tdefines: {\n\t\t\t\t\tRINGS: this.shaderSettings.rings,\n\t\t\t\t\tSAMPLES: this.shaderSettings.samples,\n\t\t\t\t\tDEPTH_PACKING: 1\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.postprocessing.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( window.innerWidth, window.innerHeight ), this.postprocessing.materialBokeh );\n\t\t\tthis.postprocessing.quad.position.z = - 500;\n\t\t\tthis.postprocessing.scene.add( this.postprocessing.quad );\n\n\t\t}\n\n\t};\n\n\tTHREE.CinematicCamera.prototype.renderCinematic = function ( scene, renderer ) {\n\n\t\tif ( this.postprocessing.enabled ) {\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.clear();\n\n\t\t\t// Render scene into texture\n\n\t\t\tscene.overrideMaterial = null;\n\t\t\trenderer.setRenderTarget( this.postprocessing.rtTextureColor );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, this );\n\n\t\t\t// Render depth into texture\n\n\t\t\tscene.overrideMaterial = this.materialDepth;\n\t\t\trenderer.setRenderTarget( this.postprocessing.rtTextureDepth );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, this );\n\n\t\t\t// Render bokeh composite\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.render( this.postprocessing.scene, this.postprocessing.camera );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t}\n\n\t};\n\n\treturn THREE.CinematicCamera;\n});\n"]}