{"version":3,"sources":["animation/MMDAnimationHelper.js"],"names":["define","THREE","MMDAnimationHelper","params","this","meshes","camera","cameraTarget","Object3D","name","audio","audioManager","objects","WeakMap","configuration","sync","undefined","afterglow","resetPhysicsOnLoop","enabled","animation","ik","grant","physics","cameraAnimation","onBeforePhysics","sharedPhysics","masterPhysics","AudioManager","elapsedTime","currentTime","delayTime","audioDuration","buffer","duration","GrantSolver","mesh","grants","quaternion","prototype","constructor","add","object","isSkinnedMesh","_addMesh","isCamera","_setupCamera","type","Error","_setupAudio","_syncDuration","remove","_removeMesh","_clearCamera","_clearAudio","update","delta","control","i","length","_animateMesh","_updateSharedPhysics","_animateCamera","pose","vpd","resetPose","bones","skeleton","boneParams","boneNameDictionary","il","vector","Vector3","Quaternion","boneParam","boneIndex","bone","position","fromArray","translation","multiply","updateMatrixWorld","_createCCDIKSolver","saveOriginalBonesBeforeIK","createGrantSolver","enable","key","_optimizeIK","geometry","userData","MMD","indexOf","push","set","looped","_setupMeshAnimation","_setupMeshPhysics","clearCamera","_setupCameraAnimation","clearAudio","found","writeIndex","delete","get","animations","Array","isArray","mixer","AnimationMixer","clipAction","play","addEventListener","event","tracks","action","_clip","slice","ikSolver","grantSolver","world","_getMasterPhysics","_createMMDPhysics","animationWarmup","reset","warmup","_restoreBones","_saveBones","updateProjectionMatrix","up","applyQuaternion","lookAt","physicsEnabled","iks","links","j","jl","link","index","rigidBodyType","CCDIKSolver","MMDPhysics","rigidBodies","constraints","max","_actions","clip","has","Math","_updatePropertyMixersBuffer","propertyMixers","_bindings","accuIndex","_accuIndex","propertyMixer","offset","valueSize","binding","getValue","backupBones","Float32Array","toArray","p","updateRigidBodies","stepSimulation","updateBones","elapsed","_shouldStopAudio","stop","_shouldStartAudio","isPlaying","startTime","parentBone","parentIndex","isLocal","affectPosition","affectRotation","slerp","ratio"],"mappings":"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","file":"../../animation/MMDAnimationHelper.js","sourcesContent":["define([\n\t\"skylark-threejs\",\n\t\"./CCDIKSolver\",\n\t\"./MMDPhysics\"\n],function(THREE){\n\n\t/**\n\t * @author takahiro / https://github.com/takahirox\n\t *\n\t * MMDAnimationHelper handles animation of MMD assets loaded by MMDLoader\n\t * with MMD special features as IK, Grant, and Physics.\n\t *\n\t * Dependencies\n\t *  - ammo.js https://github.com/kripken/ammo.js\n\t *  - THREE.MMDPhysics\n\t *  - THREE.CCDIKSolver\n\t *\n\t * TODO\n\t *  - more precise grant skinning support.\n\t */\n\n\tTHREE.MMDAnimationHelper = ( function () {\n\n\t\t/**\n\t\t * @param {Object} params - (optional)\n\t\t * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\n\t\t * @param {Number} params.afterglow - Default is 0.0.\n\t\t * @param {boolean} params.resetPhysicsOnLoop - Default is true.\n\t\t */\n\t\tfunction MMDAnimationHelper( params ) {\n\n\t\t\tparams = params || {};\n\n\t\t\tthis.meshes = [];\n\n\t\t\tthis.camera = null;\n\t\t\tthis.cameraTarget = new THREE.Object3D();\n\t\t\tthis.cameraTarget.name = 'target';\n\n\t\t\tthis.audio = null;\n\t\t\tthis.audioManager = null;\n\n\t\t\tthis.objects = new WeakMap();\n\n\t\t\tthis.configuration = {\n\t\t\t\tsync: params.sync !== undefined\n\t\t\t\t\t? params.sync : true,\n\t\t\t\tafterglow: params.afterglow !== undefined\n\t\t\t\t\t? params.afterglow : 0.0,\n\t\t\t\tresetPhysicsOnLoop: params.resetPhysicsOnLoop !== undefined\n\t\t\t\t\t? params.resetPhysicsOnLoop : true\n\t\t\t};\n\n\t\t\tthis.enabled = {\n\t\t\t\tanimation: true,\n\t\t\t\tik: true,\n\t\t\t\tgrant: true,\n\t\t\t\tphysics: true,\n\t\t\t\tcameraAnimation: true\n\t\t\t};\n\n\t\t\tthis.onBeforePhysics = function ( /* mesh */ ) {};\n\n\t\t\t// experimental\n\t\t\tthis.sharedPhysics = false;\n\t\t\tthis.masterPhysics = null;\n\n\t\t}\n\n\t\tMMDAnimationHelper.prototype = {\n\n\t\t\tconstructor: MMDAnimationHelper,\n\n\t\t\t/**\n\t\t\t * Adds an Three.js Object to helper and setups animation.\n\t\t\t * The anmation durations of added objects are synched\n\t\t\t * if this.configuration.sync is true.\n\t\t\t *\n\t\t\t * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n\t\t\t * @param {Object} params - (optional)\n\t\t\t * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\n\t\t\t * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\n\t\t\t * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\n\t\t\t * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\n\t\t\t * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\n\t\t\t * @param {THREE.Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\n\t\t\t * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\n\t\t\t * @return {THREE.MMDAnimationHelper}\n\t\t\t */\n\t\t\tadd: function ( object, params ) {\n\n\t\t\t\tparams = params || {};\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tthis._addMesh( object, params );\n\n\t\t\t\t} else if ( object.isCamera ) {\n\n\t\t\t\t\tthis._setupCamera( object, params );\n\n\t\t\t\t} else if ( object.type === 'Audio' ) {\n\n\t\t\t\t\tthis._setupAudio( object, params );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper.add: '\n\t\t\t\t\t\t+ 'accepts only '\n\t\t\t\t\t\t+ 'THREE.SkinnedMesh or '\n\t\t\t\t\t\t+ 'THREE.Camera or '\n\t\t\t\t\t\t+ 'THREE.Audio instance.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.configuration.sync ) this._syncDuration();\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Removes an Three.js Object from helper.\n\t\t\t *\n\t\t\t * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n\t\t\t * @return {THREE.MMDAnimationHelper}\n\t\t\t */\n\t\t\tremove: function ( object ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tthis._removeMesh( object );\n\n\t\t\t\t} else if ( object.isCamera ) {\n\n\t\t\t\t\tthis._clearCamera( object );\n\n\t\t\t\t} else if ( object.type === 'Audio' ) {\n\n\t\t\t\t\tthis._clearAudio( object );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper.remove: '\n\t\t\t\t\t\t+ 'accepts only '\n\t\t\t\t\t\t+ 'THREE.SkinnedMesh or '\n\t\t\t\t\t\t+ 'THREE.Camera or '\n\t\t\t\t\t\t+ 'THREE.Audio instance.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.configuration.sync ) this._syncDuration();\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Updates the animation.\n\t\t\t *\n\t\t\t * @param {Number} delta\n\t\t\t * @return {THREE.MMDAnimationHelper}\n\t\t\t */\n\t\t\tupdate: function ( delta ) {\n\n\t\t\t\tif ( this.audioManager !== null ) this.audioManager.control( delta );\n\n\t\t\t\tfor ( var i = 0; i < this.meshes.length; i ++ ) {\n\n\t\t\t\t\tthis._animateMesh( this.meshes[ i ], delta );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.sharedPhysics ) this._updateSharedPhysics( delta );\n\n\t\t\t\tif ( this.camera !== null ) this._animateCamera( this.camera, delta );\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Changes the pose of SkinnedMesh as VPD specifies.\n\t\t\t *\n\t\t\t * @param {THREE.SkinnedMesh} mesh\n\t\t\t * @param {Object} vpd - VPD content parsed MMDParser\n\t\t\t * @param {Object} params - (optional)\n\t\t\t * @param {boolean} params.resetPose - Default is true.\n\t\t\t * @param {boolean} params.ik - Default is true.\n\t\t\t * @param {boolean} params.grant - Default is true.\n\t\t\t * @return {THREE.MMDAnimationHelper}\n\t\t\t */\n\t\t\tpose: function ( mesh, vpd, params ) {\n\n\t\t\t\tparams = params || {};\n\n\t\t\t\tif ( params.resetPose !== false ) mesh.pose();\n\n\t\t\t\tvar bones = mesh.skeleton.bones;\n\t\t\t\tvar boneParams = vpd.bones;\n\n\t\t\t\tvar boneNameDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tboneNameDictionary[ bones[ i ].name ] = i;\n\n\t\t\t\t}\n\n\t\t\t\tvar vector = new THREE.Vector3();\n\t\t\t\tvar quaternion = new THREE.Quaternion();\n\n\t\t\t\tfor ( var i = 0, il = boneParams.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar boneParam = boneParams[ i ];\n\t\t\t\t\tvar boneIndex = boneNameDictionary[ boneParam.name ];\n\n\t\t\t\t\tif ( boneIndex === undefined ) continue;\n\n\t\t\t\t\tvar bone = bones[ boneIndex ];\n\t\t\t\t\tbone.position.add( vector.fromArray( boneParam.translation ) );\n\t\t\t\t\tbone.quaternion.multiply( quaternion.fromArray( boneParam.quaternion ) );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.updateMatrixWorld( true );\n\n\t\t\t\tif ( params.ik !== false ) {\n\n\t\t\t\t\tthis._createCCDIKSolver( mesh ).update( params.saveOriginalBonesBeforeIK ); // this param is experimental\n\n\t\t\t\t}\n\n\t\t\t\tif ( params.grant !== false ) {\n\n\t\t\t\t\tthis.createGrantSolver( mesh ).update();\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enabes/Disables an animation feature.\n\t\t\t *\n\t\t\t * @param {string} key\n\t\t\t * @param {boolean} enabled\n\t\t\t * @return {THREE.MMDAnimationHelper}\n\t\t\t */\n\t\t\tenable: function ( key, enabled ) {\n\n\t\t\t\tif ( this.enabled[ key ] === undefined ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper.enable: '\n\t\t\t\t\t\t+ 'unknown key ' + key );\n\n\t\t\t\t}\n\n\t\t\t\tthis.enabled[ key ] = enabled;\n\n\t\t\t\tif ( key === 'physics' ) {\n\n\t\t\t\t\tfor ( var i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tthis._optimizeIK( this.meshes[ i ], enabled );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates an GrantSolver instance.\n\t\t\t *\n\t\t\t * @param {THREE.SkinnedMesh} mesh\n\t\t\t * @return {GrantSolver}\n\t\t\t */\n\t\t\tcreateGrantSolver: function ( mesh ) {\n\n\t\t\t\treturn new GrantSolver( mesh, mesh.geometry.userData.MMD.grants );\n\n\t\t\t},\n\n\t\t\t// private methods\n\n\t\t\t_addMesh: function ( mesh, params ) {\n\n\t\t\t\tif ( this.meshes.indexOf( mesh ) >= 0 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._addMesh: '\n\t\t\t\t\t\t+ 'SkinnedMesh \\'' + mesh.name + '\\' has already been added.' );\n\n\t\t\t\t}\n\n\t\t\t\tthis.meshes.push( mesh );\n\t\t\t\tthis.objects.set( mesh, { looped: false } );\n\n\t\t\t\tthis._setupMeshAnimation( mesh, params.animation );\n\n\t\t\t\tif ( params.physics !== false ) {\n\n\t\t\t\t\tthis._setupMeshPhysics( mesh, params );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t_setupCamera: function ( camera, params ) {\n\n\t\t\t\tif ( this.camera === camera ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._setupCamera: '\n\t\t\t\t\t\t+ 'Camera \\'' + camera.name + '\\' has already been set.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.camera ) this.clearCamera( this.camera );\n\n\t\t\t\tthis.camera = camera;\n\n\t\t\t\tcamera.add( this.cameraTarget );\n\n\t\t\t\tthis.objects.set( camera, {} );\n\n\t\t\t\tif ( params.animation !== undefined ) {\n\n\t\t\t\t\tthis._setupCameraAnimation( camera, params.animation );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t_setupAudio: function ( audio, params ) {\n\n\t\t\t\tif ( this.audio === audio ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._setupAudio: '\n\t\t\t\t\t\t+ 'Audio \\'' + audio.name + '\\' has already been set.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.audio ) this.clearAudio( this.audio );\n\n\t\t\t\tthis.audio = audio;\n\t\t\t\tthis.audioManager = new AudioManager( audio, params );\n\n\t\t\t\tthis.objects.set( this.audioManager, {\n\t\t\t\t\tduration: this.audioManager.duration\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t_removeMesh: function ( mesh ) {\n\n\t\t\t\tvar found = false;\n\t\t\t\tvar writeIndex = 0;\n\n\t\t\t\tfor ( var i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( this.meshes[ i ] === mesh ) {\n\n\t\t\t\t\t\tthis.objects.delete( mesh );\n\t\t\t\t\t\tfound = true;\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.meshes[ writeIndex ++ ] = this.meshes[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! found ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._removeMesh: '\n\t\t\t\t\t\t+ 'SkinnedMesh \\'' + mesh.name + '\\' has not been added yet.' );\n\n\t\t\t\t}\n\n\t\t\t\tthis.meshes.length = writeIndex;\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t_clearCamera: function ( camera ) {\n\n\t\t\t\tif ( camera !== this.camera ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._clearCamera: '\n\t\t\t\t\t\t+ 'Camera \\'' + camera.name + '\\' has not been set yet.' );\n\n\t\t\t\t}\n\n\t\t\t\tthis.camera.remove( this.cameraTarget );\n\n\t\t\t\tthis.objects.delete( this.camera );\n\t\t\t\tthis.camera = null;\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t_clearAudio: function ( audio ) {\n\n\t\t\t\tif ( audio !== this.audio ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._clearAudio: '\n\t\t\t\t\t\t+ 'Audio \\'' + audio.name + '\\' has not been set yet.' );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.delete( this.audioManager );\n\n\t\t\t\tthis.audio = null;\n\t\t\t\tthis.audioManager = null;\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t_setupMeshAnimation: function ( mesh, animation ) {\n\n\t\t\t\tvar objects = this.objects.get( mesh );\n\n\t\t\t\tif ( animation !== undefined ) {\n\n\t\t\t\t\tvar animations = Array.isArray( animation )\n\t\t\t\t\t\t? animation : [ animation ];\n\n\t\t\t\t\tobjects.mixer = new THREE.AnimationMixer( mesh );\n\n\t\t\t\t\tfor ( var i = 0, il = animations.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tobjects.mixer.clipAction( animations[ i ] ).play();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: find a workaround not to access ._clip looking like a private property\n\t\t\t\t\tobjects.mixer.addEventListener( 'loop', function ( event ) {\n\n\t\t\t\t\t\tvar tracks = event.action._clip.tracks;\n\n\t\t\t\t\t\tif ( tracks.length > 0 &&\n\t\t\t\t\t\t     tracks[ 0 ].name.slice( 0, 6 ) !== '.bones' ) return;\n\n\t\t\t\t\t\tobjects.looped = true;\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tobjects.ikSolver = this._createCCDIKSolver( mesh );\n\t\t\t\tobjects.grantSolver = this.createGrantSolver( mesh );\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t_setupCameraAnimation: function ( camera, animation ) {\n\n\t\t\t\tvar animations = Array.isArray( animation )\n\t\t\t\t\t? animation : [ animation ];\n\n\t\t\t\tvar objects = this.objects.get( camera );\n\n\t\t\t\tobjects.mixer = new THREE.AnimationMixer( camera );\n\n\t\t\t\tfor ( var i = 0, il = animations.length; i < il; i ++ ) {\n\n\t\t\t\t\tobjects.mixer.clipAction( animations[ i ] ).play();\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t_setupMeshPhysics: function ( mesh, params ) {\n\n\t\t\t\tvar objects = this.objects.get( mesh );\n\n\t\t\t\t// shared physics is experimental\n\n\t\t\t\tif ( params.world === undefined && this.sharedPhysics ) {\n\n\t\t\t\t\tvar masterPhysics = this._getMasterPhysics();\n\n\t\t\t\t\tif ( masterPhysics !== null ) world = masterPhysics.world; // eslint-disable-line no-undef\n\n\t\t\t\t}\n\n\t\t\t\tobjects.physics = this._createMMDPhysics( mesh, params );\n\n\t\t\t\tif ( objects.mixer && params.animationWarmup !== false ) {\n\n\t\t\t\t\tthis._animateMesh( mesh, 0 );\n\t\t\t\t\tobjects.physics.reset();\n\n\t\t\t\t}\n\n\t\t\t\tobjects.physics.warmup( params.warmup !== undefined ? params.warmup : 60 );\n\n\t\t\t\tthis._optimizeIK( mesh, true );\n\n\t\t\t},\n\n\t\t\t_animateMesh: function ( mesh, delta ) {\n\n\t\t\t\tvar objects = this.objects.get( mesh );\n\n\t\t\t\tvar mixer = objects.mixer;\n\t\t\t\tvar ikSolver = objects.ikSolver;\n\t\t\t\tvar grantSolver = objects.grantSolver;\n\t\t\t\tvar physics = objects.physics;\n\t\t\t\tvar looped = objects.looped;\n\n\t\t\t\t// alternate solution to save/restore bones but less performant?\n\t\t\t\t//mesh.pose();\n\t\t\t\t//this._updatePropertyMixersBuffer( mesh );\n\n\t\t\t\tif ( mixer && this.enabled.animation ) {\n\n\t\t\t\t\tthis._restoreBones( mesh );\n\n\t\t\t\t\tmixer.update( delta );\n\n\t\t\t\t\tthis._saveBones( mesh );\n\n\t\t\t\t\tif ( ikSolver && this.enabled.ik ) {\n\n\t\t\t\t\t\tmesh.updateMatrixWorld( true );\n\t\t\t\t\t\tikSolver.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( grantSolver && this.enabled.grant ) {\n\n\t\t\t\t\t\tgrantSolver.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( looped === true && this.enabled.physics ) {\n\n\t\t\t\t\tif ( physics && this.configuration.resetPhysicsOnLoop ) physics.reset();\n\n\t\t\t\t\tobjects.looped = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( physics && this.enabled.physics && ! this.sharedPhysics ) {\n\n\t\t\t\t\tthis.onBeforePhysics( mesh );\n\t\t\t\t\tphysics.update( delta );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t_animateCamera: function ( camera, delta ) {\n\n\t\t\t\tvar mixer = this.objects.get( camera ).mixer;\n\n\t\t\t\tif ( mixer && this.enabled.cameraAnimation ) {\n\n\t\t\t\t\tmixer.update( delta );\n\n\t\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t\t\tcamera.up.set( 0, 1, 0 );\n\t\t\t\t\tcamera.up.applyQuaternion( camera.quaternion );\n\t\t\t\t\tcamera.lookAt( this.cameraTarget.position );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t_optimizeIK: function ( mesh, physicsEnabled ) {\n\n\t\t\t\tvar iks = mesh.geometry.userData.MMD.iks;\n\t\t\t\tvar bones = mesh.geometry.userData.MMD.bones;\n\n\t\t\t\tfor ( var i = 0, il = iks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar ik = iks[ i ];\n\t\t\t\t\tvar links = ik.links;\n\n\t\t\t\t\tfor ( var j = 0, jl = links.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar link = links[ j ];\n\n\t\t\t\t\t\tif ( physicsEnabled === true ) {\n\n\t\t\t\t\t\t\t// disable IK of the bone the corresponding rigidBody type of which is 1 or 2\n\t\t\t\t\t\t\t// because its rotation will be overriden by physics\n\t\t\t\t\t\t\tlink.enabled = bones[ link.index ].rigidBodyType > 0 ? false : true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tlink.enabled = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t_createCCDIKSolver: function ( mesh ) {\n\n\t\t\t\tif ( THREE.CCDIKSolver === undefined ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDAnimationHelper: Import THREE.CCDIKSolver.' );\n\n\t\t\t\t}\n\n\t\t\t\treturn new THREE.CCDIKSolver( mesh, mesh.geometry.userData.MMD.iks );\n\n\t\t\t},\n\n\t\t\t_createMMDPhysics: function ( mesh, params ) {\n\n\t\t\t\tif ( THREE.MMDPhysics === undefined ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.MMDPhysics: Import THREE.MMDPhysics.' );\n\n\t\t\t\t}\n\n\t\t\t\treturn new THREE.MMDPhysics(\n\t\t\t\t\tmesh,\n\t\t\t\t\tmesh.geometry.userData.MMD.rigidBodies,\n\t\t\t\t\tmesh.geometry.userData.MMD.constraints,\n\t\t\t\t\tparams );\n\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * Detects the longest duration and then sets it to them to sync.\n\t\t\t * TODO: Not to access private properties ( ._actions and ._clip )\n\t\t\t */\n\t\t\t_syncDuration: function () {\n\n\t\t\t\tvar max = 0.0;\n\n\t\t\t\tvar objects = this.objects;\n\t\t\t\tvar meshes = this.meshes;\n\t\t\t\tvar camera = this.camera;\n\t\t\t\tvar audioManager = this.audioManager;\n\n\t\t\t\t// get the longest duration\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar mixer = this.objects.get( meshes[ i ] ).mixer;\n\n\t\t\t\t\tif ( mixer === undefined ) continue;\n\n\t\t\t\t\tfor ( var j = 0; j < mixer._actions.length; j ++ ) {\n\n\t\t\t\t\t\tvar clip = mixer._actions[ j ]._clip;\n\n\t\t\t\t\t\tif ( ! objects.has( clip ) ) {\n\n\t\t\t\t\t\t\tobjects.set( clip, {\n\t\t\t\t\t\t\t\tduration: clip.duration\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmax = Math.max( max, objects.get( clip ).duration );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( camera !== null ) {\n\n\t\t\t\t\tvar mixer = this.objects.get( camera ).mixer;\n\n\t\t\t\t\tif ( mixer !== undefined ) {\n\n\t\t\t\t\t\tfor ( var i = 0, il = mixer._actions.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar clip = mixer._actions[ i ]._clip;\n\n\t\t\t\t\t\t\tif ( ! objects.has( clip ) ) {\n\n\t\t\t\t\t\t\t\tobjects.set( clip, {\n\t\t\t\t\t\t\t\t\tduration: clip.duration\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmax = Math.max( max, objects.get( clip ).duration );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( audioManager !== null ) {\n\n\t\t\t\t\tmax = Math.max( max, objects.get( audioManager ).duration );\n\n\t\t\t\t}\n\n\t\t\t\tmax += this.configuration.afterglow;\n\n\t\t\t\t// update the duration\n\n\t\t\t\tfor ( var i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar mixer = this.objects.get( this.meshes[ i ] ).mixer;\n\n\t\t\t\t\tif ( mixer === undefined ) continue;\n\n\t\t\t\t\tfor ( var j = 0, jl = mixer._actions.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmixer._actions[ j ]._clip.duration = max;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( camera !== null ) {\n\n\t\t\t\t\tvar mixer = this.objects.get( camera ).mixer;\n\n\t\t\t\t\tif ( mixer !== undefined ) {\n\n\t\t\t\t\t\tfor ( var i = 0, il = mixer._actions.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tmixer._actions[ i ]._clip.duration = max;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( audioManager !== null ) {\n\n\t\t\t\t\taudioManager.duration = max;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t// workaround\n\n\t\t\t_updatePropertyMixersBuffer: function ( mesh ) {\n\n\t\t\t\tvar mixer = this.objects.get( mesh ).mixer;\n\n\t\t\t\tvar propertyMixers = mixer._bindings;\n\t\t\t\tvar accuIndex = mixer._accuIndex;\n\n\t\t\t\tfor ( var i = 0, il = propertyMixers.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar propertyMixer = propertyMixers[ i ];\n\t\t\t\t\tvar buffer = propertyMixer.buffer;\n\t\t\t\t\tvar stride = propertyMixer.valueSize;\n\t\t\t\t\tvar offset = ( accuIndex + 1 ) * stride;\n\n\t\t\t\t\tpropertyMixer.binding.getValue( buffer, offset );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * Avoiding these two issues by restore/save bones before/after mixer animation.\n\t\t\t *\n\t\t\t * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\n\t\t\t *    Calculating IK, Grant, and Physics after mixer animation can break\n\t\t\t *    the cache coherency.\n\t\t\t *\n\t\t\t * 2. Applying Grant two or more times without reset the posing breaks model.\n\t\t\t */\n\t\t\t_saveBones: function ( mesh ) {\n\n\t\t\t\tvar objects = this.objects.get( mesh );\n\n\t\t\t\tvar bones = mesh.skeleton.bones;\n\n\t\t\t\tvar backupBones = objects.backupBones;\n\n\t\t\t\tif ( backupBones === undefined ) {\n\n\t\t\t\t\tbackupBones = new Float32Array( bones.length * 7 );\n\t\t\t\t\tobjects.backupBones = backupBones;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar bone = bones[ i ];\n\t\t\t\t\tbone.position.toArray( backupBones, i * 7 );\n\t\t\t\t\tbone.quaternion.toArray( backupBones, i * 7 + 3 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t_restoreBones: function ( mesh ) {\n\n\t\t\t\tvar objects = this.objects.get( mesh );\n\n\t\t\t\tvar backupBones = objects.backupBones;\n\n\t\t\t\tif ( backupBones === undefined ) return;\n\n\t\t\t\tvar bones = mesh.skeleton.bones;\n\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar bone = bones[ i ];\n\t\t\t\t\tbone.position.fromArray( backupBones, i * 7 );\n\t\t\t\t\tbone.quaternion.fromArray( backupBones, i * 7 + 3 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t// experimental\n\n\t\t\t_getMasterPhysics: function () {\n\n\t\t\t\tif ( this.masterPhysics !== null ) return this.masterPhysics;\n\n\t\t\t\tfor ( var i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar physics = this.meshes[ i ].physics;\n\n\t\t\t\t\tif ( physics !== undefined && physics !== null ) {\n\n\t\t\t\t\t\tthis.masterPhysics = physics;\n\t\t\t\t\t\treturn this.masterPhysics;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t},\n\n\t\t\t_updateSharedPhysics: function ( delta ) {\n\n\t\t\t\tif ( this.meshes.length === 0 || ! this.enabled.physics || ! this.sharedPhysics ) return;\n\n\t\t\t\tvar physics = this._getMasterPhysics();\n\n\t\t\t\tif ( physics === null ) return;\n\n\t\t\t\tfor ( var i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar p = this.meshes[ i ].physics;\n\n\t\t\t\t\tif ( p !== null && p !== undefined ) {\n\n\t\t\t\t\t\tp.updateRigidBodies();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tphysics.stepSimulation( delta );\n\n\t\t\t\tfor ( var i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar p = this.meshes[ i ].physics;\n\n\t\t\t\t\tif ( p !== null && p !== undefined ) {\n\n\t\t\t\t\t\tp.updateBones();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t//\n\n\t\t/**\n\t\t * @param {THREE.Audio} audio\n\t\t * @param {Object} params - (optional)\n\t\t * @param {Nuumber} params.delayTime\n\t\t */\n\t\tfunction AudioManager( audio, params ) {\n\n\t\t\tparams = params || {};\n\n\t\t\tthis.audio = audio;\n\n\t\t\tthis.elapsedTime = 0.0;\n\t\t\tthis.currentTime = 0.0;\n\t\t\tthis.delayTime = params.delayTime !== undefined\n\t\t\t\t? params.delayTime : 0.0;\n\n\t\t\tthis.audioDuration = this.audio.buffer.duration;\n\t\t\tthis.duration = this.audioDuration + this.delayTime;\n\n\t\t}\n\n\t\tAudioManager.prototype = {\n\n\t\t\tconstructor: AudioManager,\n\n\t\t\t/**\n\t\t\t * @param {Number} delta\n\t\t\t * @return {AudioManager}\n\t\t\t */\n\t\t\tcontrol: function ( delta ) {\n\n\t\t\t\tthis.elapsed += delta;\n\t\t\t\tthis.currentTime += delta;\n\n\t\t\t\tif ( this._shouldStopAudio() ) this.audio.stop();\n\t\t\t\tif ( this._shouldStartAudio() ) this.audio.play();\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\n\t\t\t// private methods\n\n\t\t\t_shouldStartAudio: function () {\n\n\t\t\t\tif ( this.audio.isPlaying ) return false;\n\n\t\t\t\twhile ( this.currentTime >= this.duration ) {\n\n\t\t\t\t\tthis.currentTime -= this.duration;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.currentTime < this.delayTime ) return false;\n\n\t\t\t\t// 'duration' can be bigger than 'audioDuration + delayTime' because of sync configuration\n\t\t\t\tif ( ( this.currentTime - this.delayTime ) > this.audioDuration ) return false;\n\n\t\t\t\tthis.audio.startTime = this.currentTime - this.delayTime;\n\n\t\t\t\treturn true;\n\n\t\t\t},\n\n\t\t\t_shouldStopAudio: function () {\n\n\t\t\t\treturn this.audio.isPlaying &&\n\t\t\t\t\tthis.currentTime >= this.duration;\n\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * @param {THREE.SkinnedMesh} mesh\n\t\t * @param {Array<Object>} grants\n\t\t */\n\t\tfunction GrantSolver( mesh, grants ) {\n\n\t\t\tthis.mesh = mesh;\n\t\t\tthis.grants = grants || [];\n\n\t\t}\n\n\t\tGrantSolver.prototype = {\n\n\t\t\tconstructor: GrantSolver,\n\n\t\t\t/**\n\t\t\t * @return {GrantSolver}\n\t\t\t */\n\t\t\tupdate: function () {\n\n\t\t\t\tvar quaternion = new THREE.Quaternion();\n\n\t\t\t\treturn function () {\n\n\t\t\t\t\tvar bones = this.mesh.skeleton.bones;\n\t\t\t\t\tvar grants = this.grants;\n\n\t\t\t\t\tfor ( var i = 0, il = grants.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar grant = grants[ i ];\n\t\t\t\t\t\tvar bone = bones[ grant.index ];\n\t\t\t\t\t\tvar parentBone = bones[ grant.parentIndex ];\n\n\t\t\t\t\t\tif ( grant.isLocal ) {\n\n\t\t\t\t\t\t\t// TODO: implement\n\t\t\t\t\t\t\tif ( grant.affectPosition ) {\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// TODO: implement\n\t\t\t\t\t\t\tif ( grant.affectRotation ) {\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// TODO: implement\n\t\t\t\t\t\t\tif ( grant.affectPosition ) {\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( grant.affectRotation ) {\n\n\t\t\t\t\t\t\t\tquaternion.set( 0, 0, 0, 1 );\n\t\t\t\t\t\t\t\tquaternion.slerp( parentBone.quaternion, grant.ratio );\n\t\t\t\t\t\t\t\tbone.quaternion.multiply( quaternion );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t};\n\n\t\t\t}()\n\n\t\t};\n\n\t\treturn MMDAnimationHelper;\n\n\t} )();\n\n\treturn THREE.MMDAnimationHelper;\n});\n"]}