{"version":3,"sources":["animation/AnimationClipCreator.js"],"names":["define","THREE","threex","AnimationClipCreator","CreateRotationAnimation","period","axis","times","trackName","track","NumberKeyframeTrack","AnimationClip","CreateScaleAxisAnimation","CreateShakeAnimation","duration","shakeScale","values","tmp","Vector3","i","push","set","Math","random","multiply","toArray","length","VectorKeyframeTrack","CreatePulsationAnimation","pulseScale","scaleFactor","CreateVisibilityAnimation","BooleanKeyframeTrack","CreateMaterialColorAnimation","colors","timeStep","ColorKeyframeTrack","animation"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aACA,IAAIC,EAAuB,aA0E3B,OAxEAA,EAAqBC,wBAA0B,SAAUC,EAAQC,GAC7D,IAAIC,GACI,EACAF,GAMJG,EAAY,cADhBF,EAAOA,GAAQ,KACuB,IAClCG,EAAQ,IAAIR,EAAMS,oBAAoBF,EAAWD,GAL7C,EACA,MAKR,OAAO,IAAIN,EAAMU,cAAc,KAAMN,GAASI,KAElDN,EAAqBS,yBAA2B,SAAUP,EAAQC,GAC9D,IAAIC,GACI,EACAF,GAMJG,EAAY,WADhBF,EAAOA,GAAQ,KACoB,IAC/BG,EAAQ,IAAIR,EAAMS,oBAAoBF,EAAWD,GAL7C,EACA,IAKR,OAAO,IAAIN,EAAMU,cAAc,KAAMN,GAASI,KAElDN,EAAqBU,qBAAuB,SAAUC,EAAUC,GAE5D,IADA,IAAIR,KAAYS,KAAaC,EAAM,IAAIhB,EAAMiB,QACpCC,EAAI,EAAGA,EAAe,GAAXL,EAAeK,IAC/BZ,EAAMa,KAAKD,EAAI,IACfF,EAAII,IAAoB,EAAhBC,KAAKC,SAAe,EAAmB,EAAhBD,KAAKC,SAAe,EAAmB,EAAhBD,KAAKC,SAAe,GAAGC,SAAST,GAAYU,QAAQT,EAAQA,EAAOU,QAE7H,IACIjB,EAAQ,IAAIR,EAAM0B,oBADN,YACqCpB,EAAOS,GAC5D,OAAO,IAAIf,EAAMU,cAAc,KAAMG,GAAWL,KAEpDN,EAAqByB,yBAA2B,SAAUd,EAAUe,GAEhE,IADA,IAAItB,KAAYS,KAAaC,EAAM,IAAIhB,EAAMiB,QACpCC,EAAI,EAAGA,EAAe,GAAXL,EAAeK,IAAK,CACpCZ,EAAMa,KAAKD,EAAI,IACf,IAAIW,EAAcR,KAAKC,SAAWM,EAClCZ,EAAII,IAAIS,EAAaA,EAAaA,GAAaL,QAAQT,EAAQA,EAAOU,QAE1E,IACIjB,EAAQ,IAAIR,EAAM0B,oBADN,SACqCpB,EAAOS,GAC5D,OAAO,IAAIf,EAAMU,cAAc,KAAMG,GAAWL,KAEpDN,EAAqB4B,0BAA4B,SAAUjB,GACvD,IAAIP,GACI,EACAO,EAAW,EACXA,GAOJL,EAAQ,IAAIR,EAAM+B,qBADN,WACsCzB,IAL9C,GACA,GACA,IAIR,OAAO,IAAIN,EAAMU,cAAc,KAAMG,GAAWL,KAEpDN,EAAqB8B,6BAA+B,SAAUnB,EAAUoB,GAEpE,IADA,IAAI3B,KAAYS,KAAamB,EAAWrB,EAAWoB,EAAOR,OACjDP,EAAI,EAAGA,GAAKe,EAAOR,OAAQP,IAChCZ,EAAMa,KAAKD,EAAIgB,GACfnB,EAAOI,KAAKc,EAAOf,EAAIe,EAAOR,SAElC,IACIjB,EAAQ,IAAIR,EAAMmC,mBADN,qBACoC7B,EAAOS,GAC3D,OAAO,IAAIf,EAAMU,cAAc,KAAMG,GAAWL,KAG7CP,EAAOmC,UAAUlC,qBAAuBA","file":"../../animation/AnimationClipCreator.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    var AnimationClipCreator = function () {\r\n    };\r\n    AnimationClipCreator.CreateRotationAnimation = function (period, axis) {\r\n        var times = [\r\n                0,\r\n                period\r\n            ], values = [\r\n                0,\r\n                360\r\n            ];\r\n        axis = axis || 'x';\r\n        var trackName = '.rotation[' + axis + ']';\r\n        var track = new THREE.NumberKeyframeTrack(trackName, times, values);\r\n        return new THREE.AnimationClip(null, period, [track]);\r\n    };\r\n    AnimationClipCreator.CreateScaleAxisAnimation = function (period, axis) {\r\n        var times = [\r\n                0,\r\n                period\r\n            ], values = [\r\n                0,\r\n                1\r\n            ];\r\n        axis = axis || 'x';\r\n        var trackName = '.scale[' + axis + ']';\r\n        var track = new THREE.NumberKeyframeTrack(trackName, times, values);\r\n        return new THREE.AnimationClip(null, period, [track]);\r\n    };\r\n    AnimationClipCreator.CreateShakeAnimation = function (duration, shakeScale) {\r\n        var times = [], values = [], tmp = new THREE.Vector3();\r\n        for (var i = 0; i < duration * 10; i++) {\r\n            times.push(i / 10);\r\n            tmp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).multiply(shakeScale).toArray(values, values.length);\r\n        }\r\n        var trackName = '.position';\r\n        var track = new THREE.VectorKeyframeTrack(trackName, times, values);\r\n        return new THREE.AnimationClip(null, duration, [track]);\r\n    };\r\n    AnimationClipCreator.CreatePulsationAnimation = function (duration, pulseScale) {\r\n        var times = [], values = [], tmp = new THREE.Vector3();\r\n        for (var i = 0; i < duration * 10; i++) {\r\n            times.push(i / 10);\r\n            var scaleFactor = Math.random() * pulseScale;\r\n            tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\r\n        }\r\n        var trackName = '.scale';\r\n        var track = new THREE.VectorKeyframeTrack(trackName, times, values);\r\n        return new THREE.AnimationClip(null, duration, [track]);\r\n    };\r\n    AnimationClipCreator.CreateVisibilityAnimation = function (duration) {\r\n        var times = [\r\n                0,\r\n                duration / 2,\r\n                duration\r\n            ], values = [\r\n                true,\r\n                false,\r\n                true\r\n            ];\r\n        var trackName = '.visible';\r\n        var track = new THREE.BooleanKeyframeTrack(trackName, times, values);\r\n        return new THREE.AnimationClip(null, duration, [track]);\r\n    };\r\n    AnimationClipCreator.CreateMaterialColorAnimation = function (duration, colors) {\r\n        var times = [], values = [], timeStep = duration / colors.length;\r\n        for (var i = 0; i <= colors.length; i++) {\r\n            times.push(i * timeStep);\r\n            values.push(colors[i % colors.length]);\r\n        }\r\n        var trackName = '.material[0].color';\r\n        var track = new THREE.ColorKeyframeTrack(trackName, times, values);\r\n        return new THREE.AnimationClip(null, duration, [track]);\r\n    };\r\n\r\n    return threex.animation.AnimationClipCreator = AnimationClipCreator;\r\n});"]}