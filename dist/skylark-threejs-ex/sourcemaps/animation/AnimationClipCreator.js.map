{"version":3,"sources":["animation/AnimationClipCreator.js"],"names":["define","THREE","AnimationClipCreator","CreateRotationAnimation","period","axis","times","trackName","track","NumberKeyframeTrack","AnimationClip","CreateScaleAxisAnimation","CreateShakeAnimation","duration","shakeScale","values","tmp","Vector3","i","push","set","Math","random","multiply","toArray","length","VectorKeyframeTrack","CreatePulsationAnimation","pulseScale","scaleFactor","CreateVisibilityAnimation","BooleanKeyframeTrack","CreateMaterialColorAnimation","colors","timeStep","ColorKeyframeTrack"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GAoHV,OA3GAA,EAAMC,qBAAuB,aAE7BD,EAAMC,qBAAqBC,wBAA0B,SAAWC,EAAQC,GAEvE,IAAIC,GAAU,EAAGF,GAGbG,EAAY,cADhBF,EAAOA,GAAQ,KACuB,IAElCG,EAAQ,IAAIP,EAAMQ,oBAAqBF,EAAWD,GALhB,EAAG,MAOzC,OAAO,IAAIL,EAAMS,cAAe,KAAMN,GAAUI,KAIjDP,EAAMC,qBAAqBS,yBAA2B,SAAWP,EAAQC,GAExE,IAAIC,GAAU,EAAGF,GAGbG,EAAY,WADhBF,EAAOA,GAAQ,KACoB,IAE/BG,EAAQ,IAAIP,EAAMQ,oBAAqBF,EAAWD,GALhB,EAAG,IAOzC,OAAO,IAAIL,EAAMS,cAAe,KAAMN,GAAUI,KAIjDP,EAAMC,qBAAqBU,qBAAuB,SAAWC,EAAUC,GAItE,IAFA,IAAIR,KAAYS,KAAaC,EAAM,IAAIf,EAAMgB,QAEnCC,EAAI,EAAGA,EAAe,GAAXL,EAAeK,IAEnCZ,EAAMa,KAAMD,EAAI,IAEhBF,EAAII,IAAqB,EAAhBC,KAAKC,SAAiB,EAAqB,EAAhBD,KAAKC,SAAiB,EAAqB,EAAhBD,KAAKC,SAAiB,GACpFC,SAAUT,GACVU,QAAST,EAAQA,EAAOU,QAI1B,IAEIjB,EAAQ,IAAIP,EAAMyB,oBAFN,YAEsCpB,EAAOS,GAE7D,OAAO,IAAId,EAAMS,cAAe,KAAMG,GAAYL,KAKnDP,EAAMC,qBAAqByB,yBAA2B,SAAWd,EAAUe,GAI1E,IAFA,IAAItB,KAAYS,KAAaC,EAAM,IAAIf,EAAMgB,QAEnCC,EAAI,EAAGA,EAAe,GAAXL,EAAeK,IAAO,CAE1CZ,EAAMa,KAAMD,EAAI,IAEhB,IAAIW,EAAcR,KAAKC,SAAWM,EAClCZ,EAAII,IAAKS,EAAaA,EAAaA,GAClCL,QAAST,EAAQA,EAAOU,QAI1B,IAEIjB,EAAQ,IAAIP,EAAMyB,oBAFN,SAEsCpB,EAAOS,GAE7D,OAAO,IAAId,EAAMS,cAAe,KAAMG,GAAYL,KAKnDP,EAAMC,qBAAqB4B,0BAA4B,SAAWjB,GAEjE,IAAIP,GAAU,EAAGO,EAAW,EAAGA,GAI3BL,EAAQ,IAAIP,EAAM8B,qBAFN,WAEuCzB,IAJD,GAAM,GAAO,IAMnE,OAAO,IAAIL,EAAMS,cAAe,KAAMG,GAAYL,KAKnDP,EAAMC,qBAAqB8B,6BAA+B,SAAWnB,EAAUoB,GAK9E,IAHA,IAAI3B,KAAYS,KACfmB,EAAWrB,EAAWoB,EAAOR,OAEpBP,EAAI,EAAGA,GAAKe,EAAOR,OAAQP,IAEpCZ,EAAMa,KAAMD,EAAIgB,GAChBnB,EAAOI,KAAMc,EAAQf,EAAIe,EAAOR,SAIjC,IAEIjB,EAAQ,IAAIP,EAAMkC,mBAFN,qBAEqC7B,EAAOS,GAE5D,OAAO,IAAId,EAAMS,cAAe,KAAMG,GAAYL,KAI5CP,EAAMC","file":"../../animation/AnimationClipCreator.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t *\n\t * Creator of typical test AnimationClips / KeyframeTracks\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tTHREE.AnimationClipCreator = function () {};\n\n\tTHREE.AnimationClipCreator.CreateRotationAnimation = function ( period, axis ) {\n\n\t\tvar times = [ 0, period ], values = [ 0, 360 ];\n\n\t\taxis = axis || 'x';\n\t\tvar trackName = '.rotation[' + axis + ']';\n\n\t\tvar track = new THREE.NumberKeyframeTrack( trackName, times, values );\n\n\t\treturn new THREE.AnimationClip( null, period, [ track ] );\n\n\t};\n\n\tTHREE.AnimationClipCreator.CreateScaleAxisAnimation = function ( period, axis ) {\n\n\t\tvar times = [ 0, period ], values = [ 0, 1 ];\n\n\t\taxis = axis || 'x';\n\t\tvar trackName = '.scale[' + axis + ']';\n\n\t\tvar track = new THREE.NumberKeyframeTrack( trackName, times, values );\n\n\t\treturn new THREE.AnimationClip( null, period, [ track ] );\n\n\t};\n\n\tTHREE.AnimationClipCreator.CreateShakeAnimation = function ( duration, shakeScale ) {\n\n\t\tvar times = [], values = [], tmp = new THREE.Vector3();\n\n\t\tfor ( var i = 0; i < duration * 10; i ++ ) {\n\n\t\t\ttimes.push( i / 10 );\n\n\t\t\ttmp.set( Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0 ).\n\t\t\t\tmultiply( shakeScale ).\n\t\t\t\ttoArray( values, values.length );\n\n\t\t}\n\n\t\tvar trackName = '.position';\n\n\t\tvar track = new THREE.VectorKeyframeTrack( trackName, times, values );\n\n\t\treturn new THREE.AnimationClip( null, duration, [ track ] );\n\n\t};\n\n\n\tTHREE.AnimationClipCreator.CreatePulsationAnimation = function ( duration, pulseScale ) {\n\n\t\tvar times = [], values = [], tmp = new THREE.Vector3();\n\n\t\tfor ( var i = 0; i < duration * 10; i ++ ) {\n\n\t\t\ttimes.push( i / 10 );\n\n\t\t\tvar scaleFactor = Math.random() * pulseScale;\n\t\t\ttmp.set( scaleFactor, scaleFactor, scaleFactor ).\n\t\t\t\ttoArray( values, values.length );\n\n\t\t}\n\n\t\tvar trackName = '.scale';\n\n\t\tvar track = new THREE.VectorKeyframeTrack( trackName, times, values );\n\n\t\treturn new THREE.AnimationClip( null, duration, [ track ] );\n\n\t};\n\n\n\tTHREE.AnimationClipCreator.CreateVisibilityAnimation = function ( duration ) {\n\n\t\tvar times = [ 0, duration / 2, duration ], values = [ true, false, true ];\n\n\t\tvar trackName = '.visible';\n\n\t\tvar track = new THREE.BooleanKeyframeTrack( trackName, times, values );\n\n\t\treturn new THREE.AnimationClip( null, duration, [ track ] );\n\n\t};\n\n\n\tTHREE.AnimationClipCreator.CreateMaterialColorAnimation = function ( duration, colors ) {\n\n\t\tvar times = [], values = [],\n\t\t\ttimeStep = duration / colors.length;\n\n\t\tfor ( var i = 0; i <= colors.length; i ++ ) {\n\n\t\t\ttimes.push( i * timeStep );\n\t\t\tvalues.push( colors[ i % colors.length ] );\n\n\t\t}\n\n\t\tvar trackName = '.material[0].color';\n\n\t\tvar track = new THREE.ColorKeyframeTrack( trackName, times, values );\n\n\t\treturn new THREE.AnimationClip( null, duration, [ track ] );\n\n\t};\n\n\treturn THREE.AnimationClipCreator;\n});\n"]}