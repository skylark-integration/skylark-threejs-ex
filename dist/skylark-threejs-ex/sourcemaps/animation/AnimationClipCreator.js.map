{"version":3,"sources":["animation/AnimationClipCreator.js"],"names":["define","THREE","threex","AnimationClipCreator","CreateRotationAnimation","period","axis","times","trackName","track","NumberKeyframeTrack","AnimationClip","CreateScaleAxisAnimation","CreateShakeAnimation","duration","shakeScale","values","tmp","Vector3","i","push","set","Math","random","multiply","toArray","length","VectorKeyframeTrack","CreatePulsationAnimation","pulseScale","scaleFactor","CreateVisibilityAnimation","BooleanKeyframeTrack","CreateMaterialColorAnimation","colors","timeStep","ColorKeyframeTrack","animation"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aACA,IAAIC,EAAuB,aA0E3B,OAxEAA,EAAqBC,wBAA0B,SAAUC,EAAQC,GAC7D,IAAIC,GACI,EACAF,GAMJG,EAAY,cADhBF,EAAOA,GAAQ,KACuB,IAClCG,EAAQ,IAAIR,EAAMS,oBAAoBF,EAAWD,GAL7C,EACA,MAKR,OAAO,IAAIN,EAAMU,cAAc,KAAMN,GAASI,KAElDN,EAAqBS,yBAA2B,SAAUP,EAAQC,GAC9D,IAAIC,GACI,EACAF,GAMJG,EAAY,WADhBF,EAAOA,GAAQ,KACoB,IAC/BG,EAAQ,IAAIR,EAAMS,oBAAoBF,EAAWD,GAL7C,EACA,IAKR,OAAO,IAAIN,EAAMU,cAAc,KAAMN,GAASI,KAElDN,EAAqBU,qBAAuB,SAAUC,EAAUC,GAE5D,IADA,IAAIR,KAAYS,KAAaC,EAAM,IAAIhB,EAAMiB,QACpCC,EAAI,EAAGA,EAAe,GAAXL,EAAeK,IAC/BZ,EAAMa,KAAKD,EAAI,IACfF,EAAII,IAAoB,EAAhBC,KAAKC,SAAe,EAAmB,EAAhBD,KAAKC,SAAe,EAAmB,EAAhBD,KAAKC,SAAe,GAAGC,SAAST,GAAYU,QAAQT,EAAQA,EAAOU,QAE7H,IACIjB,EAAQ,IAAIR,EAAM0B,oBADN,YACqCpB,EAAOS,GAC5D,OAAO,IAAIf,EAAMU,cAAc,KAAMG,GAAWL,KAEpDN,EAAqByB,yBAA2B,SAAUd,EAAUe,GAEhE,IADA,IAAItB,KAAYS,KAAaC,EAAM,IAAIhB,EAAMiB,QACpCC,EAAI,EAAGA,EAAe,GAAXL,EAAeK,IAAK,CACpCZ,EAAMa,KAAKD,EAAI,IACf,IAAIW,EAAcR,KAAKC,SAAWM,EAClCZ,EAAII,IAAIS,EAAaA,EAAaA,GAAaL,QAAQT,EAAQA,EAAOU,QAE1E,IACIjB,EAAQ,IAAIR,EAAM0B,oBADN,SACqCpB,EAAOS,GAC5D,OAAO,IAAIf,EAAMU,cAAc,KAAMG,GAAWL,KAEpDN,EAAqB4B,0BAA4B,SAAUjB,GACvD,IAAIP,GACI,EACAO,EAAW,EACXA,GAOJL,EAAQ,IAAIR,EAAM+B,qBADN,WACsCzB,IAL9C,GACA,GACA,IAIR,OAAO,IAAIN,EAAMU,cAAc,KAAMG,GAAWL,KAEpDN,EAAqB8B,6BAA+B,SAAUnB,EAAUoB,GAEpE,IADA,IAAI3B,KAAYS,KAAamB,EAAWrB,EAAWoB,EAAOR,OACjDP,EAAI,EAAGA,GAAKe,EAAOR,OAAQP,IAChCZ,EAAMa,KAAKD,EAAIgB,GACfnB,EAAOI,KAAKc,EAAOf,EAAIe,EAAOR,SAElC,IACIjB,EAAQ,IAAIR,EAAMmC,mBADN,qBACoC7B,EAAOS,GAC3D,OAAO,IAAIf,EAAMU,cAAc,KAAMG,GAAWL,KAG7CP,EAAOmC,UAAUlC,qBAAuBA","file":"../../animation/AnimationClipCreator.js","sourcesContent":["define([\n    \"skylark-threejs\",\n    \"../threex\"\n], function (\n    THREE,\n    threex\n) {\n    'use strict';\n    var AnimationClipCreator = function () {\n    };\n    AnimationClipCreator.CreateRotationAnimation = function (period, axis) {\n        var times = [\n                0,\n                period\n            ], values = [\n                0,\n                360\n            ];\n        axis = axis || 'x';\n        var trackName = '.rotation[' + axis + ']';\n        var track = new THREE.NumberKeyframeTrack(trackName, times, values);\n        return new THREE.AnimationClip(null, period, [track]);\n    };\n    AnimationClipCreator.CreateScaleAxisAnimation = function (period, axis) {\n        var times = [\n                0,\n                period\n            ], values = [\n                0,\n                1\n            ];\n        axis = axis || 'x';\n        var trackName = '.scale[' + axis + ']';\n        var track = new THREE.NumberKeyframeTrack(trackName, times, values);\n        return new THREE.AnimationClip(null, period, [track]);\n    };\n    AnimationClipCreator.CreateShakeAnimation = function (duration, shakeScale) {\n        var times = [], values = [], tmp = new THREE.Vector3();\n        for (var i = 0; i < duration * 10; i++) {\n            times.push(i / 10);\n            tmp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).multiply(shakeScale).toArray(values, values.length);\n        }\n        var trackName = '.position';\n        var track = new THREE.VectorKeyframeTrack(trackName, times, values);\n        return new THREE.AnimationClip(null, duration, [track]);\n    };\n    AnimationClipCreator.CreatePulsationAnimation = function (duration, pulseScale) {\n        var times = [], values = [], tmp = new THREE.Vector3();\n        for (var i = 0; i < duration * 10; i++) {\n            times.push(i / 10);\n            var scaleFactor = Math.random() * pulseScale;\n            tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n        }\n        var trackName = '.scale';\n        var track = new THREE.VectorKeyframeTrack(trackName, times, values);\n        return new THREE.AnimationClip(null, duration, [track]);\n    };\n    AnimationClipCreator.CreateVisibilityAnimation = function (duration) {\n        var times = [\n                0,\n                duration / 2,\n                duration\n            ], values = [\n                true,\n                false,\n                true\n            ];\n        var trackName = '.visible';\n        var track = new THREE.BooleanKeyframeTrack(trackName, times, values);\n        return new THREE.AnimationClip(null, duration, [track]);\n    };\n    AnimationClipCreator.CreateMaterialColorAnimation = function (duration, colors) {\n        var times = [], values = [], timeStep = duration / colors.length;\n        for (var i = 0; i <= colors.length; i++) {\n            times.push(i * timeStep);\n            values.push(colors[i % colors.length]);\n        }\n        var trackName = '.material[0].color';\n        var track = new THREE.ColorKeyframeTrack(trackName, times, values);\n        return new THREE.AnimationClip(null, duration, [track]);\n    };\n\n    return threex.animation.AnimationClipCreator = AnimationClipCreator;\n});"]}