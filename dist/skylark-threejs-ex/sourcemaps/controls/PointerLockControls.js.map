{"version":3,"sources":["controls/PointerLockControls.js"],"names":["define","THREE","PointerLockControls","camera","domElement","undefined","console","warn","document","body","this","isLocked","direction","scope","changeEvent","type","lockEvent","unlockEvent","euler","Euler","PI_2","Math","PI","vec","Vector3","onMouseMove","event","movementX","mozMovementX","webkitMovementX","movementY","mozMovementY","webkitMovementY","setFromQuaternion","quaternion","y","x","max","min","setFromEuler","dispatchEvent","onPointerlockChange","pointerLockElement","onPointerlockError","error","connect","addEventListener","disconnect","removeEventListener","dispose","getObject","getDirection","v","copy","applyQuaternion","moveForward","distance","setFromMatrixColumn","matrix","crossVectors","up","position","addScaledVector","moveRight","lock","requestPointerLock","unlock","exitPointerLock","prototype","Object","create","EventDispatcher","constructor"],"mappings":";;;;;;;AAAAA,QACI,mBACD,SAAUC,GACT,aACA,IAAIC,EAAsB,SAAUC,EAAQC,QACrBC,IAAfD,IACAE,QAAQC,KAAK,kFACbH,EAAaI,SAASC,MAE1BC,KAAKN,WAAaA,EAClBM,KAAKC,UAAW,EAChB,IAgDQC,EAhDJC,EAAQH,KACRI,GAAgBC,KAAM,UACtBC,GAAcD,KAAM,QACpBE,GAAgBF,KAAM,UACtBG,EAAQ,IAAIjB,EAAMkB,MAAM,EAAG,EAAG,EAAG,OACjCC,EAAOC,KAAKC,GAAK,EACjBC,EAAM,IAAItB,EAAMuB,QACpB,SAASC,EAAYC,GACjB,IAAuB,IAAnBb,EAAMF,SAAV,CAEA,IAAIgB,EAAYD,EAAMC,WAAaD,EAAME,cAAgBF,EAAMG,iBAAmB,EAC9EC,EAAYJ,EAAMI,WAAaJ,EAAMK,cAAgBL,EAAMM,iBAAmB,EAClFd,EAAMe,kBAAkB9B,EAAO+B,YAC/BhB,EAAMiB,GAAiB,KAAZR,EACXT,EAAMkB,GAAiB,KAAZN,EACXZ,EAAMkB,EAAIf,KAAKgB,KAAKjB,EAAMC,KAAKiB,IAAIlB,EAAMF,EAAMkB,IAC/CjC,EAAO+B,WAAWK,aAAarB,GAC/BL,EAAM2B,cAAc1B,IAExB,SAAS2B,IACDjC,SAASkC,qBAAuB7B,EAAMT,YACtCS,EAAM2B,cAAcxB,GACpBH,EAAMF,UAAW,IAEjBE,EAAM2B,cAAcvB,GACpBJ,EAAMF,UAAW,GAGzB,SAASgC,IACLrC,QAAQsC,MAAM,6DAElBlC,KAAKmC,QAAU,WACXrC,SAASsC,iBAAiB,YAAarB,GAAa,GACpDjB,SAASsC,iBAAiB,oBAAqBL,GAAqB,GACpEjC,SAASsC,iBAAiB,mBAAoBH,GAAoB,IAEtEjC,KAAKqC,WAAa,WACdvC,SAASwC,oBAAoB,YAAavB,GAAa,GACvDjB,SAASwC,oBAAoB,oBAAqBP,GAAqB,GACvEjC,SAASwC,oBAAoB,mBAAoBL,GAAoB,IAEzEjC,KAAKuC,QAAU,WACXvC,KAAKqC,cAETrC,KAAKwC,UAAY,WACb,OAAO/C,GAEXO,KAAKyC,cACGvC,EAAY,IAAIX,EAAMuB,QAAQ,EAAG,GAAI,GAClC,SAAU4B,GACb,OAAOA,EAAEC,KAAKzC,GAAW0C,gBAAgBnD,EAAO+B,cAGxDxB,KAAK6C,YAAc,SAAUC,GACzBjC,EAAIkC,oBAAoBtD,EAAOuD,OAAQ,GACvCnC,EAAIoC,aAAaxD,EAAOyD,GAAIrC,GAC5BpB,EAAO0D,SAASC,gBAAgBvC,EAAKiC,IAEzC9C,KAAKqD,UAAY,SAAUP,GACvBjC,EAAIkC,oBAAoBtD,EAAOuD,OAAQ,GACvCvD,EAAO0D,SAASC,gBAAgBvC,EAAKiC,IAEzC9C,KAAKsD,KAAO,WACRtD,KAAKN,WAAW6D,sBAEpBvD,KAAKwD,OAAS,WACV1D,SAAS2D,mBAEbzD,KAAKmC,WAMT,OAHA3C,EAAoBkE,UAAYC,OAAOC,OAAOrE,EAAMsE,gBAAgBH,YACtCI,YAActE,EAErCA","file":"../../controls/PointerLockControls.js","sourcesContent":["define([\n    \"skylark-threejs\"\n], function (THREE) {\n    'use strict';\n    var PointerLockControls = function (camera, domElement) {\n        if (domElement === undefined) {\n            console.warn('THREE.PointerLockControls: The second parameter \"domElement\" is now mandatory.');\n            domElement = document.body;\n        }\n        this.domElement = domElement;\n        this.isLocked = false;\n        var scope = this;\n        var changeEvent = { type: 'change' };\n        var lockEvent = { type: 'lock' };\n        var unlockEvent = { type: 'unlock' };\n        var euler = new THREE.Euler(0, 0, 0, 'YXZ');\n        var PI_2 = Math.PI / 2;\n        var vec = new THREE.Vector3();\n        function onMouseMove(event) {\n            if (scope.isLocked === false)\n                return;\n            var movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;\n            var movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n            euler.setFromQuaternion(camera.quaternion);\n            euler.y -= movementX * 0.002;\n            euler.x -= movementY * 0.002;\n            euler.x = Math.max(-PI_2, Math.min(PI_2, euler.x));\n            camera.quaternion.setFromEuler(euler);\n            scope.dispatchEvent(changeEvent);\n        }\n        function onPointerlockChange() {\n            if (document.pointerLockElement === scope.domElement) {\n                scope.dispatchEvent(lockEvent);\n                scope.isLocked = true;\n            } else {\n                scope.dispatchEvent(unlockEvent);\n                scope.isLocked = false;\n            }\n        }\n        function onPointerlockError() {\n            console.error('THREE.PointerLockControls: Unable to use Pointer Lock API');\n        }\n        this.connect = function () {\n            document.addEventListener('mousemove', onMouseMove, false);\n            document.addEventListener('pointerlockchange', onPointerlockChange, false);\n            document.addEventListener('pointerlockerror', onPointerlockError, false);\n        };\n        this.disconnect = function () {\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('pointerlockchange', onPointerlockChange, false);\n            document.removeEventListener('pointerlockerror', onPointerlockError, false);\n        };\n        this.dispose = function () {\n            this.disconnect();\n        };\n        this.getObject = function () {\n            return camera;\n        };\n        this.getDirection = function () {\n            var direction = new THREE.Vector3(0, 0, -1);\n            return function (v) {\n                return v.copy(direction).applyQuaternion(camera.quaternion);\n            };\n        }();\n        this.moveForward = function (distance) {\n            vec.setFromMatrixColumn(camera.matrix, 0);\n            vec.crossVectors(camera.up, vec);\n            camera.position.addScaledVector(vec, distance);\n        };\n        this.moveRight = function (distance) {\n            vec.setFromMatrixColumn(camera.matrix, 0);\n            camera.position.addScaledVector(vec, distance);\n        };\n        this.lock = function () {\n            this.domElement.requestPointerLock();\n        };\n        this.unlock = function () {\n            document.exitPointerLock();\n        };\n        this.connect();\n    };\n    \n    PointerLockControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    PointerLockControls.prototype.constructor = PointerLockControls;\n\n    return PointerLockControls;\n});"]}