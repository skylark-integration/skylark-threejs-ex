{"version":3,"sources":["controls/PointerLockControls.js"],"names":["define","THREE","PointerLockControls","camera","domElement","undefined","console","warn","document","body","this","isLocked","direction","scope","changeEvent","type","lockEvent","unlockEvent","euler","Euler","PI_2","Math","PI","vec","Vector3","onMouseMove","event","movementX","mozMovementX","webkitMovementX","movementY","mozMovementY","webkitMovementY","setFromQuaternion","quaternion","y","x","max","min","setFromEuler","dispatchEvent","onPointerlockChange","pointerLockElement","onPointerlockError","error","connect","addEventListener","disconnect","removeEventListener","dispose","getObject","getDirection","v","copy","applyQuaternion","moveForward","distance","setFromMatrixColumn","matrix","crossVectors","up","position","addScaledVector","moveRight","lock","requestPointerLock","unlock","exitPointerLock","prototype","Object","create","EventDispatcher","constructor"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GA8JV,OAxJAA,EAAMC,oBAAsB,SAAWC,EAAQC,QAE1BC,IAAfD,IAEJE,QAAQC,KAAM,kFACdH,EAAaI,SAASC,MAIvBC,KAAKN,WAAaA,EAClBM,KAAKC,UAAW,EAMhB,IAsFKC,EAtFDC,EAAQH,KAERI,GAAgBC,KAAM,UACtBC,GAAcD,KAAM,QACpBE,GAAgBF,KAAM,UAEtBG,EAAQ,IAAIjB,EAAMkB,MAAO,EAAG,EAAG,EAAG,OAElCC,EAAOC,KAAKC,GAAK,EAEjBC,EAAM,IAAItB,EAAMuB,QAEpB,SAASC,EAAaC,GAErB,IAAwB,IAAnBb,EAAMF,SAAX,CAEA,IAAIgB,EAAYD,EAAMC,WAAaD,EAAME,cAAgBF,EAAMG,iBAAmB,EAC9EC,EAAYJ,EAAMI,WAAaJ,EAAMK,cAAgBL,EAAMM,iBAAmB,EAElFd,EAAMe,kBAAmB9B,EAAO+B,YAEhChB,EAAMiB,GAAiB,KAAZR,EACXT,EAAMkB,GAAiB,KAAZN,EAEXZ,EAAMkB,EAAIf,KAAKgB,KAAOjB,EAAMC,KAAKiB,IAAKlB,EAAMF,EAAMkB,IAElDjC,EAAO+B,WAAWK,aAAcrB,GAEhCL,EAAM2B,cAAe1B,IAItB,SAAS2B,IAEHjC,SAASkC,qBAAuB7B,EAAMT,YAE1CS,EAAM2B,cAAexB,GAErBH,EAAMF,UAAW,IAIjBE,EAAM2B,cAAevB,GAErBJ,EAAMF,UAAW,GAMnB,SAASgC,IAERrC,QAAQsC,MAAO,6DAIhBlC,KAAKmC,QAAU,WAEdrC,SAASsC,iBAAkB,YAAarB,GAAa,GACrDjB,SAASsC,iBAAkB,oBAAqBL,GAAqB,GACrEjC,SAASsC,iBAAkB,mBAAoBH,GAAoB,IAIpEjC,KAAKqC,WAAa,WAEjBvC,SAASwC,oBAAqB,YAAavB,GAAa,GACxDjB,SAASwC,oBAAqB,oBAAqBP,GAAqB,GACxEjC,SAASwC,oBAAqB,mBAAoBL,GAAoB,IAIvEjC,KAAKuC,QAAU,WAEdvC,KAAKqC,cAINrC,KAAKwC,UAAY,WAEhB,OAAO/C,GAIRO,KAAKyC,cAEAvC,EAAY,IAAIX,EAAMuB,QAAS,EAAG,GAAK,GAEpC,SAAW4B,GAEjB,OAAOA,EAAEC,KAAMzC,GAAY0C,gBAAiBnD,EAAO+B,cAMrDxB,KAAK6C,YAAc,SAAWC,GAK7BjC,EAAIkC,oBAAqBtD,EAAOuD,OAAQ,GAExCnC,EAAIoC,aAAcxD,EAAOyD,GAAIrC,GAE7BpB,EAAO0D,SAASC,gBAAiBvC,EAAKiC,IAIvC9C,KAAKqD,UAAY,SAAWP,GAE3BjC,EAAIkC,oBAAqBtD,EAAOuD,OAAQ,GAExCvD,EAAO0D,SAASC,gBAAiBvC,EAAKiC,IAIvC9C,KAAKsD,KAAO,WAEXtD,KAAKN,WAAW6D,sBAIjBvD,KAAKwD,OAAS,WAEb1D,SAAS2D,mBAIVzD,KAAKmC,WAIN5C,EAAMC,oBAAoBkE,UAAYC,OAAOC,OAAQrE,EAAMsE,gBAAgBH,WAC3EnE,EAAMC,oBAAoBkE,UAAUI,YAAcvE,EAAMC,oBAEjDD,EAAMC","file":"../../controls/PointerLockControls.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.PointerLockControls = function ( camera, domElement ) {\n\n\t\tif ( domElement === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.PointerLockControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tdomElement = document.body;\n\n\t\t}\n\n\t\tthis.domElement = domElement;\n\t\tthis.isLocked = false;\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar lockEvent = { type: 'lock' };\n\t\tvar unlockEvent = { type: 'unlock' };\n\n\t\tvar euler = new THREE.Euler( 0, 0, 0, 'YXZ' );\n\n\t\tvar PI_2 = Math.PI / 2;\n\n\t\tvar vec = new THREE.Vector3();\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.isLocked === false ) return;\n\n\t\t\tvar movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;\n\t\t\tvar movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n\n\t\t\teuler.setFromQuaternion( camera.quaternion );\n\n\t\t\teuler.y -= movementX * 0.002;\n\t\t\teuler.x -= movementY * 0.002;\n\n\t\t\teuler.x = Math.max( - PI_2, Math.min( PI_2, euler.x ) );\n\n\t\t\tcamera.quaternion.setFromEuler( euler );\n\n\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t}\n\n\t\tfunction onPointerlockChange() {\n\n\t\t\tif ( document.pointerLockElement === scope.domElement ) {\n\n\t\t\t\tscope.dispatchEvent( lockEvent );\n\n\t\t\t\tscope.isLocked = true;\n\n\t\t\t} else {\n\n\t\t\t\tscope.dispatchEvent( unlockEvent );\n\n\t\t\t\tscope.isLocked = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerlockError() {\n\n\t\t\tconsole.error( 'THREE.PointerLockControls: Unable to use Pointer Lock API' );\n\n\t\t}\n\n\t\tthis.connect = function () {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'pointerlockchange', onPointerlockChange, false );\n\t\t\tdocument.addEventListener( 'pointerlockerror', onPointerlockError, false );\n\n\t\t};\n\n\t\tthis.disconnect = function () {\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'pointerlockchange', onPointerlockChange, false );\n\t\t\tdocument.removeEventListener( 'pointerlockerror', onPointerlockError, false );\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\tthis.disconnect();\n\n\t\t};\n\n\t\tthis.getObject = function () { // retaining this method for backward compatibility\n\n\t\t\treturn camera;\n\n\t\t};\n\n\t\tthis.getDirection = function () {\n\n\t\t\tvar direction = new THREE.Vector3( 0, 0, - 1 );\n\n\t\t\treturn function ( v ) {\n\n\t\t\t\treturn v.copy( direction ).applyQuaternion( camera.quaternion );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.moveForward = function ( distance ) {\n\n\t\t\t// move forward parallel to the xz-plane\n\t\t\t// assumes camera.up is y-up\n\n\t\t\tvec.setFromMatrixColumn( camera.matrix, 0 );\n\n\t\t\tvec.crossVectors( camera.up, vec );\n\n\t\t\tcamera.position.addScaledVector( vec, distance );\n\n\t\t};\n\n\t\tthis.moveRight = function ( distance ) {\n\n\t\t\tvec.setFromMatrixColumn( camera.matrix, 0 );\n\n\t\t\tcamera.position.addScaledVector( vec, distance );\n\n\t\t};\n\n\t\tthis.lock = function () {\n\n\t\t\tthis.domElement.requestPointerLock();\n\n\t\t};\n\n\t\tthis.unlock = function () {\n\n\t\t\tdocument.exitPointerLock();\n\n\t\t};\n\n\t\tthis.connect();\n\n\t};\n\n\tTHREE.PointerLockControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tTHREE.PointerLockControls.prototype.constructor = THREE.PointerLockControls;\n\n\treturn THREE.PointerLockControls;\n});\n"]}