{"version":3,"sources":["controls/DragControls.js"],"names":["define","THREE","threex","DragControls","_objects","_camera","_domElement","_plane","Plane","_raycaster","Raycaster","_mouse","Vector2","_offset","Vector3","_intersection","_worldPosition","_inverseMatrix","Matrix4","_intersections","_selected","_hovered","scope","this","activate","addEventListener","onDocumentMouseMove","onDocumentMouseDown","onDocumentMouseCancel","onDocumentTouchMove","onDocumentTouchStart","onDocumentTouchEnd","deactivate","removeEventListener","event","preventDefault","rect","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","setFromCamera","enabled","ray","intersectPlane","position","copy","sub","applyMatrix4","dispatchEvent","type","object","length","intersectObjects","setFromNormalAndCoplanarPoint","getWorldDirection","normal","setFromMatrixPosition","matrixWorld","style","cursor","transformGroup","getInverse","parent","changedTouches","dispose","getObjects","prototype","Object","create","EventDispatcher","constructor","controls"],"mappings":"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","file":"../../controls/DragControls.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\"\r\n], function (\r\n    THREE,\r\n    threex\r\n) {\r\n    'use strict';\r\n    var DragControls = function (_objects, _camera, _domElement) {\r\n        var _plane = new THREE.Plane();\r\n        var _raycaster = new THREE.Raycaster();\r\n        var _mouse = new THREE.Vector2();\r\n        var _offset = new THREE.Vector3();\r\n        var _intersection = new THREE.Vector3();\r\n        var _worldPosition = new THREE.Vector3();\r\n        var _inverseMatrix = new THREE.Matrix4();\r\n        var _intersections = [];\r\n        var _selected = null, _hovered = null;\r\n        var scope = this;\r\n        function activate() {\r\n            _domElement.addEventListener('mousemove', onDocumentMouseMove, false);\r\n            _domElement.addEventListener('mousedown', onDocumentMouseDown, false);\r\n            _domElement.addEventListener('mouseup', onDocumentMouseCancel, false);\r\n            _domElement.addEventListener('mouseleave', onDocumentMouseCancel, false);\r\n            _domElement.addEventListener('touchmove', onDocumentTouchMove, false);\r\n            _domElement.addEventListener('touchstart', onDocumentTouchStart, false);\r\n            _domElement.addEventListener('touchend', onDocumentTouchEnd, false);\r\n        }\r\n        function deactivate() {\r\n            _domElement.removeEventListener('mousemove', onDocumentMouseMove, false);\r\n            _domElement.removeEventListener('mousedown', onDocumentMouseDown, false);\r\n            _domElement.removeEventListener('mouseup', onDocumentMouseCancel, false);\r\n            _domElement.removeEventListener('mouseleave', onDocumentMouseCancel, false);\r\n            _domElement.removeEventListener('touchmove', onDocumentTouchMove, false);\r\n            _domElement.removeEventListener('touchstart', onDocumentTouchStart, false);\r\n            _domElement.removeEventListener('touchend', onDocumentTouchEnd, false);\r\n        }\r\n        function dispose() {\r\n            deactivate();\r\n        }\r\n        function getObjects() {\r\n            return _objects;\r\n        }\r\n        function onDocumentMouseMove(event) {\r\n            event.preventDefault();\r\n            var rect = _domElement.getBoundingClientRect();\r\n            _mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\r\n            _mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n            _raycaster.setFromCamera(_mouse, _camera);\r\n            if (_selected && scope.enabled) {\r\n                if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\r\n                    _selected.position.copy(_intersection.sub(_offset).applyMatrix4(_inverseMatrix));\r\n                }\r\n                scope.dispatchEvent({\r\n                    type: 'drag',\r\n                    object: _selected\r\n                });\r\n                return;\r\n            }\r\n            _intersections.length = 0;\r\n            _raycaster.setFromCamera(_mouse, _camera);\r\n            _raycaster.intersectObjects(_objects, true, _intersections);\r\n            if (_intersections.length > 0) {\r\n                var object = _intersections[0].object;\r\n                _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(object.matrixWorld));\r\n                if (_hovered !== object) {\r\n                    scope.dispatchEvent({\r\n                        type: 'hoveron',\r\n                        object: object\r\n                    });\r\n                    _domElement.style.cursor = 'pointer';\r\n                    _hovered = object;\r\n                }\r\n            } else {\r\n                if (_hovered !== null) {\r\n                    scope.dispatchEvent({\r\n                        type: 'hoveroff',\r\n                        object: _hovered\r\n                    });\r\n                    _domElement.style.cursor = 'auto';\r\n                    _hovered = null;\r\n                }\r\n            }\r\n        }\r\n        function onDocumentMouseDown(event) {\r\n            event.preventDefault();\r\n            _intersections.length = 0;\r\n            _raycaster.setFromCamera(_mouse, _camera);\r\n            _raycaster.intersectObjects(_objects, true, _intersections);\r\n            if (_intersections.length > 0) {\r\n                _selected = scope.transformGroup === true ? _objects[0] : _intersections[0].object;\r\n                if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\r\n                    _inverseMatrix.getInverse(_selected.parent.matrixWorld);\r\n                    _offset.copy(_intersection).sub(_worldPosition.setFromMatrixPosition(_selected.matrixWorld));\r\n                }\r\n                _domElement.style.cursor = 'move';\r\n                scope.dispatchEvent({\r\n                    type: 'dragstart',\r\n                    object: _selected\r\n                });\r\n            }\r\n        }\r\n        function onDocumentMouseCancel(event) {\r\n            event.preventDefault();\r\n            if (_selected) {\r\n                scope.dispatchEvent({\r\n                    type: 'dragend',\r\n                    object: _selected\r\n                });\r\n                _selected = null;\r\n            }\r\n            _domElement.style.cursor = _hovered ? 'pointer' : 'auto';\r\n        }\r\n        function onDocumentTouchMove(event) {\r\n            event.preventDefault();\r\n            event = event.changedTouches[0];\r\n            var rect = _domElement.getBoundingClientRect();\r\n            _mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\r\n            _mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n            _raycaster.setFromCamera(_mouse, _camera);\r\n            if (_selected && scope.enabled) {\r\n                if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\r\n                    _selected.position.copy(_intersection.sub(_offset).applyMatrix4(_inverseMatrix));\r\n                }\r\n                scope.dispatchEvent({\r\n                    type: 'drag',\r\n                    object: _selected\r\n                });\r\n                return;\r\n            }\r\n        }\r\n        function onDocumentTouchStart(event) {\r\n            event.preventDefault();\r\n            event = event.changedTouches[0];\r\n            var rect = _domElement.getBoundingClientRect();\r\n            _mouse.x = (event.clientX - rect.left) / rect.width * 2 - 1;\r\n            _mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n            _intersections.length = 0;\r\n            _raycaster.setFromCamera(_mouse, _camera);\r\n            _raycaster.intersectObjects(_objects, true, _intersections);\r\n            if (_intersections.length > 0) {\r\n                _selected = scope.transformGroup === true ? _objects[0] : _intersections[0].object;\r\n                _plane.setFromNormalAndCoplanarPoint(_camera.getWorldDirection(_plane.normal), _worldPosition.setFromMatrixPosition(_selected.matrixWorld));\r\n                if (_raycaster.ray.intersectPlane(_plane, _intersection)) {\r\n                    _inverseMatrix.getInverse(_selected.parent.matrixWorld);\r\n                    _offset.copy(_intersection).sub(_worldPosition.setFromMatrixPosition(_selected.matrixWorld));\r\n                }\r\n                _domElement.style.cursor = 'move';\r\n                scope.dispatchEvent({\r\n                    type: 'dragstart',\r\n                    object: _selected\r\n                });\r\n            }\r\n        }\r\n        function onDocumentTouchEnd(event) {\r\n            event.preventDefault();\r\n            if (_selected) {\r\n                scope.dispatchEvent({\r\n                    type: 'dragend',\r\n                    object: _selected\r\n                });\r\n                _selected = null;\r\n            }\r\n            _domElement.style.cursor = 'auto';\r\n        }\r\n        activate();\r\n        this.enabled = true;\r\n        this.transformGroup = false;\r\n        this.activate = activate;\r\n        this.deactivate = deactivate;\r\n        this.dispose = dispose;\r\n        this.getObjects = getObjects;\r\n    };\r\n    DragControls.prototype = Object.create(THREE.EventDispatcher.prototype);\r\n    DragControls.prototype.constructor = DragControls;\r\n\r\n    return threex.controls.DragControls = DragControls;\r\n});"]}