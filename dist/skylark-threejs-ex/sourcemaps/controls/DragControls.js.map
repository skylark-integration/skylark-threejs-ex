{"version":3,"sources":["controls/DragControls.js"],"names":["define","THREE","DragControls","_objects","_camera","_domElement","_plane","Plane","_raycaster","Raycaster","_mouse","Vector2","_offset","Vector3","_intersection","_worldPosition","_inverseMatrix","Matrix4","_intersections","_selected","_hovered","scope","this","activate","addEventListener","onDocumentMouseMove","onDocumentMouseDown","onDocumentMouseCancel","onDocumentTouchMove","onDocumentTouchStart","onDocumentTouchEnd","deactivate","removeEventListener","event","preventDefault","rect","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","setFromCamera","enabled","ray","intersectPlane","position","copy","sub","applyMatrix4","dispatchEvent","type","object","length","intersectObjects","setFromNormalAndCoplanarPoint","getWorldDirection","normal","setFromMatrixPosition","matrixWorld","style","cursor","transformGroup","getInverse","parent","changedTouches","dispose","getObjects","prototype","Object","create","EventDispatcher","constructor"],"mappings":"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","file":"../../controls/DragControls.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author mrdoob / http://mrdoob.com\n\t * Running this will allow you to drag three.js objects around the screen.\n\t */\n\n\tTHREE.DragControls = function ( _objects, _camera, _domElement ) {\n\n\t\tvar _plane = new THREE.Plane();\n\t\tvar _raycaster = new THREE.Raycaster();\n\n\t\tvar _mouse = new THREE.Vector2();\n\t\tvar _offset = new THREE.Vector3();\n\t\tvar _intersection = new THREE.Vector3();\n\t\tvar _worldPosition = new THREE.Vector3();\n\t\tvar _inverseMatrix = new THREE.Matrix4();\n\t\tvar _intersections = [];\n\n\t\tvar _selected = null, _hovered = null;\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tfunction activate() {\n\n\t\t\t_domElement.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\t\t\t_domElement.addEventListener( 'mousedown', onDocumentMouseDown, false );\n\t\t\t_domElement.addEventListener( 'mouseup', onDocumentMouseCancel, false );\n\t\t\t_domElement.addEventListener( 'mouseleave', onDocumentMouseCancel, false );\n\t\t\t_domElement.addEventListener( 'touchmove', onDocumentTouchMove, false );\n\t\t\t_domElement.addEventListener( 'touchstart', onDocumentTouchStart, false );\n\t\t\t_domElement.addEventListener( 'touchend', onDocumentTouchEnd, false );\n\n\t\t}\n\n\t\tfunction deactivate() {\n\n\t\t\t_domElement.removeEventListener( 'mousemove', onDocumentMouseMove, false );\n\t\t\t_domElement.removeEventListener( 'mousedown', onDocumentMouseDown, false );\n\t\t\t_domElement.removeEventListener( 'mouseup', onDocumentMouseCancel, false );\n\t\t\t_domElement.removeEventListener( 'mouseleave', onDocumentMouseCancel, false );\n\t\t\t_domElement.removeEventListener( 'touchmove', onDocumentTouchMove, false );\n\t\t\t_domElement.removeEventListener( 'touchstart', onDocumentTouchStart, false );\n\t\t\t_domElement.removeEventListener( 'touchend', onDocumentTouchEnd, false );\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tdeactivate();\n\n\t\t}\n\n\t\tfunction getObjects() {\n\n\t\t\treturn _objects;\n\n\t\t}\n\n\t\tfunction onDocumentMouseMove( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar rect = _domElement.getBoundingClientRect();\n\n\t\t\t_mouse.x = ( ( event.clientX - rect.left ) / rect.width ) * 2 - 1;\n\t\t\t_mouse.y = - ( ( event.clientY - rect.top ) / rect.height ) * 2 + 1;\n\n\t\t\t_raycaster.setFromCamera( _mouse, _camera );\n\n\t\t\tif ( _selected && scope.enabled ) {\n\n\t\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t\t_selected.position.copy( _intersection.sub( _offset ).applyMatrix4( _inverseMatrix ) );\n\n\t\t\t\t}\n\n\t\t\t\tscope.dispatchEvent( { type: 'drag', object: _selected } );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_intersections.length = 0;\n\n\t\t\t_raycaster.setFromCamera( _mouse, _camera );\n\t\t\t_raycaster.intersectObjects( _objects, true, _intersections );\n\n\t\t\tif ( _intersections.length > 0 ) {\n\n\t\t\t\tvar object = _intersections[ 0 ].object;\n\n\t\t\t\t_plane.setFromNormalAndCoplanarPoint( _camera.getWorldDirection( _plane.normal ), _worldPosition.setFromMatrixPosition( object.matrixWorld ) );\n\n\t\t\t\tif ( _hovered !== object ) {\n\n\t\t\t\t\tscope.dispatchEvent( { type: 'hoveron', object: object } );\n\n\t\t\t\t\t_domElement.style.cursor = 'pointer';\n\t\t\t\t\t_hovered = object;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( _hovered !== null ) {\n\n\t\t\t\t\tscope.dispatchEvent( { type: 'hoveroff', object: _hovered } );\n\n\t\t\t\t\t_domElement.style.cursor = 'auto';\n\t\t\t\t\t_hovered = null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onDocumentMouseDown( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\t_intersections.length = 0;\n\n\t\t\t_raycaster.setFromCamera( _mouse, _camera );\n\t\t\t_raycaster.intersectObjects( _objects, true, _intersections );\n\n\t\t\tif ( _intersections.length > 0 ) {\n\n\t\t\t\t_selected = ( scope.transformGroup === true ) ? _objects[ 0 ] : _intersections[ 0 ].object;\n\n\t\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t\t_inverseMatrix.getInverse( _selected.parent.matrixWorld );\n\t\t\t\t\t_offset.copy( _intersection ).sub( _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\t_domElement.style.cursor = 'move';\n\n\t\t\t\tscope.dispatchEvent( { type: 'dragstart', object: _selected } );\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction onDocumentMouseCancel( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( _selected ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'dragend', object: _selected } );\n\n\t\t\t\t_selected = null;\n\n\t\t\t}\n\n\t\t\t_domElement.style.cursor = _hovered ? 'pointer' : 'auto';\n\n\t\t}\n\n\t\tfunction onDocumentTouchMove( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tevent = event.changedTouches[ 0 ];\n\n\t\t\tvar rect = _domElement.getBoundingClientRect();\n\n\t\t\t_mouse.x = ( ( event.clientX - rect.left ) / rect.width ) * 2 - 1;\n\t\t\t_mouse.y = - ( ( event.clientY - rect.top ) / rect.height ) * 2 + 1;\n\n\t\t\t_raycaster.setFromCamera( _mouse, _camera );\n\n\t\t\tif ( _selected && scope.enabled ) {\n\n\t\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t\t_selected.position.copy( _intersection.sub( _offset ).applyMatrix4( _inverseMatrix ) );\n\n\t\t\t\t}\n\n\t\t\t\tscope.dispatchEvent( { type: 'drag', object: _selected } );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onDocumentTouchStart( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tevent = event.changedTouches[ 0 ];\n\n\t\t\tvar rect = _domElement.getBoundingClientRect();\n\n\t\t\t_mouse.x = ( ( event.clientX - rect.left ) / rect.width ) * 2 - 1;\n\t\t\t_mouse.y = - ( ( event.clientY - rect.top ) / rect.height ) * 2 + 1;\n\n\t\t\t_intersections.length = 0;\n\n\t\t\t_raycaster.setFromCamera( _mouse, _camera );\n\t\t\t _raycaster.intersectObjects( _objects, true, _intersections );\n\n\t\t\tif ( _intersections.length > 0 ) {\n\n\t\t\t\t_selected = ( scope.transformGroup === true ) ? _objects[ 0 ] : _intersections[ 0 ].object;\n\n\t\t\t\t_plane.setFromNormalAndCoplanarPoint( _camera.getWorldDirection( _plane.normal ), _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\t\tif ( _raycaster.ray.intersectPlane( _plane, _intersection ) ) {\n\n\t\t\t\t\t_inverseMatrix.getInverse( _selected.parent.matrixWorld );\n\t\t\t\t\t_offset.copy( _intersection ).sub( _worldPosition.setFromMatrixPosition( _selected.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\t_domElement.style.cursor = 'move';\n\n\t\t\t\tscope.dispatchEvent( { type: 'dragstart', object: _selected } );\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction onDocumentTouchEnd( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( _selected ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'dragend', object: _selected } );\n\n\t\t\t\t_selected = null;\n\n\t\t\t}\n\n\t\t\t_domElement.style.cursor = 'auto';\n\n\t\t}\n\n\t\tactivate();\n\n\t\t// API\n\n\t\tthis.enabled = true;\n\t\tthis.transformGroup = false;\n\n\t\tthis.activate = activate;\n\t\tthis.deactivate = deactivate;\n\t\tthis.dispose = dispose;\n\t\tthis.getObjects = getObjects;\n\n\t};\n\n\tTHREE.DragControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tTHREE.DragControls.prototype.constructor = THREE.DragControls;\n\n\treturn THREE.DragControls;\n});\n"]}