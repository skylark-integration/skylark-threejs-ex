{"version":3,"sources":["controls/TransformControls.js"],"names":["define","THREE","TransformControls","camera","domElement","undefined","console","warn","document","Object3D","call","this","visible","_gizmo","TransformControlsGizmo","add","_plane","TransformControlsPlane","scope","defineProperty","changeEvent","type","mouseDownEvent","mouseUpEvent","mode","objectChangeEvent","ray","Raycaster","_tempVector","Vector3","_tempVector2","_tempQuaternion","Quaternion","_unit","X","Y","Z","pointStart","pointEnd","offset","rotationAxis","startNorm","endNorm","rotationAngle","cameraPosition","cameraQuaternion","cameraScale","parentPosition","parentQuaternion","parentQuaternionInv","parentScale","worldPositionStart","worldQuaternionStart","worldScaleStart","worldPosition","worldQuaternion","worldQuaternionInv","worldScale","eye","positionStart","quaternionStart","scaleStart","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","getPointer","event","pointerLockElement","x","y","button","pointer","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","onPointerHover","enabled","pointerHover","onPointerDown","addEventListener","onPointerMove","pointerDown","pointerMove","onPointerUp","removeEventListener","pointerUp","dispose","traverse","child","geometry","material","attach","object","detach","axis","updateMatrixWorld","parent","error","matrixWorld","decompose","copy","inverse","sub","normalize","prototype","dragging","setFromCamera","intersect","intersectObjects","picker","children","name","planeIntersect","space","snap","rotationSnap","rotation","Math","round","z","position","quaternion","scale","point","applyQuaternion","indexOf","divide","translationSnap","search","setFromMatrixPosition","d","length","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","setFromAxisAngle","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","update","assign","create","constructor","isTransformControls","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","transparent","side","DoubleSide","fog","gizmoLineMaterial","LineBasicMaterial","linewidth","matInvisible","clone","opacity","matHelper","matRed","color","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","CylinderBufferGeometry","scaleHandleGeometry","BoxBufferGeometry","lineGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","CircleGeometry","radius","arc","vertices","i","push","cos","PI","sin","gizmoTranslate","Mesh","Line","XYZ","OctahedronBufferGeometry","XY","PlaneBufferGeometry","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","TorusBufferGeometry","SphereBufferGeometry","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","tempVector","tempEuler","Euler","alignVector","zeroVector","lookAtMatrix","Matrix4","tempQuaternion","tempQuaternion2","identityQuaternion","unitX","unitY","unitZ","helper","handles","concat","handle","eyeDistance","multiplyScalar","abs","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_opacity","_color","lerp","Color","split","some","a","setFromEuler","isTransformControlsGizmo","wireframe","dirVector","tempMatrix","isTransformControlsPlane"],"mappings":"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","file":"../../controls/TransformControls.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author arodic / https://github.com/arodic\n\t */\n\n\tTHREE.TransformControls = function ( camera, domElement ) {\n\n\t\tif ( domElement === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tdomElement = document;\n\n\t\t}\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.visible = false;\n\t\tthis.domElement = domElement;\n\n\t\tvar _gizmo = new THREE.TransformControlsGizmo();\n\t\tthis.add( _gizmo );\n\n\t\tvar _plane = new THREE.TransformControlsPlane();\n\t\tthis.add( _plane );\n\n\t\tvar scope = this;\n\n\t\t// Define properties with getters/setter\n\t\t// Setting the defined property will automatically trigger change event\n\t\t// Defined properties are passed down to gizmo and plane\n\n\t\tdefineProperty( \"camera\", camera );\n\t\tdefineProperty( \"object\", undefined );\n\t\tdefineProperty( \"enabled\", true );\n\t\tdefineProperty( \"axis\", null );\n\t\tdefineProperty( \"mode\", \"translate\" );\n\t\tdefineProperty( \"translationSnap\", null );\n\t\tdefineProperty( \"rotationSnap\", null );\n\t\tdefineProperty( \"scaleSnap\", null );\n\t\tdefineProperty( \"space\", \"world\" );\n\t\tdefineProperty( \"size\", 1 );\n\t\tdefineProperty( \"dragging\", false );\n\t\tdefineProperty( \"showX\", true );\n\t\tdefineProperty( \"showY\", true );\n\t\tdefineProperty( \"showZ\", true );\n\n\t\tvar changeEvent = { type: \"change\" };\n\t\tvar mouseDownEvent = { type: \"mouseDown\" };\n\t\tvar mouseUpEvent = { type: \"mouseUp\", mode: scope.mode };\n\t\tvar objectChangeEvent = { type: \"objectChange\" };\n\n\t\t// Reusable utility variables\n\n\t\tvar ray = new THREE.Raycaster();\n\n\t\tvar _tempVector = new THREE.Vector3();\n\t\tvar _tempVector2 = new THREE.Vector3();\n\t\tvar _tempQuaternion = new THREE.Quaternion();\n\t\tvar _unit = {\n\t\t\tX: new THREE.Vector3( 1, 0, 0 ),\n\t\t\tY: new THREE.Vector3( 0, 1, 0 ),\n\t\t\tZ: new THREE.Vector3( 0, 0, 1 )\n\t\t};\n\n\t\tvar pointStart = new THREE.Vector3();\n\t\tvar pointEnd = new THREE.Vector3();\n\t\tvar offset = new THREE.Vector3();\n\t\tvar rotationAxis = new THREE.Vector3();\n\t\tvar startNorm = new THREE.Vector3();\n\t\tvar endNorm = new THREE.Vector3();\n\t\tvar rotationAngle = 0;\n\n\t\tvar cameraPosition = new THREE.Vector3();\n\t\tvar cameraQuaternion = new THREE.Quaternion();\n\t\tvar cameraScale = new THREE.Vector3();\n\n\t\tvar parentPosition = new THREE.Vector3();\n\t\tvar parentQuaternion = new THREE.Quaternion();\n\t\tvar parentQuaternionInv = new THREE.Quaternion();\n\t\tvar parentScale = new THREE.Vector3();\n\n\t\tvar worldPositionStart = new THREE.Vector3();\n\t\tvar worldQuaternionStart = new THREE.Quaternion();\n\t\tvar worldScaleStart = new THREE.Vector3();\n\n\t\tvar worldPosition = new THREE.Vector3();\n\t\tvar worldQuaternion = new THREE.Quaternion();\n\t\tvar worldQuaternionInv = new THREE.Quaternion();\n\t\tvar worldScale = new THREE.Vector3();\n\n\t\tvar eye = new THREE.Vector3();\n\n\t\tvar positionStart = new THREE.Vector3();\n\t\tvar quaternionStart = new THREE.Quaternion();\n\t\tvar scaleStart = new THREE.Vector3();\n\n\t\t// TODO: remove properties unused in plane and gizmo\n\n\t\tdefineProperty( \"worldPosition\", worldPosition );\n\t\tdefineProperty( \"worldPositionStart\", worldPositionStart );\n\t\tdefineProperty( \"worldQuaternion\", worldQuaternion );\n\t\tdefineProperty( \"worldQuaternionStart\", worldQuaternionStart );\n\t\tdefineProperty( \"cameraPosition\", cameraPosition );\n\t\tdefineProperty( \"cameraQuaternion\", cameraQuaternion );\n\t\tdefineProperty( \"pointStart\", pointStart );\n\t\tdefineProperty( \"pointEnd\", pointEnd );\n\t\tdefineProperty( \"rotationAxis\", rotationAxis );\n\t\tdefineProperty( \"rotationAngle\", rotationAngle );\n\t\tdefineProperty( \"eye\", eye );\n\n\t\t{\n\n\t\t\tdomElement.addEventListener( \"mousedown\", onPointerDown, false );\n\t\t\tdomElement.addEventListener( \"touchstart\", onPointerDown, false );\n\t\t\tdomElement.addEventListener( \"mousemove\", onPointerHover, false );\n\t\t\tdomElement.addEventListener( \"touchmove\", onPointerHover, false );\n\t\t\tdomElement.addEventListener( \"touchmove\", onPointerMove, false );\n\t\t\tdocument.addEventListener( \"mouseup\", onPointerUp, false );\n\t\t\tdomElement.addEventListener( \"touchend\", onPointerUp, false );\n\t\t\tdomElement.addEventListener( \"touchcancel\", onPointerUp, false );\n\t\t\tdomElement.addEventListener( \"touchleave\", onPointerUp, false );\n\n\t\t}\n\n\t\tthis.dispose = function () {\n\n\t\t\tdomElement.removeEventListener( \"mousedown\", onPointerDown );\n\t\t\tdomElement.removeEventListener( \"touchstart\", onPointerDown );\n\t\t\tdomElement.removeEventListener( \"mousemove\", onPointerHover );\n\t\t\tdocument.removeEventListener( \"mousemove\", onPointerMove );\n\t\t\tdomElement.removeEventListener( \"touchmove\", onPointerHover );\n\t\t\tdomElement.removeEventListener( \"touchmove\", onPointerMove );\n\t\t\tdocument.removeEventListener( \"mouseup\", onPointerUp );\n\t\t\tdomElement.removeEventListener( \"touchend\", onPointerUp );\n\t\t\tdomElement.removeEventListener( \"touchcancel\", onPointerUp );\n\t\t\tdomElement.removeEventListener( \"touchleave\", onPointerUp );\n\n\t\t\tthis.traverse( function ( child ) {\n\n\t\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Set current object\n\t\tthis.attach = function ( object ) {\n\n\t\t\tthis.object = object;\n\t\t\tthis.visible = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\t// Detatch from object\n\t\tthis.detach = function () {\n\n\t\t\tthis.object = undefined;\n\t\t\tthis.visible = false;\n\t\t\tthis.axis = null;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\t// Defined getter, setter and store for a property\n\t\tfunction defineProperty( propName, defaultValue ) {\n\n\t\t\tvar propValue = defaultValue;\n\n\t\t\tObject.defineProperty( scope, propName, {\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\t\tpropValue = value;\n\t\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: propName + \"-changed\", value: value } );\n\t\t\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tscope[ propName ] = defaultValue;\n\t\t\t_plane[ propName ] = defaultValue;\n\t\t\t_gizmo[ propName ] = defaultValue;\n\n\t\t}\n\n\t\t// updateMatrixWorld  updates key transformation variables\n\t\tthis.updateMatrixWorld = function () {\n\n\t\t\tif ( this.object !== undefined ) {\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.object.parent.matrixWorld.decompose( parentPosition, parentQuaternion, parentScale );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object.matrixWorld.decompose( worldPosition, worldQuaternion, worldScale );\n\n\t\t\t\tparentQuaternionInv.copy( parentQuaternion ).inverse();\n\t\t\t\tworldQuaternionInv.copy( worldQuaternion ).inverse();\n\n\t\t\t}\n\n\t\t\tthis.camera.updateMatrixWorld();\n\t\t\tthis.camera.matrixWorld.decompose( cameraPosition, cameraQuaternion, cameraScale );\n\n\t\t\teye.copy( cameraPosition ).sub( worldPosition ).normalize();\n\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this );\n\n\t\t};\n\n\t\tthis.pointerHover = function ( pointer ) {\n\n\t\t\tif ( this.object === undefined || this.dragging === true || ( pointer.button !== undefined && pointer.button !== 0 ) ) return;\n\n\t\t\tray.setFromCamera( pointer, this.camera );\n\n\t\t\tvar intersect = ray.intersectObjects( _gizmo.picker[ this.mode ].children, true )[ 0 ] || false;\n\n\t\t\tif ( intersect ) {\n\n\t\t\t\tthis.axis = intersect.object.name;\n\n\t\t\t} else {\n\n\t\t\t\tthis.axis = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.pointerDown = function ( pointer ) {\n\n\t\t\tif ( this.object === undefined || this.dragging === true || ( pointer.button !== undefined && pointer.button !== 0 ) ) return;\n\n\t\t\tif ( ( pointer.button === 0 || pointer.button === undefined ) && this.axis !== null ) {\n\n\t\t\t\tray.setFromCamera( pointer, this.camera );\n\n\t\t\t\tvar planeIntersect = ray.intersectObjects( [ _plane ], true )[ 0 ] || false;\n\n\t\t\t\tif ( planeIntersect ) {\n\n\t\t\t\t\tvar space = this.space;\n\n\t\t\t\t\tif ( this.mode === 'scale' ) {\n\n\t\t\t\t\t\tspace = 'local';\n\n\t\t\t\t\t} else if ( this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ' ) {\n\n\t\t\t\t\t\tspace = 'world';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( space === 'local' && this.mode === 'rotate' ) {\n\n\t\t\t\t\t\tvar snap = this.rotationSnap;\n\n\t\t\t\t\t\tif ( this.axis === 'X' && snap ) this.object.rotation.x = Math.round( this.object.rotation.x / snap ) * snap;\n\t\t\t\t\t\tif ( this.axis === 'Y' && snap ) this.object.rotation.y = Math.round( this.object.rotation.y / snap ) * snap;\n\t\t\t\t\t\tif ( this.axis === 'Z' && snap ) this.object.rotation.z = Math.round( this.object.rotation.z / snap ) * snap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\t\tpositionStart.copy( this.object.position );\n\t\t\t\t\tquaternionStart.copy( this.object.quaternion );\n\t\t\t\t\tscaleStart.copy( this.object.scale );\n\n\t\t\t\t\tthis.object.matrixWorld.decompose( worldPositionStart, worldQuaternionStart, worldScaleStart );\n\n\t\t\t\t\tpointStart.copy( planeIntersect.point ).sub( worldPositionStart );\n\n\t\t\t\t}\n\n\t\t\t\tthis.dragging = true;\n\t\t\t\tmouseDownEvent.mode = this.mode;\n\t\t\t\tthis.dispatchEvent( mouseDownEvent );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.pointerMove = function ( pointer ) {\n\n\t\t\tvar axis = this.axis;\n\t\t\tvar mode = this.mode;\n\t\t\tvar object = this.object;\n\t\t\tvar space = this.space;\n\n\t\t\tif ( mode === 'scale' ) {\n\n\t\t\t\tspace = 'local';\n\n\t\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\t\tspace = 'world';\n\n\t\t\t}\n\n\t\t\tif ( object === undefined || axis === null || this.dragging === false || ( pointer.button !== undefined && pointer.button !== 0 ) ) return;\n\n\t\t\tray.setFromCamera( pointer, this.camera );\n\n\t\t\tvar planeIntersect = ray.intersectObjects( [ _plane ], true )[ 0 ] || false;\n\n\t\t\tif ( planeIntersect === false ) return;\n\n\t\t\tpointEnd.copy( planeIntersect.point ).sub( worldPositionStart );\n\n\t\t\tif ( mode === 'translate' ) {\n\n\t\t\t\t// Apply translate\n\n\t\t\t\toffset.copy( pointEnd ).sub( pointStart );\n\n\t\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\t\toffset.applyQuaternion( worldQuaternionInv );\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) offset.x = 0;\n\t\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) offset.y = 0;\n\t\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) offset.z = 0;\n\n\t\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\t\toffset.applyQuaternion( quaternionStart ).divide( parentScale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toffset.applyQuaternion( parentQuaternionInv ).divide( parentScale );\n\n\t\t\t\t}\n\n\t\t\t\tobject.position.copy( offset ).add( positionStart );\n\n\t\t\t\t// Apply translation snap\n\n\t\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( quaternionStart ).inverse() );\n\n\t\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobject.position.applyQuaternion( quaternionStart );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( mode === 'scale' ) {\n\n\t\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\t\tvar d = pointEnd.length() / pointStart.length();\n\n\t\t\t\t\tif ( pointEnd.dot( pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_tempVector.copy( pointStart );\n\t\t\t\t\t_tempVector2.copy( pointEnd );\n\n\t\t\t\t\t_tempVector.applyQuaternion( worldQuaternionInv );\n\t\t\t\t\t_tempVector2.applyQuaternion( worldQuaternionInv );\n\n\t\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Apply scale\n\n\t\t\t\tobject.scale.copy( scaleStart ).multiply( _tempVector2 );\n\n\t\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\t\toffset.copy( pointEnd ).sub( pointStart );\n\n\t\t\t\tvar ROTATION_SPEED = 20 / worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\t\tif ( axis === 'E' ) {\n\n\t\t\t\t\trotationAxis.copy( eye );\n\t\t\t\t\trotationAngle = pointEnd.angleTo( pointStart );\n\n\t\t\t\t\tstartNorm.copy( pointStart ).normalize();\n\t\t\t\t\tendNorm.copy( pointEnd ).normalize();\n\n\t\t\t\t\trotationAngle *= ( endNorm.cross( startNorm ).dot( eye ) < 0 ? 1 : - 1 );\n\n\t\t\t\t} else if ( axis === 'XYZE' ) {\n\n\t\t\t\t\trotationAxis.copy( offset ).cross( eye ).normalize();\n\t\t\t\t\trotationAngle = offset.dot( _tempVector.copy( rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\t\trotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t\t_tempVector.applyQuaternion( worldQuaternion );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trotationAngle = offset.dot( _tempVector.cross( eye ).normalize() ) * ROTATION_SPEED;\n\n\t\t\t\t}\n\n\t\t\t\t// Apply rotation snap\n\n\t\t\t\tif ( this.rotationSnap ) rotationAngle = Math.round( rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\t\tthis.rotationAngle = rotationAngle;\n\n\t\t\t\t// Apply rotate\n\t\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\t\tobject.quaternion.copy( quaternionStart );\n\t\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) ).normalize();\n\n\t\t\t\t} else {\n\n\t\t\t\t\trotationAxis.applyQuaternion( parentQuaternionInv );\n\t\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) );\n\t\t\t\t\tobject.quaternion.multiply( quaternionStart ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.dispatchEvent( changeEvent );\n\t\t\tthis.dispatchEvent( objectChangeEvent );\n\n\t\t};\n\n\t\tthis.pointerUp = function ( pointer ) {\n\n\t\t\tif ( pointer.button !== undefined && pointer.button !== 0 ) return;\n\n\t\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\t\tmouseUpEvent.mode = this.mode;\n\t\t\t\tthis.dispatchEvent( mouseUpEvent );\n\n\t\t\t}\n\n\t\t\tthis.dragging = false;\n\n\t\t\tif ( pointer.button === undefined ) this.axis = null;\n\n\t\t};\n\n\t\t// normalize mouse / touch pointer and remap {x,y} to view space.\n\n\t\tfunction getPointer( event ) {\n\n\t\t\tif ( document.pointerLockElement ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\tbutton: event.button\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n\t\t\t\tvar rect = domElement.getBoundingClientRect();\n\n\t\t\t\treturn {\n\t\t\t\t\tx: ( pointer.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\t\t\ty: - ( pointer.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\t\t\tbutton: event.button\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// mouse / touch event handlers\n\n\t\tfunction onPointerHover( event ) {\n\n\t\t\tif ( ! scope.enabled ) return;\n\n\t\t\tscope.pointerHover( getPointer( event ) );\n\n\t\t}\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( ! scope.enabled ) return;\n\n\t\t\tdocument.addEventListener( \"mousemove\", onPointerMove, false );\n\n\t\t\tscope.pointerHover( getPointer( event ) );\n\t\t\tscope.pointerDown( getPointer( event ) );\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( ! scope.enabled ) return;\n\n\t\t\tscope.pointerMove( getPointer( event ) );\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tif ( ! scope.enabled ) return;\n\n\t\t\tdocument.removeEventListener( \"mousemove\", onPointerMove, false );\n\n\t\t\tscope.pointerUp( getPointer( event ) );\n\n\t\t}\n\n\t\t// TODO: deprecate\n\n\t\tthis.getMode = function () {\n\n\t\t\treturn scope.mode;\n\n\t\t};\n\n\t\tthis.setMode = function ( mode ) {\n\n\t\t\tscope.mode = mode;\n\n\t\t};\n\n\t\tthis.setTranslationSnap = function ( translationSnap ) {\n\n\t\t\tscope.translationSnap = translationSnap;\n\n\t\t};\n\n\t\tthis.setRotationSnap = function ( rotationSnap ) {\n\n\t\t\tscope.rotationSnap = rotationSnap;\n\n\t\t};\n\n\t\tthis.setScaleSnap = function ( scaleSnap ) {\n\n\t\t\tscope.scaleSnap = scaleSnap;\n\n\t\t};\n\n\t\tthis.setSize = function ( size ) {\n\n\t\t\tscope.size = size;\n\n\t\t};\n\n\t\tthis.setSpace = function ( space ) {\n\n\t\t\tscope.space = space;\n\n\t\t};\n\n\t\tthis.update = function () {\n\n\t\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n\t\t};\n\n\t};\n\n\tTHREE.TransformControls.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.TransformControls,\n\n\t\tisTransformControls: true\n\n\t} );\n\n\n\tTHREE.TransformControlsGizmo = function () {\n\n\t\t'use strict';\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'TransformControlsGizmo';\n\n\t\t// shared materials\n\n\t\tvar gizmoMaterial = new THREE.MeshBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\ttransparent: true,\n\t\t\tside: THREE.DoubleSide,\n\t\t\tfog: false\n\t\t} );\n\n\t\tvar gizmoLineMaterial = new THREE.LineBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\ttransparent: true,\n\t\t\tlinewidth: 1,\n\t\t\tfog: false\n\t\t} );\n\n\t\t// Make unique material for each axis/color\n\n\t\tvar matInvisible = gizmoMaterial.clone();\n\t\tmatInvisible.opacity = 0.15;\n\n\t\tvar matHelper = gizmoMaterial.clone();\n\t\tmatHelper.opacity = 0.33;\n\n\t\tvar matRed = gizmoMaterial.clone();\n\t\tmatRed.color.set( 0xff0000 );\n\n\t\tvar matGreen = gizmoMaterial.clone();\n\t\tmatGreen.color.set( 0x00ff00 );\n\n\t\tvar matBlue = gizmoMaterial.clone();\n\t\tmatBlue.color.set( 0x0000ff );\n\n\t\tvar matWhiteTransparent = gizmoMaterial.clone();\n\t\tmatWhiteTransparent.opacity = 0.25;\n\n\t\tvar matYellowTransparent = matWhiteTransparent.clone();\n\t\tmatYellowTransparent.color.set( 0xffff00 );\n\n\t\tvar matCyanTransparent = matWhiteTransparent.clone();\n\t\tmatCyanTransparent.color.set( 0x00ffff );\n\n\t\tvar matMagentaTransparent = matWhiteTransparent.clone();\n\t\tmatMagentaTransparent.color.set( 0xff00ff );\n\n\t\tvar matYellow = gizmoMaterial.clone();\n\t\tmatYellow.color.set( 0xffff00 );\n\n\t\tvar matLineRed = gizmoLineMaterial.clone();\n\t\tmatLineRed.color.set( 0xff0000 );\n\n\t\tvar matLineGreen = gizmoLineMaterial.clone();\n\t\tmatLineGreen.color.set( 0x00ff00 );\n\n\t\tvar matLineBlue = gizmoLineMaterial.clone();\n\t\tmatLineBlue.color.set( 0x0000ff );\n\n\t\tvar matLineCyan = gizmoLineMaterial.clone();\n\t\tmatLineCyan.color.set( 0x00ffff );\n\n\t\tvar matLineMagenta = gizmoLineMaterial.clone();\n\t\tmatLineMagenta.color.set( 0xff00ff );\n\n\t\tvar matLineYellow = gizmoLineMaterial.clone();\n\t\tmatLineYellow.color.set( 0xffff00 );\n\n\t\tvar matLineGray = gizmoLineMaterial.clone();\n\t\tmatLineGray.color.set( 0x787878 );\n\n\t\tvar matLineYellowTransparent = matLineYellow.clone();\n\t\tmatLineYellowTransparent.opacity = 0.25;\n\n\t\t// reusable geometry\n\n\t\tvar arrowGeometry = new THREE.CylinderBufferGeometry( 0, 0.05, 0.2, 12, 1, false );\n\n\t\tvar scaleHandleGeometry = new THREE.BoxBufferGeometry( 0.125, 0.125, 0.125 );\n\n\t\tvar lineGeometry = new THREE.BufferGeometry( );\n\t\tlineGeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\t\tvar CircleGeometry = function ( radius, arc ) {\n\n\t\t\tvar geometry = new THREE.BufferGeometry( );\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i <= 64 * arc; ++ i ) {\n\n\t\t\t\tvertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t};\n\n\t\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\t\tvar TranslateHelperGeometry = function () {\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\tgeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t};\n\n\t\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\t\tvar gizmoTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, - Math.PI / 2 ], null, 'fwd' ],\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, Math.PI / 2 ], null, 'bwd' ],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineRed ) ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], null, null, 'fwd' ],\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], [ Math.PI, 0, 0 ], null, 'bwd' ],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ Math.PI / 2, 0, 0 ], null, 'fwd' ],\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ - Math.PI / 2, 0, 0 ], null, 'bwd' ],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.OctahedronBufferGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ], [ 0, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.295, 0.295 ), matYellowTransparent.clone() ), [ 0.15, 0.15, 0 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineYellow ), [ 0.18, 0.3, 0 ], null, [ 0.125, 1, 1 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineYellow ), [ 0.3, 0.18, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.295, 0.295 ), matCyanTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineCyan ), [ 0, 0.18, 0.3 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineCyan ), [ 0, 0.3, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.295, 0.295 ), matMagentaTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineMagenta ), [ 0.18, 0, 0.3 ], null, [ 0.125, 1, 1 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineMagenta ), [ 0.3, 0, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t\t]\n\t\t};\n\n\t\tvar pickerTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0.6, 0 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.OctahedronBufferGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0.2, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tvar helperTranslate = {\n\t\t\tSTART: [\n\t\t\t\t[ new THREE.Mesh( new THREE.OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tEND: [\n\t\t\t\t[ new THREE.Mesh( new THREE.OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tDELTA: [\n\t\t\t\t[ new THREE.Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new THREE.Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new THREE.Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tvar gizmoRotate = {\n\t\t\tX: [\n\t\t\t\t[ new THREE.Line( CircleGeometry( 1, 0.5 ), matLineRed ) ],\n\t\t\t\t[ new THREE.Mesh( new THREE.OctahedronBufferGeometry( 0.04, 0 ), matRed ), [ 0, 0, 0.99 ], null, [ 1, 3, 1 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new THREE.Line( CircleGeometry( 1, 0.5 ), matLineGreen ), null, [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new THREE.Mesh( new THREE.OctahedronBufferGeometry( 0.04, 0 ), matGreen ), [ 0, 0, 0.99 ], null, [ 3, 1, 1 ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Line( CircleGeometry( 1, 0.5 ), matLineBlue ), null, [ 0, Math.PI / 2, 0 ]],\n\t\t\t\t[ new THREE.Mesh( new THREE.OctahedronBufferGeometry( 0.04, 0 ), matBlue ), [ 0.99, 0, 0 ], null, [ 1, 3, 1 ]],\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new THREE.Line( CircleGeometry( 1.25, 1 ), matLineYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]],\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 1.17, 0, 0 ], [ 0, 0, - Math.PI / 2 ], [ 1, 1, 0.001 ]],\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ - 1.17, 0, 0 ], [ 0, 0, Math.PI / 2 ], [ 1, 1, 0.001 ]],\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, - 1.17, 0 ], [ Math.PI, 0, 0 ], [ 1, 1, 0.001 ]],\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, 1.17, 0 ], [ 0, 0, 0 ], [ 1, 1, 0.001 ]],\n\t\t\t],\n\t\t\tXYZE: [\n\t\t\t\t[ new THREE.Line( CircleGeometry( 1, 1 ), matLineGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tvar helperRotate = {\n\t\t\tAXIS: [\n\t\t\t\t[ new THREE.Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tvar pickerRotate = {\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1.25, 0.1, 2, 24 ), matInvisible ) ]\n\t\t\t],\n\t\t\tXYZE: [\n\t\t\t\t[ new THREE.Mesh( new THREE.SphereBufferGeometry( 0.7, 10, 8 ), matInvisible ) ]\n\t\t\t]\n\t\t};\n\n\t\tvar gizmoScale = {\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( scaleHandleGeometry, matRed ), [ 0.8, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineRed ), null, null, [ 0.8, 1, 1 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.8, 0 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ], [ 0.8, 1, 1 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.8 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ], [ 0.8, 1, 1 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new THREE.Mesh( scaleHandleGeometry, matYellowTransparent ), [ 0.85, 0.85, 0 ], null, [ 2, 2, 0.2 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineYellow ), [ 0.855, 0.98, 0 ], null, [ 0.125, 1, 1 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineYellow ), [ 0.98, 0.855, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new THREE.Mesh( scaleHandleGeometry, matCyanTransparent ), [ 0, 0.85, 0.85 ], null, [ 0.2, 2, 2 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineCyan ), [ 0, 0.855, 0.98 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineCyan ), [ 0, 0.98, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new THREE.Mesh( scaleHandleGeometry, matMagentaTransparent ), [ 0.85, 0, 0.85 ], null, [ 2, 0.2, 2 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineMagenta ), [ 0.855, 0, 0.98 ], null, [ 0.125, 1, 1 ]],\n\t\t\t\t[ new THREE.Line( lineGeometry, matLineMagenta ), [ 0.98, 0, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t\t],\n\t\t\tXYZX: [\n\t\t\t\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 1.1, 0, 0 ]],\n\t\t\t],\n\t\t\tXYZY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 1.1, 0 ]],\n\t\t\t],\n\t\t\tXYZZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 0, 1.1 ]],\n\t\t\t]\n\t\t};\n\n\t\tvar pickerScale = {\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0.5, 0 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new THREE.Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0.85, 0 ], null, [ 3, 3, 0.2 ]],\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new THREE.Mesh( scaleHandleGeometry, matInvisible ), [ 0, 0.85, 0.85 ], null, [ 0.2, 3, 3 ]],\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new THREE.Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0, 0.85 ], null, [ 3, 0.2, 3 ]],\n\t\t\t],\n\t\t\tXYZX: [\n\t\t\t\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 1.1, 0, 0 ]],\n\t\t\t],\n\t\t\tXYZY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 1.1, 0 ]],\n\t\t\t],\n\t\t\tXYZZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 1.1 ]],\n\t\t\t]\n\t\t};\n\n\t\tvar helperScale = {\n\t\t\tX: [\n\t\t\t\t[ new THREE.Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new THREE.Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\t\tvar setupGizmo = function ( gizmoMap ) {\n\n\t\t\tvar gizmo = new THREE.Object3D();\n\n\t\t\tfor ( var name in gizmoMap ) {\n\n\t\t\t\tfor ( var i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\t\tvar object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\t\tvar position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\t\tvar rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\t\tvar scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\t\tvar tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\t\tobject.name = name;\n\t\t\t\t\tobject.tag = tag;\n\n\t\t\t\t\tif ( position ) {\n\n\t\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( scale ) {\n\n\t\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tvar tempGeometry = object.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\t\tgizmo.add( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn gizmo;\n\n\t\t};\n\n\t\t// Reusable utility variables\n\n\t\tvar tempVector = new THREE.Vector3( 0, 0, 0 );\n\t\tvar tempEuler = new THREE.Euler();\n\t\tvar alignVector = new THREE.Vector3( 0, 1, 0 );\n\t\tvar zeroVector = new THREE.Vector3( 0, 0, 0 );\n\t\tvar lookAtMatrix = new THREE.Matrix4();\n\t\tvar tempQuaternion = new THREE.Quaternion();\n\t\tvar tempQuaternion2 = new THREE.Quaternion();\n\t\tvar identityQuaternion = new THREE.Quaternion();\n\n\t\tvar unitX = new THREE.Vector3( 1, 0, 0 );\n\t\tvar unitY = new THREE.Vector3( 0, 1, 0 );\n\t\tvar unitZ = new THREE.Vector3( 0, 0, 1 );\n\n\t\t// Gizmo creation\n\n\t\tthis.gizmo = {};\n\t\tthis.picker = {};\n\t\tthis.helper = {};\n\n\t\tthis.add( this.gizmo[ \"translate\" ] = setupGizmo( gizmoTranslate ) );\n\t\tthis.add( this.gizmo[ \"rotate\" ] = setupGizmo( gizmoRotate ) );\n\t\tthis.add( this.gizmo[ \"scale\" ] = setupGizmo( gizmoScale ) );\n\t\tthis.add( this.picker[ \"translate\" ] = setupGizmo( pickerTranslate ) );\n\t\tthis.add( this.picker[ \"rotate\" ] = setupGizmo( pickerRotate ) );\n\t\tthis.add( this.picker[ \"scale\" ] = setupGizmo( pickerScale ) );\n\t\tthis.add( this.helper[ \"translate\" ] = setupGizmo( helperTranslate ) );\n\t\tthis.add( this.helper[ \"rotate\" ] = setupGizmo( helperRotate ) );\n\t\tthis.add( this.helper[ \"scale\" ] = setupGizmo( helperScale ) );\n\n\t\t// Pickers should be hidden always\n\n\t\tthis.picker[ \"translate\" ].visible = false;\n\t\tthis.picker[ \"rotate\" ].visible = false;\n\t\tthis.picker[ \"scale\" ].visible = false;\n\n\t\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\t\tthis.updateMatrixWorld = function () {\n\n\t\t\tvar space = this.space;\n\n\t\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\t\tvar quaternion = space === \"local\" ? this.worldQuaternion : identityQuaternion;\n\n\t\t\t// Show only gizmos for current transform mode\n\n\t\t\tthis.gizmo[ \"translate\" ].visible = this.mode === \"translate\";\n\t\t\tthis.gizmo[ \"rotate\" ].visible = this.mode === \"rotate\";\n\t\t\tthis.gizmo[ \"scale\" ].visible = this.mode === \"scale\";\n\n\t\t\tthis.helper[ \"translate\" ].visible = this.mode === \"translate\";\n\t\t\tthis.helper[ \"rotate\" ].visible = this.mode === \"rotate\";\n\t\t\tthis.helper[ \"scale\" ].visible = this.mode === \"scale\";\n\n\n\t\t\tvar handles = [];\n\t\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\t\tfor ( var i = 0; i < handles.length; i ++ ) {\n\n\t\t\t\tvar handle = handles[ i ];\n\n\t\t\t\t// hide aligned to camera\n\n\t\t\t\thandle.visible = true;\n\t\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\tvar eyeDistance = this.worldPosition.distanceTo( this.cameraPosition );\n\t\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( eyeDistance * this.size / 7 );\n\n\t\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\t\talignVector.copy( this.rotationAxis );\n\t\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( zeroVector, alignVector, unitY ) );\n\t\t\t\t\t\t\thandle.quaternion.multiply( tempQuaternion );\n\t\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\t\ttempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\t\ttempVector.applyQuaternion( this.worldQuaternionStart.clone().inverse() );\n\t\t\t\t\t\thandle.scale.copy( tempVector );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\t\tvar AXIS_HIDE_TRESHOLD = 0.99;\n\t\t\t\t\tvar PLANE_HIDE_TRESHOLD = 0.2;\n\t\t\t\t\tvar AXIS_FLIP_TRESHOLD = 0.0;\n\n\n\t\t\t\t\tif ( handle.name === 'X' || handle.name === 'XYZX' ) {\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( handle.name === 'Y' || handle.name === 'XYZY' ) {\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( handle.name === 'Z' || handle.name === 'XYZZ' ) {\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Flip translate and scale axis ocluded behind another axis\n\n\t\t\t\t\tif ( handle.name.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tif ( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\thandle.scale.x *= - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( handle.name.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tif ( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\thandle.scale.y *= - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( handle.name.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tif ( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\thandle.scale.z *= - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\t\ttempQuaternion2.copy( quaternion );\n\t\t\t\t\talignVector.copy( this.eye ).applyQuaternion( tempQuaternion.copy( quaternion ).inverse() );\n\n\t\t\t\t\tif ( handle.name.search( \"E\" ) !== - 1 ) {\n\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( this.eye, zeroVector, unitY ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitX, Math.atan2( - alignVector.y, alignVector.z ) );\n\t\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitY, Math.atan2( alignVector.x, alignVector.z ) );\n\t\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitZ, Math.atan2( alignVector.y, alignVector.x ) );\n\t\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Hide disabled axes\n\t\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"X\" ) === - 1 || this.showX );\n\t\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Y\" ) === - 1 || this.showY );\n\t\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Z\" ) === - 1 || this.showZ );\n\t\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"E\" ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t\t// highlight selected axis\n\n\t\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\t\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\n\t\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t\thandle.material.opacity *= 0.5;\n\t\t\t\t\thandle.material.color.lerp( new THREE.Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t} else if ( this.axis ) {\n\n\t\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\t\thandle.material.opacity = 1.0;\n\t\t\t\t\t\thandle.material.color.lerp( new THREE.Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t\t} ) ) {\n\n\t\t\t\t\t\thandle.material.opacity = 1.0;\n\t\t\t\t\t\thandle.material.color.lerp( new THREE.Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.material.opacity *= 0.25;\n\t\t\t\t\t\thandle.material.color.lerp( new THREE.Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this );\n\n\t\t};\n\n\t};\n\n\tTHREE.TransformControlsGizmo.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.TransformControlsGizmo,\n\n\t\tisTransformControlsGizmo: true\n\n\t} );\n\n\n\tTHREE.TransformControlsPlane = function () {\n\n\t\t'use strict';\n\n\t\tTHREE.Mesh.call( this,\n\t\t\tnew THREE.PlaneBufferGeometry( 100000, 100000, 2, 2 ),\n\t\t\tnew THREE.MeshBasicMaterial( { visible: false, wireframe: true, side: THREE.DoubleSide, transparent: true, opacity: 0.1 } )\n\t\t);\n\n\t\tthis.type = 'TransformControlsPlane';\n\n\t\tvar unitX = new THREE.Vector3( 1, 0, 0 );\n\t\tvar unitY = new THREE.Vector3( 0, 1, 0 );\n\t\tvar unitZ = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar tempVector = new THREE.Vector3();\n\t\tvar dirVector = new THREE.Vector3();\n\t\tvar alignVector = new THREE.Vector3();\n\t\tvar tempMatrix = new THREE.Matrix4();\n\t\tvar identityQuaternion = new THREE.Quaternion();\n\n\t\tthis.updateMatrixWorld = function () {\n\n\t\t\tvar space = this.space;\n\n\t\t\tthis.position.copy( this.worldPosition );\n\n\t\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\t\tunitX.set( 1, 0, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\t\t\tunitY.set( 0, 1, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\t\t\tunitZ.set( 0, 0, 1 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\n\t\t\t// Align the plane for current transform mode, axis and space.\n\n\t\t\talignVector.copy( unitY );\n\n\t\t\tswitch ( this.mode ) {\n\n\t\t\t\tcase 'translate':\n\t\t\t\tcase 'scale':\n\t\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\t\tcase 'X':\n\t\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitX );\n\t\t\t\t\t\t\tdirVector.copy( unitX ).cross( alignVector );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitY );\n\t\t\t\t\t\t\tdirVector.copy( unitY ).cross( alignVector );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitZ );\n\t\t\t\t\t\t\tdirVector.copy( unitZ ).cross( alignVector );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\t\tdirVector.copy( unitZ );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\t\tdirVector.copy( unitX );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\t\talignVector.copy( unitZ );\n\t\t\t\t\t\t\tdirVector.copy( unitY );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\t\tcase 'E':\n\t\t\t\t\t\t\tdirVector.set( 0, 0, 0 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rotate':\n\t\t\t\tdefault:\n\t\t\t\t\t// special case for rotate\n\t\t\t\t\tdirVector.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( dirVector.length() === 0 ) {\n\n\t\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t\t} else {\n\n\t\t\t\ttempMatrix.lookAt( tempVector.set( 0, 0, 0 ), dirVector, alignVector );\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( tempMatrix );\n\n\t\t\t}\n\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this );\n\n\t\t};\n\n\t};\n\n\tTHREE.TransformControlsPlane.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\t\tconstructor: THREE.TransformControlsPlane,\n\n\t\tisTransformControlsPlane: true\n\n\t} );\n\treturn THREE.TransformControls;\n});\n"]}