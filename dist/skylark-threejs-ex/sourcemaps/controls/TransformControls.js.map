{"version":3,"sources":["controls/TransformControls.js"],"names":["define","THREE","TransformControls","camera","domElement","undefined","console","warn","document","Object3D","call","this","visible","_gizmo","TransformControlsGizmo","add","_plane","TransformControlsPlane","scope","defineProperty","changeEvent","type","mouseDownEvent","mouseUpEvent","mode","objectChangeEvent","ray","Raycaster","_tempVector","Vector3","_tempVector2","_tempQuaternion","Quaternion","_unit","X","Y","Z","pointStart","pointEnd","offset","rotationAxis","startNorm","endNorm","rotationAngle","cameraPosition","cameraQuaternion","cameraScale","parentPosition","parentQuaternion","parentQuaternionInv","parentScale","worldPositionStart","worldQuaternionStart","worldScaleStart","worldPosition","worldQuaternion","worldQuaternionInv","worldScale","eye","positionStart","quaternionStart","scaleStart","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","getPointer","event","pointerLockElement","x","y","button","pointer","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","onPointerHover","enabled","pointerHover","onPointerDown","addEventListener","onPointerMove","pointerDown","pointerMove","onPointerUp","removeEventListener","pointerUp","dispose","traverse","child","geometry","material","attach","object","detach","axis","updateMatrixWorld","parent","error","matrixWorld","decompose","copy","inverse","sub","normalize","prototype","dragging","setFromCamera","intersect","intersectObjects","picker","children","name","planeIntersect","space","snap","rotationSnap","rotation","Math","round","z","position","quaternion","scale","point","applyQuaternion","indexOf","divide","translationSnap","search","setFromMatrixPosition","d","length","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","setFromAxisAngle","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","update","assign","create","constructor","isTransformControls"],"mappings":"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","file":"../../controls/TransformControls.js","sourcesContent":["define([\n    \"skylark-threejs\"\n], function (THREE) {\n    'use strict';\n    var TransformControls = function (camera, domElement) {\n        if (domElement === undefined) {\n            console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n            domElement = document;\n        }\n        THREE.Object3D.call(this);\n        this.visible = false;\n        this.domElement = domElement;\n        var _gizmo = new TransformControlsGizmo();\n        this.add(_gizmo);\n        var _plane = new TransformControlsPlane();\n        this.add(_plane);\n        var scope = this;\n        defineProperty('camera', camera);\n        defineProperty('object', undefined);\n        defineProperty('enabled', true);\n        defineProperty('axis', null);\n        defineProperty('mode', 'translate');\n        defineProperty('translationSnap', null);\n        defineProperty('rotationSnap', null);\n        defineProperty('scaleSnap', null);\n        defineProperty('space', 'world');\n        defineProperty('size', 1);\n        defineProperty('dragging', false);\n        defineProperty('showX', true);\n        defineProperty('showY', true);\n        defineProperty('showZ', true);\n        var changeEvent = { type: 'change' };\n        var mouseDownEvent = { type: 'mouseDown' };\n        var mouseUpEvent = {\n            type: 'mouseUp',\n            mode: scope.mode\n        };\n        var objectChangeEvent = { type: 'objectChange' };\n        var ray = new THREE.Raycaster();\n        var _tempVector = new THREE.Vector3();\n        var _tempVector2 = new THREE.Vector3();\n        var _tempQuaternion = new THREE.Quaternion();\n        var _unit = {\n            X: new THREE.Vector3(1, 0, 0),\n            Y: new THREE.Vector3(0, 1, 0),\n            Z: new THREE.Vector3(0, 0, 1)\n        };\n        var pointStart = new THREE.Vector3();\n        var pointEnd = new THREE.Vector3();\n        var offset = new THREE.Vector3();\n        var rotationAxis = new THREE.Vector3();\n        var startNorm = new THREE.Vector3();\n        var endNorm = new THREE.Vector3();\n        var rotationAngle = 0;\n        var cameraPosition = new THREE.Vector3();\n        var cameraQuaternion = new THREE.Quaternion();\n        var cameraScale = new THREE.Vector3();\n        var parentPosition = new THREE.Vector3();\n        var parentQuaternion = new THREE.Quaternion();\n        var parentQuaternionInv = new THREE.Quaternion();\n        var parentScale = new THREE.Vector3();\n        var worldPositionStart = new THREE.Vector3();\n        var worldQuaternionStart = new THREE.Quaternion();\n        var worldScaleStart = new THREE.Vector3();\n        var worldPosition = new THREE.Vector3();\n        var worldQuaternion = new THREE.Quaternion();\n        var worldQuaternionInv = new THREE.Quaternion();\n        var worldScale = new THREE.Vector3();\n        var eye = new THREE.Vector3();\n        var positionStart = new THREE.Vector3();\n        var quaternionStart = new THREE.Quaternion();\n        var scaleStart = new THREE.Vector3();\n        defineProperty('worldPosition', worldPosition);\n        defineProperty('worldPositionStart', worldPositionStart);\n        defineProperty('worldQuaternion', worldQuaternion);\n        defineProperty('worldQuaternionStart', worldQuaternionStart);\n        defineProperty('cameraPosition', cameraPosition);\n        defineProperty('cameraQuaternion', cameraQuaternion);\n        defineProperty('pointStart', pointStart);\n        defineProperty('pointEnd', pointEnd);\n        defineProperty('rotationAxis', rotationAxis);\n        defineProperty('rotationAngle', rotationAngle);\n        defineProperty('eye', eye);\n        {\n            domElement.addEventListener('mousedown', onPointerDown, false);\n            domElement.addEventListener('touchstart', onPointerDown, false);\n            domElement.addEventListener('mousemove', onPointerHover, false);\n            domElement.addEventListener('touchmove', onPointerHover, false);\n            domElement.addEventListener('touchmove', onPointerMove, false);\n            document.addEventListener('mouseup', onPointerUp, false);\n            domElement.addEventListener('touchend', onPointerUp, false);\n            domElement.addEventListener('touchcancel', onPointerUp, false);\n            domElement.addEventListener('touchleave', onPointerUp, false);\n        }\n        this.dispose = function () {\n            domElement.removeEventListener('mousedown', onPointerDown);\n            domElement.removeEventListener('touchstart', onPointerDown);\n            domElement.removeEventListener('mousemove', onPointerHover);\n            document.removeEventListener('mousemove', onPointerMove);\n            domElement.removeEventListener('touchmove', onPointerHover);\n            domElement.removeEventListener('touchmove', onPointerMove);\n            document.removeEventListener('mouseup', onPointerUp);\n            domElement.removeEventListener('touchend', onPointerUp);\n            domElement.removeEventListener('touchcancel', onPointerUp);\n            domElement.removeEventListener('touchleave', onPointerUp);\n            this.traverse(function (child) {\n                if (child.geometry)\n                    child.geometry.dispose();\n                if (child.material)\n                    child.material.dispose();\n            });\n        };\n        this.attach = function (object) {\n            this.object = object;\n            this.visible = true;\n            return this;\n        };\n        this.detach = function () {\n            this.object = undefined;\n            this.visible = false;\n            this.axis = null;\n            return this;\n        };\n        function defineProperty(propName, defaultValue) {\n            var propValue = defaultValue;\n            Object.defineProperty(scope, propName, {\n                get: function () {\n                    return propValue !== undefined ? propValue : defaultValue;\n                },\n                set: function (value) {\n                    if (propValue !== value) {\n                        propValue = value;\n                        _plane[propName] = value;\n                        _gizmo[propName] = value;\n                        scope.dispatchEvent({\n                            type: propName + '-changed',\n                            value: value\n                        });\n                        scope.dispatchEvent(changeEvent);\n                    }\n                }\n            });\n            scope[propName] = defaultValue;\n            _plane[propName] = defaultValue;\n            _gizmo[propName] = defaultValue;\n        }\n        this.updateMatrixWorld = function () {\n            if (this.object !== undefined) {\n                this.object.updateMatrixWorld();\n                if (this.object.parent === null) {\n                    console.error('TransformControls: The attached 3D object must be THREE part of the scene graph.');\n                } else {\n                    this.object.parent.matrixWorld.decompose(parentPosition, parentQuaternion, parentScale);\n                }\n                this.object.matrixWorld.decompose(worldPosition, worldQuaternion, worldScale);\n                parentQuaternionInv.copy(parentQuaternion).inverse();\n                worldQuaternionInv.copy(worldQuaternion).inverse();\n            }\n            this.camera.updateMatrixWorld();\n            this.camera.matrixWorld.decompose(cameraPosition, cameraQuaternion, cameraScale);\n            eye.copy(cameraPosition).sub(worldPosition).normalize();\n            THREE.Object3D.prototype.updateMatrixWorld.call(this);\n        };\n        this.pointerHover = function (pointer) {\n            if (this.object === undefined || this.dragging === true || pointer.button !== undefined && pointer.button !== 0)\n                return;\n            ray.setFromCamera(pointer, this.camera);\n            var intersect = ray.intersectObjects(_gizmo.picker[this.mode].children, true)[0] || false;\n            if (intersect) {\n                this.axis = intersect.object.name;\n            } else {\n                this.axis = null;\n            }\n        };\n        this.pointerDown = function (pointer) {\n            if (this.object === undefined || this.dragging === true || pointer.button !== undefined && pointer.button !== 0)\n                return;\n            if ((pointer.button === 0 || pointer.button === undefined) && this.axis !== null) {\n                ray.setFromCamera(pointer, this.camera);\n                var planeIntersect = ray.intersectObjects([_plane], true)[0] || false;\n                if (planeIntersect) {\n                    var space = this.space;\n                    if (this.mode === 'scale') {\n                        space = 'local';\n                    } else if (this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ') {\n                        space = 'world';\n                    }\n                    if (space === 'local' && this.mode === 'rotate') {\n                        var snap = this.rotationSnap;\n                        if (this.axis === 'X' && snap)\n                            this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n                        if (this.axis === 'Y' && snap)\n                            this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n                        if (this.axis === 'Z' && snap)\n                            this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n                    }\n                    this.object.updateMatrixWorld();\n                    this.object.parent.updateMatrixWorld();\n                    positionStart.copy(this.object.position);\n                    quaternionStart.copy(this.object.quaternion);\n                    scaleStart.copy(this.object.scale);\n                    this.object.matrixWorld.decompose(worldPositionStart, worldQuaternionStart, worldScaleStart);\n                    pointStart.copy(planeIntersect.point).sub(worldPositionStart);\n                }\n                this.dragging = true;\n                mouseDownEvent.mode = this.mode;\n                this.dispatchEvent(mouseDownEvent);\n            }\n        };\n        this.pointerMove = function (pointer) {\n            var axis = this.axis;\n            var mode = this.mode;\n            var object = this.object;\n            var space = this.space;\n            if (mode === 'scale') {\n                space = 'local';\n            } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n                space = 'world';\n            }\n            if (object === undefined || axis === null || this.dragging === false || pointer.button !== undefined && pointer.button !== 0)\n                return;\n            ray.setFromCamera(pointer, this.camera);\n            var planeIntersect = ray.intersectObjects([_plane], true)[0] || false;\n            if (planeIntersect === false)\n                return;\n            pointEnd.copy(planeIntersect.point).sub(worldPositionStart);\n            if (mode === 'translate') {\n                offset.copy(pointEnd).sub(pointStart);\n                if (space === 'local' && axis !== 'XYZ') {\n                    offset.applyQuaternion(worldQuaternionInv);\n                }\n                if (axis.indexOf('X') === -1)\n                    offset.x = 0;\n                if (axis.indexOf('Y') === -1)\n                    offset.y = 0;\n                if (axis.indexOf('Z') === -1)\n                    offset.z = 0;\n                if (space === 'local' && axis !== 'XYZ') {\n                    offset.applyQuaternion(quaternionStart).divide(parentScale);\n                } else {\n                    offset.applyQuaternion(parentQuaternionInv).divide(parentScale);\n                }\n                object.position.copy(offset).add(positionStart);\n                if (this.translationSnap) {\n                    if (space === 'local') {\n                        object.position.applyQuaternion(_tempQuaternion.copy(quaternionStart).inverse());\n                        if (axis.search('X') !== -1) {\n                            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n                        }\n                        if (axis.search('Y') !== -1) {\n                            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n                        }\n                        if (axis.search('Z') !== -1) {\n                            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n                        }\n                        object.position.applyQuaternion(quaternionStart);\n                    }\n                    if (space === 'world') {\n                        if (object.parent) {\n                            object.position.add(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n                        }\n                        if (axis.search('X') !== -1) {\n                            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n                        }\n                        if (axis.search('Y') !== -1) {\n                            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n                        }\n                        if (axis.search('Z') !== -1) {\n                            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n                        }\n                        if (object.parent) {\n                            object.position.sub(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n                        }\n                    }\n                }\n            } else if (mode === 'scale') {\n                if (axis.search('XYZ') !== -1) {\n                    var d = pointEnd.length() / pointStart.length();\n                    if (pointEnd.dot(pointStart) < 0)\n                        d *= -1;\n                    _tempVector2.set(d, d, d);\n                } else {\n                    _tempVector.copy(pointStart);\n                    _tempVector2.copy(pointEnd);\n                    _tempVector.applyQuaternion(worldQuaternionInv);\n                    _tempVector2.applyQuaternion(worldQuaternionInv);\n                    _tempVector2.divide(_tempVector);\n                    if (axis.search('X') === -1) {\n                        _tempVector2.x = 1;\n                    }\n                    if (axis.search('Y') === -1) {\n                        _tempVector2.y = 1;\n                    }\n                    if (axis.search('Z') === -1) {\n                        _tempVector2.z = 1;\n                    }\n                }\n                object.scale.copy(scaleStart).multiply(_tempVector2);\n                if (this.scaleSnap) {\n                    if (axis.search('X') !== -1) {\n                        object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n                    }\n                    if (axis.search('Y') !== -1) {\n                        object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n                    }\n                    if (axis.search('Z') !== -1) {\n                        object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n                    }\n                }\n            } else if (mode === 'rotate') {\n                offset.copy(pointEnd).sub(pointStart);\n                var ROTATION_SPEED = 20 / worldPosition.distanceTo(_tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n                if (axis === 'E') {\n                    rotationAxis.copy(eye);\n                    rotationAngle = pointEnd.angleTo(pointStart);\n                    startNorm.copy(pointStart).normalize();\n                    endNorm.copy(pointEnd).normalize();\n                    rotationAngle *= endNorm.cross(startNorm).dot(eye) < 0 ? 1 : -1;\n                } else if (axis === 'XYZE') {\n                    rotationAxis.copy(offset).cross(eye).normalize();\n                    rotationAngle = offset.dot(_tempVector.copy(rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n                } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n                    rotationAxis.copy(_unit[axis]);\n                    _tempVector.copy(_unit[axis]);\n                    if (space === 'local') {\n                        _tempVector.applyQuaternion(worldQuaternion);\n                    }\n                    rotationAngle = offset.dot(_tempVector.cross(eye).normalize()) * ROTATION_SPEED;\n                }\n                if (this.rotationSnap)\n                    rotationAngle = Math.round(rotationAngle / this.rotationSnap) * this.rotationSnap;\n                this.rotationAngle = rotationAngle;\n                if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n                    object.quaternion.copy(quaternionStart);\n                    object.quaternion.multiply(_tempQuaternion.setFromAxisAngle(rotationAxis, rotationAngle)).normalize();\n                } else {\n                    rotationAxis.applyQuaternion(parentQuaternionInv);\n                    object.quaternion.copy(_tempQuaternion.setFromAxisAngle(rotationAxis, rotationAngle));\n                    object.quaternion.multiply(quaternionStart).normalize();\n                }\n            }\n            this.dispatchEvent(changeEvent);\n            this.dispatchEvent(objectChangeEvent);\n        };\n        this.pointerUp = function (pointer) {\n            if (pointer.button !== undefined && pointer.button !== 0)\n                return;\n            if (this.dragging && this.axis !== null) {\n                mouseUpEvent.mode = this.mode;\n                this.dispatchEvent(mouseUpEvent);\n            }\n            this.dragging = false;\n            if (pointer.button === undefined)\n                this.axis = null;\n        };\n        function getPointer(event) {\n            if (document.pointerLockElement) {\n                return {\n                    x: 0,\n                    y: 0,\n                    button: event.button\n                };\n            } else {\n                var pointer = event.changedTouches ? event.changedTouches[0] : event;\n                var rect = domElement.getBoundingClientRect();\n                return {\n                    x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n                    y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n                    button: event.button\n                };\n            }\n        }\n        function onPointerHover(event) {\n            if (!scope.enabled)\n                return;\n            scope.pointerHover(getPointer(event));\n        }\n        function onPointerDown(event) {\n            if (!scope.enabled)\n                return;\n            document.addEventListener('mousemove', onPointerMove, false);\n            scope.pointerHover(getPointer(event));\n            scope.pointerDown(getPointer(event));\n        }\n        function onPointerMove(event) {\n            if (!scope.enabled)\n                return;\n            scope.pointerMove(getPointer(event));\n        }\n        function onPointerUp(event) {\n            if (!scope.enabled)\n                return;\n            document.removeEventListener('mousemove', onPointerMove, false);\n            scope.pointerUp(getPointer(event));\n        }\n        this.getMode = function () {\n            return scope.mode;\n        };\n        this.setMode = function (mode) {\n            scope.mode = mode;\n        };\n        this.setTranslationSnap = function (translationSnap) {\n            scope.translationSnap = translationSnap;\n        };\n        this.setRotationSnap = function (rotationSnap) {\n            scope.rotationSnap = rotationSnap;\n        };\n        this.setScaleSnap = function (scaleSnap) {\n            scope.scaleSnap = scaleSnap;\n        };\n        this.setSize = function (size) {\n            scope.size = size;\n        };\n        this.setSpace = function (space) {\n            scope.space = space;\n        };\n        this.update = function () {\n            console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n        };\n    };\n    TransformControls.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n        constructor: TransformControls,\n        isTransformControls: true\n    });\n    return TransformControls;\n});"]}