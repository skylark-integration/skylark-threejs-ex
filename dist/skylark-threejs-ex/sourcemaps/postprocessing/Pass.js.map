{"version":3,"sources":["postprocessing/Pass.js"],"names":["define","THREE","Pass","this","enabled","needsSwap","clear","renderToScreen","camera","geometry","FullScreenQuad","Object","assign","prototype","setSize","render","console","error","OrthographicCamera","PlaneBufferGeometry","material","_mesh","Mesh","defineProperty","get","set","value","dispose","renderer"],"mappings":";;;;;;;AAAAA,QACI,mBACD,SAAUC,GACT,aACA,SAASC,IACLC,KAAKC,SAAU,EACfD,KAAKE,WAAY,EACjBF,KAAKG,OAAQ,EACbH,KAAKI,gBAAiB,EASJ,IACdC,EACAC,EACAC,EAqBR,OA/BAC,OAAOC,OAAOV,EAAKW,WACfC,QAAS,aAETC,OAAQ,WACJC,QAAQC,MAAM,iEAGtBf,EAAKQ,gBACGF,EAAS,IAAIP,EAAMiB,oBAAoB,EAAG,EAAG,GAAI,EAAG,EAAG,GACvDT,EAAW,IAAIR,EAAMkB,oBAAoB,EAAG,GAC5CT,EAAiB,SAAUU,GAC3BjB,KAAKkB,MAAQ,IAAIpB,EAAMqB,KAAKb,EAAUW,IAE1CT,OAAOY,eAAeb,EAAeG,UAAW,YAC5CW,IAAK,WACD,OAAOrB,KAAKkB,MAAMD,UAEtBK,IAAK,SAAUC,GACXvB,KAAKkB,MAAMD,SAAWM,KAG9Bf,OAAOC,OAAOF,EAAeG,WACzBc,QAAS,WACLxB,KAAKkB,MAAMZ,SAASkB,WAExBZ,OAAQ,SAAUa,GACdA,EAASb,OAAOZ,KAAKkB,MAAOb,MAG7BE,GAEJR","file":"../../postprocessing/Pass.js","sourcesContent":["define([\n    \"skylark-threejs\"\n], function (THREE) {\n    'use strict';\n    function Pass() {\n        this.enabled = true;\n        this.needsSwap = true;\n        this.clear = false;\n        this.renderToScreen = false;\n    }\n    Object.assign(Pass.prototype, {\n        setSize: function () {\n        },\n        render: function () {\n            console.error('THREE.Pass: .render() must be implemented in derived pass.');\n        }\n    });\n    Pass.FullScreenQuad = function () {\n        var camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n        var geometry = new THREE.PlaneBufferGeometry(2, 2);\n        var FullScreenQuad = function (material) {\n            this._mesh = new THREE.Mesh(geometry, material);\n        };\n        Object.defineProperty(FullScreenQuad.prototype, 'material', {\n            get: function () {\n                return this._mesh.material;\n            },\n            set: function (value) {\n                this._mesh.material = value;\n            }\n        });\n        Object.assign(FullScreenQuad.prototype, {\n            dispose: function () {\n                this._mesh.geometry.dispose();\n            },\n            render: function (renderer) {\n                renderer.render(this._mesh, camera);\n            }\n        });\n        return FullScreenQuad;\n    }();\n    return Pass;\n});"]}