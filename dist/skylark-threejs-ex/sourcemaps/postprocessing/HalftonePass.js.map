{"version":3,"sources":["postprocessing/HalftonePass.js"],"names":["define","THREE","threex","Pass","HalftoneShader","HalftonePass","width","height","params","key","call","this","undefined","console","error","uniforms","UniformsUtils","clone","material","ShaderMaterial","fragmentShader","vertexShader","value","hasOwnProperty","fsQuad","FullScreenQuad","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","setSize","postprocessing"],"mappings":";;;;;;;AAAAA,QACI,kBACA,YACA,SACA,6BACD,SACCC,EACAC,EACAC,EACAC,GAEA,aACA,IAAIC,EAAe,SAAUC,EAAOC,EAAQC,GAaxC,IAAK,IAAIC,KAZTN,EAAKO,KAAKC,WACaC,IAAnBR,GACAS,QAAQC,MAAM,8CAElBH,KAAKI,SAAWd,EAAMe,cAAcC,MAAMb,EAAeW,UACzDJ,KAAKO,SAAW,IAAIjB,EAAMkB,gBACtBJ,SAAUJ,KAAKI,SACfK,eAAgBhB,EAAegB,eAC/BC,aAAcjB,EAAeiB,eAEjCV,KAAKI,SAAST,MAAMgB,MAAQhB,EAC5BK,KAAKI,SAASR,OAAOe,MAAQf,EACbC,EACRA,EAAOe,eAAed,IAAQE,KAAKI,SAASQ,eAAed,KAC3DE,KAAKI,SAASN,GAAKa,MAAQd,EAAOC,IAG1CE,KAAKa,OAAS,IAAIrB,EAAKsB,eAAed,KAAKO,WAqB/C,OAnBAb,EAAaqB,UAAYC,OAAOC,OAAOD,OAAOE,OAAO1B,EAAKuB,YACtDI,YAAazB,EACb0B,OAAQ,SAAUC,EAAUC,EAAaC,GACrCvB,KAAKO,SAASH,SAAmB,SAAEO,MAAQY,EAAWC,QAClDxB,KAAKyB,gBACLJ,EAASK,gBAAgB,MACzB1B,KAAKa,OAAOO,OAAOC,KAEnBA,EAASK,gBAAgBJ,GACrBtB,KAAK2B,OACLN,EAASM,QACb3B,KAAKa,OAAOO,OAAOC,KAG3BO,QAAS,SAAUjC,EAAOC,GACtBI,KAAKI,SAAST,MAAMgB,MAAQhB,EAC5BK,KAAKI,SAASR,OAAOe,MAAQf,KAG9BL,EAAOsC,eAAenC,aAAeA","file":"../../postprocessing/HalftonePass.js","sourcesContent":["define([\r\n    \"skylark-threejs\",\r\n    \"../threex\",\r\n    './Pass',\r\n    '../shaders/HalftoneShader'\r\n], function (\r\n    THREE, \r\n    threex,\r\n    Pass, \r\n    HalftoneShader\r\n) {\r\n    'use strict';\r\n    var HalftonePass = function (width, height, params) {\r\n        Pass.call(this);\r\n        if (HalftoneShader === undefined) {\r\n            console.error('THREE.HalftonePass requires HalftoneShader');\r\n        }\r\n        this.uniforms = THREE.UniformsUtils.clone(HalftoneShader.uniforms);\r\n        this.material = new THREE.ShaderMaterial({\r\n            uniforms: this.uniforms,\r\n            fragmentShader: HalftoneShader.fragmentShader,\r\n            vertexShader: HalftoneShader.vertexShader\r\n        });\r\n        this.uniforms.width.value = width;\r\n        this.uniforms.height.value = height;\r\n        for (var key in params) {\r\n            if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\r\n                this.uniforms[key].value = params[key];\r\n            }\r\n        }\r\n        this.fsQuad = new Pass.FullScreenQuad(this.material);\r\n    };\r\n    HalftonePass.prototype = Object.assign(Object.create(Pass.prototype), {\r\n        constructor: HalftonePass,\r\n        render: function (renderer, writeBuffer, readBuffer) {\r\n            this.material.uniforms['tDiffuse'].value = readBuffer.texture;\r\n            if (this.renderToScreen) {\r\n                renderer.setRenderTarget(null);\r\n                this.fsQuad.render(renderer);\r\n            } else {\r\n                renderer.setRenderTarget(writeBuffer);\r\n                if (this.clear)\r\n                    renderer.clear();\r\n                this.fsQuad.render(renderer);\r\n            }\r\n        },\r\n        setSize: function (width, height) {\r\n            this.uniforms.width.value = width;\r\n            this.uniforms.height.value = height;\r\n        }\r\n    });\r\n    return threex.postprocessing.HalftonePass = HalftonePass;\r\n});"]}