{"version":3,"sources":["postprocessing/SavePass.js"],"names":["define","THREE","SavePass","renderTarget","Pass","call","this","undefined","CopyShader","console","error","shader","textureID","uniforms","UniformsUtils","clone","material","ShaderMaterial","vertexShader","fragmentShader","WebGLRenderTarget","window","innerWidth","innerHeight","minFilter","LinearFilter","magFilter","format","RGBFormat","stencilBuffer","texture","name","needsSwap","fsQuad","FullScreenQuad","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","value","setRenderTarget","clear"],"mappings":";;;;;;;AAAAA,QACC,kBACA,wBACA,UACC,SAASC,GA6DV,OAxDAA,EAAMC,SAAW,SAAWC,GAE3BF,EAAMG,KAAKC,KAAMC,WAESC,IAArBN,EAAMO,YACVC,QAAQC,MAAO,6CAEhB,IAAIC,EAASV,EAAMO,WAEnBF,KAAKM,UAAY,WAEjBN,KAAKO,SAAWZ,EAAMa,cAAcC,MAAOJ,EAAOE,UAElDP,KAAKU,SAAW,IAAIf,EAAMgB,gBAEzBJ,SAAUP,KAAKO,SACfK,aAAcP,EAAOO,aACrBC,eAAgBR,EAAOQ,iBAIxBb,KAAKH,aAAeA,OAEOI,IAAtBD,KAAKH,eAETG,KAAKH,aAAe,IAAIF,EAAMmB,kBAAmBC,OAAOC,WAAYD,OAAOE,aAAeC,UAAWvB,EAAMwB,aAAcC,UAAWzB,EAAMwB,aAAcE,OAAQ1B,EAAM2B,UAAWC,eAAe,IAChMvB,KAAKH,aAAa2B,QAAQC,KAAO,eAIlCzB,KAAK0B,WAAY,EAEjB1B,KAAK2B,OAAS,IAAIhC,EAAMG,KAAK8B,eAAgB5B,KAAKU,WAInDf,EAAMC,SAASiC,UAAYC,OAAOC,OAAQD,OAAOE,OAAQrC,EAAMG,KAAK+B,YAEnEI,YAAatC,EAAMC,SAEnBsC,OAAQ,SAAWC,EAAUC,EAAaC,GAEpCrC,KAAKO,SAAUP,KAAKM,aAExBN,KAAKO,SAAUP,KAAKM,WAAYgC,MAAQD,EAAWb,SAIpDW,EAASI,gBAAiBvC,KAAKH,cAC1BG,KAAKwC,OAAQL,EAASK,QAC3BxC,KAAK2B,OAAOO,OAAQC,MAMfxC,EAAMC","file":"../../postprocessing/SavePass.js","sourcesContent":["define([\n\t\"skylark-threejs\",\n\t\"../shaders/CopyShader\",\n\t\"./Pass\"\n],function(THREE){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.SavePass = function ( renderTarget ) {\n\n\t\tTHREE.Pass.call( this );\n\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.SavePass relies on THREE.CopyShader\" );\n\n\t\tvar shader = THREE.CopyShader;\n\n\t\tthis.textureID = \"tDiffuse\";\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tif ( this.renderTarget === undefined ) {\n\n\t\t\tthis.renderTarget = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false } );\n\t\t\tthis.renderTarget.texture.name = \"SavePass.rt\";\n\n\t\t}\n\n\t\tthis.needsSwap = false;\n\n\t\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.material );\n\n\t};\n\n\tTHREE.SavePass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\t\tconstructor: THREE.SavePass,\n\n\t\trender: function ( renderer, writeBuffer, readBuffer ) {\n\n\t\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( this.renderTarget );\n\t\t\tif ( this.clear ) renderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t} );\n\t\n\treturn THREE.SavePass;\n});\n"]}