{"version":3,"sources":["postprocessing/RenderPass.js"],"names":["define","THREE","Pass","RenderPass","scene","camera","overrideMaterial","clearColor","clearAlpha","call","this","undefined","clear","clearDepth","needsSwap","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldClearColor","oldClearAlpha","oldOverrideMaterial","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil"],"mappings":";;;;;;;AAAAA,QACC,kBACA,UACC,SAASC,EAAMC,GAiFhB,OA5EAD,EAAME,WAAa,SAAWC,EAAOC,EAAQC,EAAkBC,EAAYC,GAE1EP,EAAMC,KAAKO,KAAMC,MAEjBA,KAAKN,MAAQA,EACbM,KAAKL,OAASA,EAEdK,KAAKJ,iBAAmBA,EAExBI,KAAKH,WAAaA,EAClBG,KAAKF,gBAA8BG,IAAfH,EAA6BA,EAAa,EAE9DE,KAAKE,OAAQ,EACbF,KAAKG,YAAa,EAClBH,KAAKI,WAAY,GAIlBb,EAAME,WAAWY,UAAYC,OAAOC,OAAQD,OAAOE,OAAQjB,EAAMC,KAAKa,YAErEI,YAAalB,EAAME,WAEnBiB,OAAQ,SAAWC,EAAUC,EAAaC,GAEzC,IAGIC,EAAeC,EAAeC,EAH9BC,EAAeN,EAASO,UAC5BP,EAASO,WAAY,OAIUjB,IAA1BD,KAAKJ,mBAEToB,EAAsBhB,KAAKN,MAAME,iBAEjCI,KAAKN,MAAME,iBAAmBI,KAAKJ,kBAI/BI,KAAKH,aAETiB,EAAgBH,EAASQ,gBAAgBC,SACzCL,EAAgBJ,EAASU,gBAEzBV,EAASW,cAAetB,KAAKH,WAAYG,KAAKF,aAI1CE,KAAKG,YAETQ,EAASR,aAIVQ,EAASY,gBAAiBvB,KAAKwB,eAAiB,KAAOX,GAGlDb,KAAKE,OAAQS,EAAST,MAAOS,EAASc,eAAgBd,EAASe,eAAgBf,EAASgB,kBAC7FhB,EAASD,OAAQV,KAAKN,MAAOM,KAAKL,QAE7BK,KAAKH,YAETc,EAASW,cAAeR,EAAeC,QAITd,IAA1BD,KAAKJ,mBAETI,KAAKN,MAAME,iBAAmBoB,GAI/BL,EAASO,UAAYD,KAMhB1B,EAAME","file":"../../postprocessing/RenderPass.js","sourcesContent":["define([\n\t\"skylark-threejs\",\n\t\"./Pass\"\n],function(THREE,Pass){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\t\tTHREE.Pass.call( this );\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\t\tthis.clear = true;\n\t\tthis.clearDepth = false;\n\t\tthis.needsSwap = false;\n\n\t};\n\n\tTHREE.RenderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\t\tconstructor: THREE.RenderPass,\n\n\t\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\t\tvar oldAutoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tvar oldClearColor, oldClearAlpha, oldOverrideMaterial;\n\n\t\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t\t}\n\n\t\t\tif ( this.clearColor ) {\n\n\t\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t\t}\n\n\t\t\tif ( this.clearDepth ) {\n\n\t\t\t\trenderer.clearDepth();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t\tif ( this.clearColor ) {\n\n\t\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t\t}\n\n\t\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t\t}\n\n\t\t\trenderer.autoClear = oldAutoClear;\n\n\t\t}\n\n\t} );\n\t\n\treturn THREE.RenderPass;\n});\n"]}