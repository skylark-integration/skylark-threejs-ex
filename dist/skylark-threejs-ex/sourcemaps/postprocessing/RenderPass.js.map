{"version":3,"sources":["postprocessing/RenderPass.js"],"names":["define","threex","Pass","RenderPass","scene","camera","overrideMaterial","clearColor","clearAlpha","call","this","undefined","clear","clearDepth","needsSwap","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldClearColor","oldClearAlpha","oldOverrideMaterial","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil","postprocessing"],"mappings":";;;;;;;AAAAA,QACK,YACD,UACD,SACCC,EACAC,GAEA,aACA,IAAIC,EAAa,SAAUC,EAAOC,EAAQC,EAAkBC,EAAYC,GACpEN,EAAKO,KAAKC,MACVA,KAAKN,MAAQA,EACbM,KAAKL,OAASA,EACdK,KAAKJ,iBAAmBA,EACxBI,KAAKH,WAAaA,EAClBG,KAAKF,gBAA4BG,IAAfH,EAA2BA,EAAa,EAC1DE,KAAKE,OAAQ,EACbF,KAAKG,YAAa,EAClBH,KAAKI,WAAY,GAkCrB,OAhCAX,EAAWY,UAAYC,OAAOC,OAAOD,OAAOE,OAAOhB,EAAKa,YACpDI,YAAahB,EACbiB,OAAQ,SAAUC,EAAUC,EAAaC,GACrC,IAEIC,EAAeC,EAAeC,EAF9BC,EAAeN,EAASO,UAC5BP,EAASO,WAAY,OAESjB,IAA1BD,KAAKJ,mBACLoB,EAAsBhB,KAAKN,MAAME,iBACjCI,KAAKN,MAAME,iBAAmBI,KAAKJ,kBAEnCI,KAAKH,aACLiB,EAAgBH,EAASQ,gBAAgBC,SACzCL,EAAgBJ,EAASU,gBACzBV,EAASW,cAActB,KAAKH,WAAYG,KAAKF,aAE7CE,KAAKG,YACLQ,EAASR,aAEbQ,EAASY,gBAAgBvB,KAAKwB,eAAiB,KAAOX,GAClDb,KAAKE,OACLS,EAAST,MAAMS,EAASc,eAAgBd,EAASe,eAAgBf,EAASgB,kBAC9EhB,EAASD,OAAOV,KAAKN,MAAOM,KAAKL,QAC7BK,KAAKH,YACLc,EAASW,cAAcR,EAAeC,QAEZd,IAA1BD,KAAKJ,mBACLI,KAAKN,MAAME,iBAAmBoB,GAElCL,EAASO,UAAYD,KAItB1B,EAAOqC,eAAenC,WAAaA","file":"../../postprocessing/RenderPass.js","sourcesContent":["define([\r\n     \"../threex\",\r\n    './Pass'\r\n], function (\r\n    threex,\r\n    Pass\r\n) {\r\n    'use strict';\r\n    var RenderPass = function (scene, camera, overrideMaterial, clearColor, clearAlpha) {\r\n        Pass.call(this);\r\n        this.scene = scene;\r\n        this.camera = camera;\r\n        this.overrideMaterial = overrideMaterial;\r\n        this.clearColor = clearColor;\r\n        this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\r\n        this.clear = true;\r\n        this.clearDepth = false;\r\n        this.needsSwap = false;\r\n    };\r\n    RenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\r\n        constructor: RenderPass,\r\n        render: function (renderer, writeBuffer, readBuffer) {\r\n            var oldAutoClear = renderer.autoClear;\r\n            renderer.autoClear = false;\r\n            var oldClearColor, oldClearAlpha, oldOverrideMaterial;\r\n            if (this.overrideMaterial !== undefined) {\r\n                oldOverrideMaterial = this.scene.overrideMaterial;\r\n                this.scene.overrideMaterial = this.overrideMaterial;\r\n            }\r\n            if (this.clearColor) {\r\n                oldClearColor = renderer.getClearColor().getHex();\r\n                oldClearAlpha = renderer.getClearAlpha();\r\n                renderer.setClearColor(this.clearColor, this.clearAlpha);\r\n            }\r\n            if (this.clearDepth) {\r\n                renderer.clearDepth();\r\n            }\r\n            renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\r\n            if (this.clear)\r\n                renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\r\n            renderer.render(this.scene, this.camera);\r\n            if (this.clearColor) {\r\n                renderer.setClearColor(oldClearColor, oldClearAlpha);\r\n            }\r\n            if (this.overrideMaterial !== undefined) {\r\n                this.scene.overrideMaterial = oldOverrideMaterial;\r\n            }\r\n            renderer.autoClear = oldAutoClear;\r\n        }\r\n    });\r\n\r\n    return threex.postprocessing.RenderPass = RenderPass;\r\n});"]}