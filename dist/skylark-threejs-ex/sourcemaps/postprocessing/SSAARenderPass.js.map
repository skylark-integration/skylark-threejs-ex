{"version":3,"sources":["postprocessing/SSAARenderPass.js"],"names":["define","THREE","threex","Pass","CopyShader","SSAARenderPass","scene","camera","clearColor","clearAlpha","call","this","sampleLevel","unbiased","undefined","console","error","copyShader","copyUniforms","UniformsUtils","clone","uniforms","copyMaterial","ShaderMaterial","vertexShader","fragmentShader","premultipliedAlpha","transparent","blending","AdditiveBlending","depthTest","depthWrite","fsQuad","FullScreenQuad","prototype","Object","assign","create","constructor","dispose","sampleRenderTarget","setSize","width","height","render","renderer","writeBuffer","readBuffer","WebGLRenderTarget","minFilter","LinearFilter","magFilter","format","RGBAFormat","texture","name","jitterOffsets","JitterVectors","Math","max","min","autoClear","oldClearColor","getClearColor","getHex","oldClearAlpha","getClearAlpha","baseSampleWeight","length","value","i","jitterOffset","setViewOffset","sampleWeight","setClearColor","setRenderTarget","clear","renderToScreen","clearViewOffset","postprocessing"],"mappings":"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","file":"../../postprocessing/SSAARenderPass.js","sourcesContent":["define([\n    \"skylark-threejs\",\n    \"../threex\",\n    './Pass',\n    '../shaders/CopyShader'\n], function (\n    THREE, \n    threex,\n    Pass, \n    CopyShader\n) {\n    'use strict';\n    var SSAARenderPass = function (scene, camera, clearColor, clearAlpha) {\n        Pass.call(this);\n        this.scene = scene;\n        this.camera = camera;\n        this.sampleLevel = 4;\n        this.unbiased = true;\n        this.clearColor = clearColor !== undefined ? clearColor : 0;\n        this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n        if (CopyShader === undefined)\n            console.error('SSAARenderPass relies on CopyShader');\n        var copyShader = CopyShader;\n        this.copyUniforms = THREE.UniformsUtils.clone(copyShader.uniforms);\n        this.copyMaterial = new THREE.ShaderMaterial({\n            uniforms: this.copyUniforms,\n            vertexShader: copyShader.vertexShader,\n            fragmentShader: copyShader.fragmentShader,\n            premultipliedAlpha: true,\n            transparent: true,\n            blending: THREE.AdditiveBlending,\n            depthTest: false,\n            depthWrite: false\n        });\n        this.fsQuad = new Pass.FullScreenQuad(this.copyMaterial);\n    };\n    SSAARenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n        constructor: SSAARenderPass,\n        dispose: function () {\n            if (this.sampleRenderTarget) {\n                this.sampleRenderTarget.dispose();\n                this.sampleRenderTarget = null;\n            }\n        },\n        setSize: function (width, height) {\n            if (this.sampleRenderTarget)\n                this.sampleRenderTarget.setSize(width, height);\n        },\n        render: function (renderer, writeBuffer, readBuffer) {\n            if (!this.sampleRenderTarget) {\n                this.sampleRenderTarget = new THREE.WebGLRenderTarget(readBuffer.width, readBuffer.height, {\n                    minFilter: THREE.LinearFilter,\n                    magFilter: THREE.LinearFilter,\n                    format: THREE.RGBAFormat\n                });\n                this.sampleRenderTarget.texture.name = 'SSAARenderPass.sample';\n            }\n            var jitterOffsets = SSAARenderPass.JitterVectors[Math.max(0, Math.min(this.sampleLevel, 5))];\n            var autoClear = renderer.autoClear;\n            renderer.autoClear = false;\n            var oldClearColor = renderer.getClearColor().getHex();\n            var oldClearAlpha = renderer.getClearAlpha();\n            var baseSampleWeight = 1 / jitterOffsets.length;\n            var roundingRange = 1 / 32;\n            this.copyUniforms['tDiffuse'].value = this.sampleRenderTarget.texture;\n            var width = readBuffer.width, height = readBuffer.height;\n            for (var i = 0; i < jitterOffsets.length; i++) {\n                var jitterOffset = jitterOffsets[i];\n                if (this.camera.setViewOffset) {\n                    this.camera.setViewOffset(width, height, jitterOffset[0] * 0.0625, jitterOffset[1] * 0.0625, width, height);\n                }\n                var sampleWeight = baseSampleWeight;\n                if (this.unbiased) {\n                    var uniformCenteredDistribution = -0.5 + (i + 0.5) / jitterOffsets.length;\n                    sampleWeight += roundingRange * uniformCenteredDistribution;\n                }\n                this.copyUniforms['opacity'].value = sampleWeight;\n                renderer.setClearColor(this.clearColor, this.clearAlpha);\n                renderer.setRenderTarget(this.sampleRenderTarget);\n                renderer.clear();\n                renderer.render(this.scene, this.camera);\n                renderer.setRenderTarget(this.renderToScreen ? null : writeBuffer);\n                if (i === 0) {\n                    renderer.setClearColor(0, 0);\n                    renderer.clear();\n                }\n                this.fsQuad.render(renderer);\n            }\n            if (this.camera.clearViewOffset)\n                this.camera.clearViewOffset();\n            renderer.autoClear = autoClear;\n            renderer.setClearColor(oldClearColor, oldClearAlpha);\n        }\n    });\n    SSAARenderPass.JitterVectors = [\n        [[\n                0,\n                0\n            ]],\n        [\n            [\n                4,\n                4\n            ],\n            [\n                -4,\n                -4\n            ]\n        ],\n        [\n            [\n                -2,\n                -6\n            ],\n            [\n                6,\n                -2\n            ],\n            [\n                -6,\n                2\n            ],\n            [\n                2,\n                6\n            ]\n        ],\n        [\n            [\n                1,\n                -3\n            ],\n            [\n                -1,\n                3\n            ],\n            [\n                5,\n                1\n            ],\n            [\n                -3,\n                -5\n            ],\n            [\n                -5,\n                5\n            ],\n            [\n                -7,\n                -1\n            ],\n            [\n                3,\n                7\n            ],\n            [\n                7,\n                -7\n            ]\n        ],\n        [\n            [\n                1,\n                1\n            ],\n            [\n                -1,\n                -3\n            ],\n            [\n                -3,\n                2\n            ],\n            [\n                4,\n                -1\n            ],\n            [\n                -5,\n                -2\n            ],\n            [\n                2,\n                5\n            ],\n            [\n                5,\n                3\n            ],\n            [\n                3,\n                -5\n            ],\n            [\n                -2,\n                6\n            ],\n            [\n                0,\n                -7\n            ],\n            [\n                -4,\n                -6\n            ],\n            [\n                -6,\n                4\n            ],\n            [\n                -8,\n                0\n            ],\n            [\n                7,\n                -4\n            ],\n            [\n                6,\n                7\n            ],\n            [\n                -7,\n                -8\n            ]\n        ],\n        [\n            [\n                -4,\n                -7\n            ],\n            [\n                -7,\n                -5\n            ],\n            [\n                -3,\n                -5\n            ],\n            [\n                -5,\n                -4\n            ],\n            [\n                -1,\n                -4\n            ],\n            [\n                -2,\n                -2\n            ],\n            [\n                -6,\n                -1\n            ],\n            [\n                -4,\n                0\n            ],\n            [\n                -7,\n                1\n            ],\n            [\n                -1,\n                2\n            ],\n            [\n                -6,\n                3\n            ],\n            [\n                -3,\n                3\n            ],\n            [\n                -7,\n                6\n            ],\n            [\n                -3,\n                6\n            ],\n            [\n                -5,\n                7\n            ],\n            [\n                -1,\n                7\n            ],\n            [\n                5,\n                -7\n            ],\n            [\n                1,\n                -6\n            ],\n            [\n                6,\n                -5\n            ],\n            [\n                4,\n                -4\n            ],\n            [\n                2,\n                -3\n            ],\n            [\n                7,\n                -2\n            ],\n            [\n                1,\n                -1\n            ],\n            [\n                4,\n                -1\n            ],\n            [\n                2,\n                1\n            ],\n            [\n                6,\n                2\n            ],\n            [\n                0,\n                4\n            ],\n            [\n                4,\n                4\n            ],\n            [\n                2,\n                5\n            ],\n            [\n                7,\n                5\n            ],\n            [\n                5,\n                6\n            ],\n            [\n                3,\n                7\n            ]\n        ]\n    ];\n    return threex.postprocessing.SSAARenderPass = SSAARenderPass;\n});"]}