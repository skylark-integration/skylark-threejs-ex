{"version":3,"sources":["postprocessing/ClearPass.js"],"names":["define","threex","Pass","ClearPass","clearColor","clearAlpha","call","this","needsSwap","undefined","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldClearColor","oldClearAlpha","getClearColor","getHex","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","clear","postprocessing"],"mappings":";;;;;;;AAAAA,QACI,YACA,0BACD,SACCC,EACAC,GAEA,aACA,IAAIC,EAAY,SAAUC,EAAYC,GAClCH,EAAKI,KAAKC,MACVA,KAAKC,WAAY,EACjBD,KAAKH,gBAA4BK,IAAfL,EAA2BA,EAAa,EAC1DG,KAAKF,gBAA4BI,IAAfJ,EAA2BA,EAAa,GAmB9D,OAjBAF,EAAUO,UAAYC,OAAOC,OAAOD,OAAOE,OAAOX,EAAKQ,YACnDI,YAAaX,EACbY,OAAQ,SAAUC,EAAUC,EAAaC,GACrC,IAAIC,EAAeC,EACfb,KAAKH,aACLe,EAAgBH,EAASK,gBAAgBC,SACzCF,EAAgBJ,EAASO,gBACzBP,EAASQ,cAAcjB,KAAKH,WAAYG,KAAKF,aAEjDW,EAASS,gBAAgBlB,KAAKmB,eAAiB,KAAOR,GACtDF,EAASW,QACLpB,KAAKH,YACLY,EAASQ,cAAcL,EAAeC,MAK3CnB,EAAO2B,eAAezB,UAAYA","file":"../../postprocessing/ClearPass.js","sourcesContent":["define([\r\n    \"../threex\",\r\n    '../postprocessing/Pass'\r\n], function (\r\n    threex,\r\n    Pass\r\n) {\r\n    'use strict';\r\n    var ClearPass = function (clearColor, clearAlpha) {\r\n        Pass.call(this);\r\n        this.needsSwap = false;\r\n        this.clearColor = clearColor !== undefined ? clearColor : 0;\r\n        this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\r\n    };\r\n    ClearPass.prototype = Object.assign(Object.create(Pass.prototype), {\r\n        constructor: ClearPass,\r\n        render: function (renderer, writeBuffer, readBuffer) {\r\n            var oldClearColor, oldClearAlpha;\r\n            if (this.clearColor) {\r\n                oldClearColor = renderer.getClearColor().getHex();\r\n                oldClearAlpha = renderer.getClearAlpha();\r\n                renderer.setClearColor(this.clearColor, this.clearAlpha);\r\n            }\r\n            renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\r\n            renderer.clear();\r\n            if (this.clearColor) {\r\n                renderer.setClearColor(oldClearColor, oldClearAlpha);\r\n            }\r\n        }\r\n    });\r\n\r\n    return threex.postprocessing.ClearPass = ClearPass;\r\n});"]}