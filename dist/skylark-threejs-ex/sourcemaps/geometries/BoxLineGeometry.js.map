{"version":3,"sources":["geometries/BoxLineGeometry.js"],"names":["define","THREE","threex","BoxLineGeometry","width","height","depth","widthSegments","heightSegments","depthSegments","BufferGeometry","call","this","widthHalf","heightHalf","depthHalf","segmentWidth","Math","floor","segmentHeight","segmentDepth","vertices","x","y","z","i","push","setAttribute","Float32BufferAttribute","prototype","Object","create","constructor","geometries"],"mappings":";;;;;;;AAAAA,QACI,kBACA,aACD,SACCC,EACAC,GAEA,aACA,IAAIC,EAAkB,SAAUC,EAAOC,EAAQC,EAAOC,EAAeC,EAAgBC,GACjFR,EAAMS,eAAeC,KAAKC,MAe1B,IARA,IAAIC,GANJT,EAAQA,GAAS,GAMO,EACpBU,GANJT,EAASA,GAAU,GAMO,EACtBU,GANJT,EAAQA,GAAS,GAMO,EACpBU,EAAeZ,GANnBG,EAAgBU,KAAKC,MAAMX,IAAkB,GAOzCY,EAAgBd,GANpBG,EAAiBS,KAAKC,MAAMV,IAAmB,GAO3CY,EAAed,GANnBG,EAAgBQ,KAAKC,MAAMT,IAAkB,GAOzCY,KACAC,GAAKT,EAAWU,GAAKT,EAAYU,GAAKT,EACjCU,EAAI,EAAGA,GAAKlB,EAAekB,IAChCJ,EAASK,KAAKJ,GAAIR,GAAaC,EAAWO,EAAGR,GAAaC,GAC1DM,EAASK,KAAKJ,EAAGR,GAAaC,EAAWO,EAAGR,EAAYC,GACxDM,EAASK,KAAKJ,EAAGR,EAAYC,EAAWO,GAAIR,EAAYC,GACxDM,EAASK,KAAKJ,GAAIR,EAAYC,EAAWO,GAAIR,GAAaC,GAC1DO,GAAKN,EAET,IAASS,EAAI,EAAGA,GAAKjB,EAAgBiB,IACjCJ,EAASK,MAAMb,EAAWU,GAAIR,EAAWF,EAAWU,GAAIR,GACxDM,EAASK,KAAKb,EAAWU,GAAIR,EAAWF,EAAWU,EAAGR,GACtDM,EAASK,KAAKb,EAAWU,EAAGR,GAAYF,EAAWU,EAAGR,GACtDM,EAASK,MAAMb,EAAWU,EAAGR,GAAYF,EAAWU,GAAIR,GACxDQ,GAAKJ,EAET,IAASM,EAAI,EAAGA,GAAKhB,EAAegB,IAChCJ,EAASK,MAAMb,GAAYC,EAAYU,GAAIX,EAAWC,EAAYU,GAClEH,EAASK,MAAMb,EAAWC,EAAYU,EAAGX,EAAWC,EAAYU,GAChEH,EAASK,KAAKb,EAAWC,EAAYU,EAAGX,GAAYC,EAAYU,GAChEH,EAASK,KAAKb,GAAYC,EAAYU,GAAIX,GAAYC,EAAYU,GAClEA,GAAKJ,EAETR,KAAKe,aAAa,WAAY,IAAI1B,EAAM2B,uBAAuBP,EAAU,KAK7E,OAHAlB,EAAgB0B,UAAYC,OAAOC,OAAO9B,EAAMS,eAAemB,YACrCG,YAAc7B,EAEjCD,EAAO+B,WAAW9B,gBAAkBO","file":"../../geometries/BoxLineGeometry.js","sourcesContent":["define([\n    \"skylark-threejs\",\n    \"../threex\"\n], function (\n    THREE,\n    threex\n) {\n    'use strict';\n    var BoxLineGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n        THREE.BufferGeometry.call(this);\n        width = width || 1;\n        height = height || 1;\n        depth = depth || 1;\n        widthSegments = Math.floor(widthSegments) || 1;\n        heightSegments = Math.floor(heightSegments) || 1;\n        depthSegments = Math.floor(depthSegments) || 1;\n        var widthHalf = width / 2;\n        var heightHalf = height / 2;\n        var depthHalf = depth / 2;\n        var segmentWidth = width / widthSegments;\n        var segmentHeight = height / heightSegments;\n        var segmentDepth = depth / depthSegments;\n        var vertices = [];\n        var x = -widthHalf, y = -heightHalf, z = -depthHalf;\n        for (var i = 0; i <= widthSegments; i++) {\n            vertices.push(x, -heightHalf, -depthHalf, x, heightHalf, -depthHalf);\n            vertices.push(x, heightHalf, -depthHalf, x, heightHalf, depthHalf);\n            vertices.push(x, heightHalf, depthHalf, x, -heightHalf, depthHalf);\n            vertices.push(x, -heightHalf, depthHalf, x, -heightHalf, -depthHalf);\n            x += segmentWidth;\n        }\n        for (var i = 0; i <= heightSegments; i++) {\n            vertices.push(-widthHalf, y, -depthHalf, widthHalf, y, -depthHalf);\n            vertices.push(widthHalf, y, -depthHalf, widthHalf, y, depthHalf);\n            vertices.push(widthHalf, y, depthHalf, -widthHalf, y, depthHalf);\n            vertices.push(-widthHalf, y, depthHalf, -widthHalf, y, -depthHalf);\n            y += segmentHeight;\n        }\n        for (var i = 0; i <= depthSegments; i++) {\n            vertices.push(-widthHalf, -heightHalf, z, -widthHalf, heightHalf, z);\n            vertices.push(-widthHalf, heightHalf, z, widthHalf, heightHalf, z);\n            vertices.push(widthHalf, heightHalf, z, widthHalf, -heightHalf, z);\n            vertices.push(widthHalf, -heightHalf, z, -widthHalf, -heightHalf, z);\n            z += segmentDepth;\n        }\n        this.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n    };\n    BoxLineGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n    BoxLineGeometry.prototype.constructor = BoxLineGeometry;\n\n    return threex.geometries.BoxLineGeometry = BufferGeometry;\n});"]}