{"version":3,"sources":["geometries/BoxLineGeometry.js"],"names":["define","THREE","BoxLineGeometry","width","height","depth","widthSegments","heightSegments","depthSegments","BufferGeometry","call","this","widthHalf","heightHalf","depthHalf","segmentWidth","Math","floor","segmentHeight","segmentDepth","vertices","x","y","z","i","push","setAttribute","Float32BufferAttribute","prototype","Object","create","constructor"],"mappings":";;;;;;;AAAAA,QACC,mBACC,SAASC,GAqEV,OAhEAA,EAAMC,gBAAkB,SAAWC,EAAOC,EAAQC,EAAOC,EAAeC,EAAgBC,GAEvFP,EAAMQ,eAAeC,KAAMC,MAsB3B,IAZA,IAAIC,GARJT,EAAQA,GAAS,GAQO,EACpBU,GARJT,EAASA,GAAU,GAQO,EACtBU,GARJT,EAAQA,GAAS,GAQO,EAEpBU,EAAeZ,GARnBG,EAAgBU,KAAKC,MAAOX,IAAmB,GAS3CY,EAAgBd,GARpBG,EAAiBS,KAAKC,MAAOV,IAAoB,GAS7CY,EAAed,GARnBG,EAAgBQ,KAAKC,MAAOT,IAAmB,GAU3CY,KAEAC,GAAMT,EAAWU,GAAMT,EAAYU,GAAMT,EAEnCU,EAAI,EAAGA,GAAKlB,EAAekB,IAEpCJ,EAASK,KAAMJ,GAAKR,GAAcC,EAAWO,EAAGR,GAAcC,GAC9DM,EAASK,KAAMJ,EAAGR,GAAcC,EAAWO,EAAGR,EAAYC,GAC1DM,EAASK,KAAMJ,EAAGR,EAAYC,EAAWO,GAAKR,EAAYC,GAC1DM,EAASK,KAAMJ,GAAKR,EAAYC,EAAWO,GAAKR,GAAcC,GAE9DO,GAAKN,EAIN,IAAUS,EAAI,EAAGA,GAAKjB,EAAgBiB,IAErCJ,EAASK,MAAQb,EAAWU,GAAKR,EAAWF,EAAWU,GAAKR,GAC5DM,EAASK,KAAMb,EAAWU,GAAKR,EAAWF,EAAWU,EAAGR,GACxDM,EAASK,KAAMb,EAAWU,EAAGR,GAAaF,EAAWU,EAAGR,GACxDM,EAASK,MAAQb,EAAWU,EAAGR,GAAaF,EAAWU,GAAKR,GAE5DQ,GAAKJ,EAIN,IAAUM,EAAI,EAAGA,GAAKhB,EAAegB,IAEpCJ,EAASK,MAAQb,GAAaC,EAAYU,GAAKX,EAAWC,EAAYU,GACtEH,EAASK,MAAQb,EAAWC,EAAYU,EAAGX,EAAWC,EAAYU,GAClEH,EAASK,KAAMb,EAAWC,EAAYU,EAAGX,GAAaC,EAAYU,GAClEH,EAASK,KAAMb,GAAaC,EAAYU,GAAKX,GAAaC,EAAYU,GAEtEA,GAAKJ,EAINR,KAAKe,aAAc,WAAY,IAAIzB,EAAM0B,uBAAwBP,EAAU,KAI5EnB,EAAMC,gBAAgB0B,UAAYC,OAAOC,OAAQ7B,EAAMQ,eAAemB,WACtE3B,EAAMC,gBAAgB0B,UAAUG,YAAc9B,EAAMC,gBAE7CD,EAAMC","file":"../../geometries/BoxLineGeometry.js","sourcesContent":["define([\n\t\"skylark-threejs\"\n],function(THREE){\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.BoxLineGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\t\tdepth = depth || 1;\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar segmentWidth = width / widthSegments;\n\t\tvar segmentHeight = height / heightSegments;\n\t\tvar segmentDepth = depth / depthSegments;\n\n\t\tvar vertices = [];\n\n\t\tvar x = - widthHalf, y = - heightHalf, z = - depthHalf;\n\n\t\tfor ( var i = 0; i <= widthSegments; i ++ ) {\n\n\t\t\tvertices.push( x, - heightHalf, - depthHalf, x, heightHalf, - depthHalf );\n\t\t\tvertices.push( x, heightHalf, - depthHalf, x, heightHalf, depthHalf );\n\t\t\tvertices.push( x, heightHalf, depthHalf, x, - heightHalf, depthHalf );\n\t\t\tvertices.push( x, - heightHalf, depthHalf, x, - heightHalf, - depthHalf );\n\n\t\t\tx += segmentWidth;\n\n\t\t}\n\n\t\tfor ( var i = 0; i <= heightSegments; i ++ ) {\n\n\t\t\tvertices.push( - widthHalf, y, - depthHalf, widthHalf, y, - depthHalf );\n\t\t\tvertices.push( widthHalf, y, - depthHalf, widthHalf, y, depthHalf );\n\t\t\tvertices.push( widthHalf, y, depthHalf, - widthHalf, y, depthHalf );\n\t\t\tvertices.push( - widthHalf, y, depthHalf, - widthHalf, y, - depthHalf );\n\n\t\t\ty += segmentHeight;\n\n\t\t}\n\n\t\tfor ( var i = 0; i <= depthSegments; i ++ ) {\n\n\t\t\tvertices.push( - widthHalf, - heightHalf, z, - widthHalf, heightHalf, z );\n\t\t\tvertices.push( - widthHalf, heightHalf, z, widthHalf, heightHalf, z );\n\t\t\tvertices.push( widthHalf, heightHalf, z, widthHalf, - heightHalf, z );\n\t\t\tvertices.push( widthHalf, - heightHalf, z, - widthHalf, - heightHalf, z );\n\n\t\t\tz += segmentDepth;\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) );\n\n\t};\n\n\tTHREE.BoxLineGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.BoxLineGeometry.prototype.constructor = THREE.BoxLineGeometry;\n\t\n\treturn THREE.BoxLineGeometry;\n});\n"]}