{"version":3,"sources":["geometries/TeapotBufferGeometry.js"],"names":["define","THREE","threex","TeapotBufferGeometry","size","segments","bottom","lid","body","fitLid","blinn","teapotPatches","teapotVertices","BufferGeometry","call","this","undefined","Math","max","floor","maxHeight2","trueSize","numTriangles","indices","Uint32Array","numVertices","vertices","Float32Array","normals","uvs","ms","Matrix4","set","i","r","c","tcoord","sstep","tstep","vertPerRow","s","t","sval","tval","p","v1","v2","v3","v4","g","sp","tp","dsp","dtp","mgm","vert","sdir","tdir","norm","Vector3","dsval","dtval","normOut","gmx","tmtx","vsp","Vector4","vtp","vdsp","vdtp","vsdir","vtdir","mst","clone","transpose","notDegenerate","vtx1","vtx2","vtx3","maxPatches","surfCount","vertCount","normCount","uvCount","indexCount","surf","multiplyMatrices","fromArray","applyMatrix4","dot","crossVectors","normalize","x","z","y","setIndex","BufferAttribute","setAttribute","computeBoundingSphere","prototype","Object","create","constructor","geometries"],"mappings":"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","file":"../../geometries/TeapotBufferGeometry.js","sourcesContent":["define([\n   \"skylark-threejs\",\n    \"../threex\",   \n], function (\n   THREE,\n   threex\n) {\n    'use strict';\n    var TeapotBufferGeometry = function (size, segments, bottom, lid, body, fitLid, blinn) {\n        var teapotPatches = [\n            0,\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            3,\n            16,\n            17,\n            18,\n            7,\n            19,\n            20,\n            21,\n            11,\n            22,\n            23,\n            24,\n            15,\n            25,\n            26,\n            27,\n            18,\n            28,\n            29,\n            30,\n            21,\n            31,\n            32,\n            33,\n            24,\n            34,\n            35,\n            36,\n            27,\n            37,\n            38,\n            39,\n            30,\n            40,\n            41,\n            0,\n            33,\n            42,\n            43,\n            4,\n            36,\n            44,\n            45,\n            8,\n            39,\n            46,\n            47,\n            12,\n            12,\n            13,\n            14,\n            15,\n            48,\n            49,\n            50,\n            51,\n            52,\n            53,\n            54,\n            55,\n            56,\n            57,\n            58,\n            59,\n            15,\n            25,\n            26,\n            27,\n            51,\n            60,\n            61,\n            62,\n            55,\n            63,\n            64,\n            65,\n            59,\n            66,\n            67,\n            68,\n            27,\n            37,\n            38,\n            39,\n            62,\n            69,\n            70,\n            71,\n            65,\n            72,\n            73,\n            74,\n            68,\n            75,\n            76,\n            77,\n            39,\n            46,\n            47,\n            12,\n            71,\n            78,\n            79,\n            48,\n            74,\n            80,\n            81,\n            52,\n            77,\n            82,\n            83,\n            56,\n            56,\n            57,\n            58,\n            59,\n            84,\n            85,\n            86,\n            87,\n            88,\n            89,\n            90,\n            91,\n            92,\n            93,\n            94,\n            95,\n            59,\n            66,\n            67,\n            68,\n            87,\n            96,\n            97,\n            98,\n            91,\n            99,\n            100,\n            101,\n            95,\n            102,\n            103,\n            104,\n            68,\n            75,\n            76,\n            77,\n            98,\n            105,\n            106,\n            107,\n            101,\n            108,\n            109,\n            110,\n            104,\n            111,\n            112,\n            113,\n            77,\n            82,\n            83,\n            56,\n            107,\n            114,\n            115,\n            84,\n            110,\n            116,\n            117,\n            88,\n            113,\n            118,\n            119,\n            92,\n            120,\n            121,\n            122,\n            123,\n            124,\n            125,\n            126,\n            127,\n            128,\n            129,\n            130,\n            131,\n            132,\n            133,\n            134,\n            135,\n            123,\n            136,\n            137,\n            120,\n            127,\n            138,\n            139,\n            124,\n            131,\n            140,\n            141,\n            128,\n            135,\n            142,\n            143,\n            132,\n            132,\n            133,\n            134,\n            135,\n            144,\n            145,\n            146,\n            147,\n            148,\n            149,\n            150,\n            151,\n            68,\n            152,\n            153,\n            154,\n            135,\n            142,\n            143,\n            132,\n            147,\n            155,\n            156,\n            144,\n            151,\n            157,\n            158,\n            148,\n            154,\n            159,\n            160,\n            68,\n            161,\n            162,\n            163,\n            164,\n            165,\n            166,\n            167,\n            168,\n            169,\n            170,\n            171,\n            172,\n            173,\n            174,\n            175,\n            176,\n            164,\n            177,\n            178,\n            161,\n            168,\n            179,\n            180,\n            165,\n            172,\n            181,\n            182,\n            169,\n            176,\n            183,\n            184,\n            173,\n            173,\n            174,\n            175,\n            176,\n            185,\n            186,\n            187,\n            188,\n            189,\n            190,\n            191,\n            192,\n            193,\n            194,\n            195,\n            196,\n            176,\n            183,\n            184,\n            173,\n            188,\n            197,\n            198,\n            185,\n            192,\n            199,\n            200,\n            189,\n            196,\n            201,\n            202,\n            193,\n            203,\n            203,\n            203,\n            203,\n            204,\n            205,\n            206,\n            207,\n            208,\n            208,\n            208,\n            208,\n            209,\n            210,\n            211,\n            212,\n            203,\n            203,\n            203,\n            203,\n            207,\n            213,\n            214,\n            215,\n            208,\n            208,\n            208,\n            208,\n            212,\n            216,\n            217,\n            218,\n            203,\n            203,\n            203,\n            203,\n            215,\n            219,\n            220,\n            221,\n            208,\n            208,\n            208,\n            208,\n            218,\n            222,\n            223,\n            224,\n            203,\n            203,\n            203,\n            203,\n            221,\n            225,\n            226,\n            204,\n            208,\n            208,\n            208,\n            208,\n            224,\n            227,\n            228,\n            209,\n            209,\n            210,\n            211,\n            212,\n            229,\n            230,\n            231,\n            232,\n            233,\n            234,\n            235,\n            236,\n            237,\n            238,\n            239,\n            240,\n            212,\n            216,\n            217,\n            218,\n            232,\n            241,\n            242,\n            243,\n            236,\n            244,\n            245,\n            246,\n            240,\n            247,\n            248,\n            249,\n            218,\n            222,\n            223,\n            224,\n            243,\n            250,\n            251,\n            252,\n            246,\n            253,\n            254,\n            255,\n            249,\n            256,\n            257,\n            258,\n            224,\n            227,\n            228,\n            209,\n            252,\n            259,\n            260,\n            229,\n            255,\n            261,\n            262,\n            233,\n            258,\n            263,\n            264,\n            237,\n            265,\n            265,\n            265,\n            265,\n            266,\n            267,\n            268,\n            269,\n            270,\n            271,\n            272,\n            273,\n            92,\n            119,\n            118,\n            113,\n            265,\n            265,\n            265,\n            265,\n            269,\n            274,\n            275,\n            276,\n            273,\n            277,\n            278,\n            279,\n            113,\n            112,\n            111,\n            104,\n            265,\n            265,\n            265,\n            265,\n            276,\n            280,\n            281,\n            282,\n            279,\n            283,\n            284,\n            285,\n            104,\n            103,\n            102,\n            95,\n            265,\n            265,\n            265,\n            265,\n            282,\n            286,\n            287,\n            266,\n            285,\n            288,\n            289,\n            270,\n            95,\n            94,\n            93,\n            92\n        ];\n        var teapotVertices = [\n            1.4,\n            0,\n            2.4,\n            1.4,\n            -0.784,\n            2.4,\n            0.784,\n            -1.4,\n            2.4,\n            0,\n            -1.4,\n            2.4,\n            1.3375,\n            0,\n            2.53125,\n            1.3375,\n            -0.749,\n            2.53125,\n            0.749,\n            -1.3375,\n            2.53125,\n            0,\n            -1.3375,\n            2.53125,\n            1.4375,\n            0,\n            2.53125,\n            1.4375,\n            -0.805,\n            2.53125,\n            0.805,\n            -1.4375,\n            2.53125,\n            0,\n            -1.4375,\n            2.53125,\n            1.5,\n            0,\n            2.4,\n            1.5,\n            -0.84,\n            2.4,\n            0.84,\n            -1.5,\n            2.4,\n            0,\n            -1.5,\n            2.4,\n            -0.784,\n            -1.4,\n            2.4,\n            -1.4,\n            -0.784,\n            2.4,\n            -1.4,\n            0,\n            2.4,\n            -0.749,\n            -1.3375,\n            2.53125,\n            -1.3375,\n            -0.749,\n            2.53125,\n            -1.3375,\n            0,\n            2.53125,\n            -0.805,\n            -1.4375,\n            2.53125,\n            -1.4375,\n            -0.805,\n            2.53125,\n            -1.4375,\n            0,\n            2.53125,\n            -0.84,\n            -1.5,\n            2.4,\n            -1.5,\n            -0.84,\n            2.4,\n            -1.5,\n            0,\n            2.4,\n            -1.4,\n            0.784,\n            2.4,\n            -0.784,\n            1.4,\n            2.4,\n            0,\n            1.4,\n            2.4,\n            -1.3375,\n            0.749,\n            2.53125,\n            -0.749,\n            1.3375,\n            2.53125,\n            0,\n            1.3375,\n            2.53125,\n            -1.4375,\n            0.805,\n            2.53125,\n            -0.805,\n            1.4375,\n            2.53125,\n            0,\n            1.4375,\n            2.53125,\n            -1.5,\n            0.84,\n            2.4,\n            -0.84,\n            1.5,\n            2.4,\n            0,\n            1.5,\n            2.4,\n            0.784,\n            1.4,\n            2.4,\n            1.4,\n            0.784,\n            2.4,\n            0.749,\n            1.3375,\n            2.53125,\n            1.3375,\n            0.749,\n            2.53125,\n            0.805,\n            1.4375,\n            2.53125,\n            1.4375,\n            0.805,\n            2.53125,\n            0.84,\n            1.5,\n            2.4,\n            1.5,\n            0.84,\n            2.4,\n            1.75,\n            0,\n            1.875,\n            1.75,\n            -0.98,\n            1.875,\n            0.98,\n            -1.75,\n            1.875,\n            0,\n            -1.75,\n            1.875,\n            2,\n            0,\n            1.35,\n            2,\n            -1.12,\n            1.35,\n            1.12,\n            -2,\n            1.35,\n            0,\n            -2,\n            1.35,\n            2,\n            0,\n            0.9,\n            2,\n            -1.12,\n            0.9,\n            1.12,\n            -2,\n            0.9,\n            0,\n            -2,\n            0.9,\n            -0.98,\n            -1.75,\n            1.875,\n            -1.75,\n            -0.98,\n            1.875,\n            -1.75,\n            0,\n            1.875,\n            -1.12,\n            -2,\n            1.35,\n            -2,\n            -1.12,\n            1.35,\n            -2,\n            0,\n            1.35,\n            -1.12,\n            -2,\n            0.9,\n            -2,\n            -1.12,\n            0.9,\n            -2,\n            0,\n            0.9,\n            -1.75,\n            0.98,\n            1.875,\n            -0.98,\n            1.75,\n            1.875,\n            0,\n            1.75,\n            1.875,\n            -2,\n            1.12,\n            1.35,\n            -1.12,\n            2,\n            1.35,\n            0,\n            2,\n            1.35,\n            -2,\n            1.12,\n            0.9,\n            -1.12,\n            2,\n            0.9,\n            0,\n            2,\n            0.9,\n            0.98,\n            1.75,\n            1.875,\n            1.75,\n            0.98,\n            1.875,\n            1.12,\n            2,\n            1.35,\n            2,\n            1.12,\n            1.35,\n            1.12,\n            2,\n            0.9,\n            2,\n            1.12,\n            0.9,\n            2,\n            0,\n            0.45,\n            2,\n            -1.12,\n            0.45,\n            1.12,\n            -2,\n            0.45,\n            0,\n            -2,\n            0.45,\n            1.5,\n            0,\n            0.225,\n            1.5,\n            -0.84,\n            0.225,\n            0.84,\n            -1.5,\n            0.225,\n            0,\n            -1.5,\n            0.225,\n            1.5,\n            0,\n            0.15,\n            1.5,\n            -0.84,\n            0.15,\n            0.84,\n            -1.5,\n            0.15,\n            0,\n            -1.5,\n            0.15,\n            -1.12,\n            -2,\n            0.45,\n            -2,\n            -1.12,\n            0.45,\n            -2,\n            0,\n            0.45,\n            -0.84,\n            -1.5,\n            0.225,\n            -1.5,\n            -0.84,\n            0.225,\n            -1.5,\n            0,\n            0.225,\n            -0.84,\n            -1.5,\n            0.15,\n            -1.5,\n            -0.84,\n            0.15,\n            -1.5,\n            0,\n            0.15,\n            -2,\n            1.12,\n            0.45,\n            -1.12,\n            2,\n            0.45,\n            0,\n            2,\n            0.45,\n            -1.5,\n            0.84,\n            0.225,\n            -0.84,\n            1.5,\n            0.225,\n            0,\n            1.5,\n            0.225,\n            -1.5,\n            0.84,\n            0.15,\n            -0.84,\n            1.5,\n            0.15,\n            0,\n            1.5,\n            0.15,\n            1.12,\n            2,\n            0.45,\n            2,\n            1.12,\n            0.45,\n            0.84,\n            1.5,\n            0.225,\n            1.5,\n            0.84,\n            0.225,\n            0.84,\n            1.5,\n            0.15,\n            1.5,\n            0.84,\n            0.15,\n            -1.6,\n            0,\n            2.025,\n            -1.6,\n            -0.3,\n            2.025,\n            -1.5,\n            -0.3,\n            2.25,\n            -1.5,\n            0,\n            2.25,\n            -2.3,\n            0,\n            2.025,\n            -2.3,\n            -0.3,\n            2.025,\n            -2.5,\n            -0.3,\n            2.25,\n            -2.5,\n            0,\n            2.25,\n            -2.7,\n            0,\n            2.025,\n            -2.7,\n            -0.3,\n            2.025,\n            -3,\n            -0.3,\n            2.25,\n            -3,\n            0,\n            2.25,\n            -2.7,\n            0,\n            1.8,\n            -2.7,\n            -0.3,\n            1.8,\n            -3,\n            -0.3,\n            1.8,\n            -3,\n            0,\n            1.8,\n            -1.5,\n            0.3,\n            2.25,\n            -1.6,\n            0.3,\n            2.025,\n            -2.5,\n            0.3,\n            2.25,\n            -2.3,\n            0.3,\n            2.025,\n            -3,\n            0.3,\n            2.25,\n            -2.7,\n            0.3,\n            2.025,\n            -3,\n            0.3,\n            1.8,\n            -2.7,\n            0.3,\n            1.8,\n            -2.7,\n            0,\n            1.575,\n            -2.7,\n            -0.3,\n            1.575,\n            -3,\n            -0.3,\n            1.35,\n            -3,\n            0,\n            1.35,\n            -2.5,\n            0,\n            1.125,\n            -2.5,\n            -0.3,\n            1.125,\n            -2.65,\n            -0.3,\n            0.9375,\n            -2.65,\n            0,\n            0.9375,\n            -2,\n            -0.3,\n            0.9,\n            -1.9,\n            -0.3,\n            0.6,\n            -1.9,\n            0,\n            0.6,\n            -3,\n            0.3,\n            1.35,\n            -2.7,\n            0.3,\n            1.575,\n            -2.65,\n            0.3,\n            0.9375,\n            -2.5,\n            0.3,\n            1.125,\n            -1.9,\n            0.3,\n            0.6,\n            -2,\n            0.3,\n            0.9,\n            1.7,\n            0,\n            1.425,\n            1.7,\n            -0.66,\n            1.425,\n            1.7,\n            -0.66,\n            0.6,\n            1.7,\n            0,\n            0.6,\n            2.6,\n            0,\n            1.425,\n            2.6,\n            -0.66,\n            1.425,\n            3.1,\n            -0.66,\n            0.825,\n            3.1,\n            0,\n            0.825,\n            2.3,\n            0,\n            2.1,\n            2.3,\n            -0.25,\n            2.1,\n            2.4,\n            -0.25,\n            2.025,\n            2.4,\n            0,\n            2.025,\n            2.7,\n            0,\n            2.4,\n            2.7,\n            -0.25,\n            2.4,\n            3.3,\n            -0.25,\n            2.4,\n            3.3,\n            0,\n            2.4,\n            1.7,\n            0.66,\n            0.6,\n            1.7,\n            0.66,\n            1.425,\n            3.1,\n            0.66,\n            0.825,\n            2.6,\n            0.66,\n            1.425,\n            2.4,\n            0.25,\n            2.025,\n            2.3,\n            0.25,\n            2.1,\n            3.3,\n            0.25,\n            2.4,\n            2.7,\n            0.25,\n            2.4,\n            2.8,\n            0,\n            2.475,\n            2.8,\n            -0.25,\n            2.475,\n            3.525,\n            -0.25,\n            2.49375,\n            3.525,\n            0,\n            2.49375,\n            2.9,\n            0,\n            2.475,\n            2.9,\n            -0.15,\n            2.475,\n            3.45,\n            -0.15,\n            2.5125,\n            3.45,\n            0,\n            2.5125,\n            2.8,\n            0,\n            2.4,\n            2.8,\n            -0.15,\n            2.4,\n            3.2,\n            -0.15,\n            2.4,\n            3.2,\n            0,\n            2.4,\n            3.525,\n            0.25,\n            2.49375,\n            2.8,\n            0.25,\n            2.475,\n            3.45,\n            0.15,\n            2.5125,\n            2.9,\n            0.15,\n            2.475,\n            3.2,\n            0.15,\n            2.4,\n            2.8,\n            0.15,\n            2.4,\n            0,\n            0,\n            3.15,\n            0.8,\n            0,\n            3.15,\n            0.8,\n            -0.45,\n            3.15,\n            0.45,\n            -0.8,\n            3.15,\n            0,\n            -0.8,\n            3.15,\n            0,\n            0,\n            2.85,\n            0.2,\n            0,\n            2.7,\n            0.2,\n            -0.112,\n            2.7,\n            0.112,\n            -0.2,\n            2.7,\n            0,\n            -0.2,\n            2.7,\n            -0.45,\n            -0.8,\n            3.15,\n            -0.8,\n            -0.45,\n            3.15,\n            -0.8,\n            0,\n            3.15,\n            -0.112,\n            -0.2,\n            2.7,\n            -0.2,\n            -0.112,\n            2.7,\n            -0.2,\n            0,\n            2.7,\n            -0.8,\n            0.45,\n            3.15,\n            -0.45,\n            0.8,\n            3.15,\n            0,\n            0.8,\n            3.15,\n            -0.2,\n            0.112,\n            2.7,\n            -0.112,\n            0.2,\n            2.7,\n            0,\n            0.2,\n            2.7,\n            0.45,\n            0.8,\n            3.15,\n            0.8,\n            0.45,\n            3.15,\n            0.112,\n            0.2,\n            2.7,\n            0.2,\n            0.112,\n            2.7,\n            0.4,\n            0,\n            2.55,\n            0.4,\n            -0.224,\n            2.55,\n            0.224,\n            -0.4,\n            2.55,\n            0,\n            -0.4,\n            2.55,\n            1.3,\n            0,\n            2.55,\n            1.3,\n            -0.728,\n            2.55,\n            0.728,\n            -1.3,\n            2.55,\n            0,\n            -1.3,\n            2.55,\n            1.3,\n            0,\n            2.4,\n            1.3,\n            -0.728,\n            2.4,\n            0.728,\n            -1.3,\n            2.4,\n            0,\n            -1.3,\n            2.4,\n            -0.224,\n            -0.4,\n            2.55,\n            -0.4,\n            -0.224,\n            2.55,\n            -0.4,\n            0,\n            2.55,\n            -0.728,\n            -1.3,\n            2.55,\n            -1.3,\n            -0.728,\n            2.55,\n            -1.3,\n            0,\n            2.55,\n            -0.728,\n            -1.3,\n            2.4,\n            -1.3,\n            -0.728,\n            2.4,\n            -1.3,\n            0,\n            2.4,\n            -0.4,\n            0.224,\n            2.55,\n            -0.224,\n            0.4,\n            2.55,\n            0,\n            0.4,\n            2.55,\n            -1.3,\n            0.728,\n            2.55,\n            -0.728,\n            1.3,\n            2.55,\n            0,\n            1.3,\n            2.55,\n            -1.3,\n            0.728,\n            2.4,\n            -0.728,\n            1.3,\n            2.4,\n            0,\n            1.3,\n            2.4,\n            0.224,\n            0.4,\n            2.55,\n            0.4,\n            0.224,\n            2.55,\n            0.728,\n            1.3,\n            2.55,\n            1.3,\n            0.728,\n            2.55,\n            0.728,\n            1.3,\n            2.4,\n            1.3,\n            0.728,\n            2.4,\n            0,\n            0,\n            0,\n            1.425,\n            0,\n            0,\n            1.425,\n            0.798,\n            0,\n            0.798,\n            1.425,\n            0,\n            0,\n            1.425,\n            0,\n            1.5,\n            0,\n            0.075,\n            1.5,\n            0.84,\n            0.075,\n            0.84,\n            1.5,\n            0.075,\n            0,\n            1.5,\n            0.075,\n            -0.798,\n            1.425,\n            0,\n            -1.425,\n            0.798,\n            0,\n            -1.425,\n            0,\n            0,\n            -0.84,\n            1.5,\n            0.075,\n            -1.5,\n            0.84,\n            0.075,\n            -1.5,\n            0,\n            0.075,\n            -1.425,\n            -0.798,\n            0,\n            -0.798,\n            -1.425,\n            0,\n            0,\n            -1.425,\n            0,\n            -1.5,\n            -0.84,\n            0.075,\n            -0.84,\n            -1.5,\n            0.075,\n            0,\n            -1.5,\n            0.075,\n            0.798,\n            -1.425,\n            0,\n            1.425,\n            -0.798,\n            0,\n            0.84,\n            -1.5,\n            0.075,\n            1.5,\n            -0.84,\n            0.075\n        ];\n        THREE.BufferGeometry.call(this);\n        size = size || 50;\n        segments = segments !== undefined ? Math.max(2, Math.floor(segments) || 10) : 10;\n        bottom = bottom === undefined ? true : bottom;\n        lid = lid === undefined ? true : lid;\n        body = body === undefined ? true : body;\n        fitLid = fitLid === undefined ? true : fitLid;\n        var blinnScale = 1.3;\n        blinn = blinn === undefined ? true : blinn;\n        var maxHeight = 3.15 * (blinn ? 1 : blinnScale);\n        var maxHeight2 = maxHeight / 2;\n        var trueSize = size / maxHeight2;\n        var numTriangles = bottom ? (8 * segments - 4) * segments : 0;\n        numTriangles += lid ? (16 * segments - 4) * segments : 0;\n        numTriangles += body ? 40 * segments * segments : 0;\n        var indices = new Uint32Array(numTriangles * 3);\n        var numVertices = bottom ? 4 : 0;\n        numVertices += lid ? 8 : 0;\n        numVertices += body ? 20 : 0;\n        numVertices *= (segments + 1) * (segments + 1);\n        var vertices = new Float32Array(numVertices * 3);\n        var normals = new Float32Array(numVertices * 3);\n        var uvs = new Float32Array(numVertices * 2);\n        var ms = new THREE.Matrix4();\n        ms.set(-1, 3, -3, 1, 3, -6, 3, 0, -3, 3, 0, 0, 1, 0, 0, 0);\n        var g = [];\n        var i, r, c;\n        var sp = [];\n        var tp = [];\n        var dsp = [];\n        var dtp = [];\n        var mgm = [];\n        var vert = [];\n        var sdir = [];\n        var tdir = [];\n        var norm = new THREE.Vector3();\n        var tcoord;\n        var sstep, tstep;\n        var vertPerRow;\n        var s, t, sval, tval, p;\n        var dsval = 0;\n        var dtval = 0;\n        var normOut = new THREE.Vector3();\n        var v1, v2, v3, v4;\n        var gmx = new THREE.Matrix4();\n        var tmtx = new THREE.Matrix4();\n        var vsp = new THREE.Vector4();\n        var vtp = new THREE.Vector4();\n        var vdsp = new THREE.Vector4();\n        var vdtp = new THREE.Vector4();\n        var vsdir = new THREE.Vector3();\n        var vtdir = new THREE.Vector3();\n        var mst = ms.clone();\n        mst.transpose();\n        var notDegenerate = function (vtx1, vtx2, vtx3) {\n            return !(vertices[vtx1 * 3] === vertices[vtx2 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx2 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx2 * 3 + 2] || vertices[vtx1 * 3] === vertices[vtx3 * 3] && vertices[vtx1 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx1 * 3 + 2] === vertices[vtx3 * 3 + 2] || vertices[vtx2 * 3] === vertices[vtx3 * 3] && vertices[vtx2 * 3 + 1] === vertices[vtx3 * 3 + 1] && vertices[vtx2 * 3 + 2] === vertices[vtx3 * 3 + 2]);\n        };\n        for (i = 0; i < 3; i++) {\n            mgm[i] = new THREE.Matrix4();\n        }\n        var minPatches = body ? 0 : 20;\n        var maxPatches = bottom ? 32 : 28;\n        vertPerRow = segments + 1;\n        var surfCount = 0;\n        var vertCount = 0;\n        var normCount = 0;\n        var uvCount = 0;\n        var indexCount = 0;\n        for (var surf = minPatches; surf < maxPatches; surf++) {\n            if (lid || (surf < 20 || surf >= 28)) {\n                for (i = 0; i < 3; i++) {\n                    for (r = 0; r < 4; r++) {\n                        for (c = 0; c < 4; c++) {\n                            g[c * 4 + r] = teapotVertices[teapotPatches[surf * 16 + r * 4 + c] * 3 + i];\n                            if (fitLid && (surf >= 20 && surf < 28) && i !== 2) {\n                                g[c * 4 + r] *= 1.077;\n                            }\n                            if (!blinn && i === 2) {\n                                g[c * 4 + r] *= blinnScale;\n                            }\n                        }\n                    }\n                    gmx.set(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]);\n                    tmtx.multiplyMatrices(gmx, ms);\n                    mgm[i].multiplyMatrices(mst, tmtx);\n                }\n                for (sstep = 0; sstep <= segments; sstep++) {\n                    s = sstep / segments;\n                    for (tstep = 0; tstep <= segments; tstep++) {\n                        t = tstep / segments;\n                        for (p = 4, sval = tval = 1; p--;) {\n                            sp[p] = sval;\n                            tp[p] = tval;\n                            sval *= s;\n                            tval *= t;\n                            if (p === 3) {\n                                dsp[p] = dtp[p] = 0;\n                                dsval = dtval = 1;\n                            } else {\n                                dsp[p] = dsval * (3 - p);\n                                dtp[p] = dtval * (3 - p);\n                                dsval *= s;\n                                dtval *= t;\n                            }\n                        }\n                        vsp.fromArray(sp);\n                        vtp.fromArray(tp);\n                        vdsp.fromArray(dsp);\n                        vdtp.fromArray(dtp);\n                        for (i = 0; i < 3; i++) {\n                            tcoord = vsp.clone();\n                            tcoord.applyMatrix4(mgm[i]);\n                            vert[i] = tcoord.dot(vtp);\n                            tcoord = vdsp.clone();\n                            tcoord.applyMatrix4(mgm[i]);\n                            sdir[i] = tcoord.dot(vtp);\n                            tcoord = vsp.clone();\n                            tcoord.applyMatrix4(mgm[i]);\n                            tdir[i] = tcoord.dot(vdtp);\n                        }\n                        vsdir.fromArray(sdir);\n                        vtdir.fromArray(tdir);\n                        norm.crossVectors(vtdir, vsdir);\n                        norm.normalize();\n                        if (vert[0] === 0 && vert[1] === 0) {\n                            normOut.set(0, vert[2] > maxHeight2 ? 1 : -1, 0);\n                        } else {\n                            normOut.set(norm.x, norm.z, -norm.y);\n                        }\n                        vertices[vertCount++] = trueSize * vert[0];\n                        vertices[vertCount++] = trueSize * (vert[2] - maxHeight2);\n                        vertices[vertCount++] = -trueSize * vert[1];\n                        normals[normCount++] = normOut.x;\n                        normals[normCount++] = normOut.y;\n                        normals[normCount++] = normOut.z;\n                        uvs[uvCount++] = 1 - t;\n                        uvs[uvCount++] = 1 - s;\n                    }\n                }\n                for (sstep = 0; sstep < segments; sstep++) {\n                    for (tstep = 0; tstep < segments; tstep++) {\n                        v1 = surfCount * vertPerRow * vertPerRow + sstep * vertPerRow + tstep;\n                        v2 = v1 + 1;\n                        v3 = v2 + vertPerRow;\n                        v4 = v1 + vertPerRow;\n                        if (notDegenerate(v1, v2, v3)) {\n                            indices[indexCount++] = v1;\n                            indices[indexCount++] = v2;\n                            indices[indexCount++] = v3;\n                        }\n                        if (notDegenerate(v1, v3, v4)) {\n                            indices[indexCount++] = v1;\n                            indices[indexCount++] = v3;\n                            indices[indexCount++] = v4;\n                        }\n                    }\n                }\n                surfCount++;\n            }\n        }\n        this.setIndex(new THREE.BufferAttribute(indices, 1));\n        this.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        this.setAttribute('normal', new THREE.BufferAttribute(normals, 3));\n        this.setAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n        this.computeBoundingSphere();\n    };\n    TeapotBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n    TeapotBufferGeometry.prototype.constructor = TeapotBufferGeometry;\n\n    return threex.geometries.TeapotBufferGeometry = TeapotBufferGeometry;\n});"]}