{"version":3,"sources":["geometries/ConvexBufferGeometry.js"],"names":["define","THREE","ConvexHull","ConvexBufferGeometry","points","BufferGeometry","call","this","vertices","normals","undefined","console","error","faces","setFromPoints","i","length","face","edge","point","head","push","x","y","z","normal","next","setAttribute","Float32BufferAttribute","prototype","Object","create","constructor"],"mappings":";;;;;;;AAAAA,QACI,kBACA,sBACD,SAAUC,EAAOC,GAChB,aACA,IAAIC,EAAuB,SAAUC,GACjCH,EAAMI,eAAeC,KAAKC,MAC1B,IAAIC,KACAC,UACeC,IAAfR,GACAS,QAAQC,MAAM,yEAIlB,IAFA,IACIC,GADa,IAAIX,GAAaY,cAAcV,GACzBS,MACdE,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAAK,CACnC,IAAIE,EAAOJ,EAAME,GACbG,EAAOD,EAAKC,KAChB,EAAG,CACC,IAAIC,EAAQD,EAAKE,OAAOD,MACxBX,EAASa,KAAKF,EAAMG,EAAGH,EAAMI,EAAGJ,EAAMK,GACtCf,EAAQY,KAAKJ,EAAKQ,OAAOH,EAAGL,EAAKQ,OAAOF,EAAGN,EAAKQ,OAAOD,GACvDN,EAAOA,EAAKQ,WACPR,IAASD,EAAKC,MAE3BX,KAAKoB,aAAa,WAAY,IAAI1B,EAAM2B,uBAAuBpB,EAAU,IACzED,KAAKoB,aAAa,SAAU,IAAI1B,EAAM2B,uBAAuBnB,EAAS,KAI1E,OAFAN,EAAqB0B,UAAYC,OAAOC,OAAO9B,EAAMI,eAAewB,YACrCG,YAAc7B,EACtCA","file":"../../geometries/ConvexBufferGeometry.js","sourcesContent":["define([\n    \"skylark-threejs\",\n    '../math/ConvexHull'\n], function (THREE, ConvexHull) {\n    'use strict';\n    var ConvexBufferGeometry = function (points) {\n        THREE.BufferGeometry.call(this);\n        var vertices = [];\n        var normals = [];\n        if (ConvexHull === undefined) {\n            console.error('THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull');\n        }\n        var convexHull = new ConvexHull().setFromPoints(points);\n        var faces = convexHull.faces;\n        for (var i = 0; i < faces.length; i++) {\n            var face = faces[i];\n            var edge = face.edge;\n            do {\n                var point = edge.head().point;\n                vertices.push(point.x, point.y, point.z);\n                normals.push(face.normal.x, face.normal.y, face.normal.z);\n                edge = edge.next;\n            } while (edge !== face.edge);\n        }\n        this.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n        this.setAttribute('normal', new THREE.Float32BufferAttribute(normals, 3));\n    };\n    ConvexBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n    ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\n    return ConvexBufferGeometry;\n});"]}